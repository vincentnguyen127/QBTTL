'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("TimeLiveDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class TimeLiveDataSet
    Inherits Global.System.Data.DataSet
    
    Private tableAccountParty As AccountPartyDataTable
    
    Private tableAccountProjectTaskEmployee As AccountProjectTaskEmployeeDataTable
    
    Private tableAccountProjectEmployee As AccountProjectEmployeeDataTable
    
    Private tableAccountEmployeeTimeEntryPeriod As AccountEmployeeTimeEntryPeriodDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("AccountParty")) Is Nothing) Then
                MyBase.Tables.Add(New AccountPartyDataTable(ds.Tables("AccountParty")))
            End If
            If (Not (ds.Tables("AccountProjectTaskEmployee")) Is Nothing) Then
                MyBase.Tables.Add(New AccountProjectTaskEmployeeDataTable(ds.Tables("AccountProjectTaskEmployee")))
            End If
            If (Not (ds.Tables("AccountProjectEmployee")) Is Nothing) Then
                MyBase.Tables.Add(New AccountProjectEmployeeDataTable(ds.Tables("AccountProjectEmployee")))
            End If
            If (Not (ds.Tables("AccountEmployeeTimeEntryPeriod")) Is Nothing) Then
                MyBase.Tables.Add(New AccountEmployeeTimeEntryPeriodDataTable(ds.Tables("AccountEmployeeTimeEntryPeriod")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property AccountParty() As AccountPartyDataTable
        Get
            Return Me.tableAccountParty
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property AccountProjectTaskEmployee() As AccountProjectTaskEmployeeDataTable
        Get
            Return Me.tableAccountProjectTaskEmployee
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property AccountProjectEmployee() As AccountProjectEmployeeDataTable
        Get
            Return Me.tableAccountProjectEmployee
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property AccountEmployeeTimeEntryPeriod() As AccountEmployeeTimeEntryPeriodDataTable
        Get
            Return Me.tableAccountEmployeeTimeEntryPeriod
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As TimeLiveDataSet = CType(MyBase.Clone,TimeLiveDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("AccountParty")) Is Nothing) Then
                MyBase.Tables.Add(New AccountPartyDataTable(ds.Tables("AccountParty")))
            End If
            If (Not (ds.Tables("AccountProjectTaskEmployee")) Is Nothing) Then
                MyBase.Tables.Add(New AccountProjectTaskEmployeeDataTable(ds.Tables("AccountProjectTaskEmployee")))
            End If
            If (Not (ds.Tables("AccountProjectEmployee")) Is Nothing) Then
                MyBase.Tables.Add(New AccountProjectEmployeeDataTable(ds.Tables("AccountProjectEmployee")))
            End If
            If (Not (ds.Tables("AccountEmployeeTimeEntryPeriod")) Is Nothing) Then
                MyBase.Tables.Add(New AccountEmployeeTimeEntryPeriodDataTable(ds.Tables("AccountEmployeeTimeEntryPeriod")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableAccountParty = CType(MyBase.Tables("AccountParty"),AccountPartyDataTable)
        If (initTable = true) Then
            If (Not (Me.tableAccountParty) Is Nothing) Then
                Me.tableAccountParty.InitVars
            End If
        End If
        Me.tableAccountProjectTaskEmployee = CType(MyBase.Tables("AccountProjectTaskEmployee"),AccountProjectTaskEmployeeDataTable)
        If (initTable = true) Then
            If (Not (Me.tableAccountProjectTaskEmployee) Is Nothing) Then
                Me.tableAccountProjectTaskEmployee.InitVars
            End If
        End If
        Me.tableAccountProjectEmployee = CType(MyBase.Tables("AccountProjectEmployee"),AccountProjectEmployeeDataTable)
        If (initTable = true) Then
            If (Not (Me.tableAccountProjectEmployee) Is Nothing) Then
                Me.tableAccountProjectEmployee.InitVars
            End If
        End If
        Me.tableAccountEmployeeTimeEntryPeriod = CType(MyBase.Tables("AccountEmployeeTimeEntryPeriod"),AccountEmployeeTimeEntryPeriodDataTable)
        If (initTable = true) Then
            If (Not (Me.tableAccountEmployeeTimeEntryPeriod) Is Nothing) Then
                Me.tableAccountEmployeeTimeEntryPeriod.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "TimeLiveDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/TimeLiveDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableAccountParty = New AccountPartyDataTable()
        MyBase.Tables.Add(Me.tableAccountParty)
        Me.tableAccountProjectTaskEmployee = New AccountProjectTaskEmployeeDataTable()
        MyBase.Tables.Add(Me.tableAccountProjectTaskEmployee)
        Me.tableAccountProjectEmployee = New AccountProjectEmployeeDataTable()
        MyBase.Tables.Add(Me.tableAccountProjectEmployee)
        Me.tableAccountEmployeeTimeEntryPeriod = New AccountEmployeeTimeEntryPeriodDataTable()
        MyBase.Tables.Add(Me.tableAccountEmployeeTimeEntryPeriod)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeAccountParty() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeAccountProjectTaskEmployee() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeAccountProjectEmployee() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeAccountEmployeeTimeEntryPeriod() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As TimeLiveDataSet = New TimeLiveDataSet()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub AccountPartyRowChangeEventHandler(ByVal sender As Object, ByVal e As AccountPartyRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub AccountProjectTaskEmployeeRowChangeEventHandler(ByVal sender As Object, ByVal e As AccountProjectTaskEmployeeRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub AccountProjectEmployeeRowChangeEventHandler(ByVal sender As Object, ByVal e As AccountProjectEmployeeRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub AccountEmployeeTimeEntryPeriodRowChangeEventHandler(ByVal sender As Object, ByVal e As AccountEmployeeTimeEntryPeriodRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class AccountPartyDataTable
        Inherits Global.System.Data.TypedTableBase(Of AccountPartyRow)
        
        Private columnAccountPartyId As Global.System.Data.DataColumn
        
        Private columnPartyTypeId As Global.System.Data.DataColumn
        
        Private columnAccountId As Global.System.Data.DataColumn
        
        Private columnPartyName As Global.System.Data.DataColumn
        
        Private columnPartyNick As Global.System.Data.DataColumn
        
        Private columnEMailAddress As Global.System.Data.DataColumn
        
        Private columnAddress1 As Global.System.Data.DataColumn
        
        Private columnAddress2 As Global.System.Data.DataColumn
        
        Private columnCountryId As Global.System.Data.DataColumn
        
        Private columnState As Global.System.Data.DataColumn
        
        Private columnCity As Global.System.Data.DataColumn
        
        Private columnZipCode As Global.System.Data.DataColumn
        
        Private columnTelephone1 As Global.System.Data.DataColumn
        
        Private columnTelephone2 As Global.System.Data.DataColumn
        
        Private columnFax As Global.System.Data.DataColumn
        
        Private columnDefaultCurrencyId As Global.System.Data.DataColumn
        
        Private columnDefaultBillingRate As Global.System.Data.DataColumn
        
        Private columnWebsite As Global.System.Data.DataColumn
        
        Private columnNotes As Global.System.Data.DataColumn
        
        Private columnIsDisabled As Global.System.Data.DataColumn
        
        Private columnIsDeleted As Global.System.Data.DataColumn
        
        Private columnCreatedOn As Global.System.Data.DataColumn
        
        Private columnCreatedByEmployeeId As Global.System.Data.DataColumn
        
        Private columnModifiedOn As Global.System.Data.DataColumn
        
        Private columnModifiedByEmployeeId As Global.System.Data.DataColumn
        
        Private columnCustomField1 As Global.System.Data.DataColumn
        
        Private columnCustomField2 As Global.System.Data.DataColumn
        
        Private columnCustomField3 As Global.System.Data.DataColumn
        
        Private columnCustomField4 As Global.System.Data.DataColumn
        
        Private columnCustomField5 As Global.System.Data.DataColumn
        
        Private columnCustomField6 As Global.System.Data.DataColumn
        
        Private columnCustomField7 As Global.System.Data.DataColumn
        
        Private columnCustomField8 As Global.System.Data.DataColumn
        
        Private columnCustomField9 As Global.System.Data.DataColumn
        
        Private columnCustomField10 As Global.System.Data.DataColumn
        
        Private columnCustomField11 As Global.System.Data.DataColumn
        
        Private columnCustomField12 As Global.System.Data.DataColumn
        
        Private columnCustomField13 As Global.System.Data.DataColumn
        
        Private columnCustomField14 As Global.System.Data.DataColumn
        
        Private columnCustomField15 As Global.System.Data.DataColumn
        
        Private columnFixedBidBillingMode As Global.System.Data.DataColumn
        
        Private columnFixedCost As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "AccountParty"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AccountPartyIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccountPartyId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PartyTypeIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPartyTypeId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AccountIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccountId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PartyNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPartyName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PartyNickColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPartyNick
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EMailAddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMailAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Address1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddress1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Address2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddress2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CountryIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCountryId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnState
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ZipCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZipCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Telephone1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTelephone1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Telephone2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTelephone2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FaxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFax
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DefaultCurrencyIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDefaultCurrencyId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DefaultBillingRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDefaultBillingRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WebsiteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWebsite
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NotesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNotes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IsDisabledColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsDisabled
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IsDeletedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsDeleted
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CreatedOnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCreatedOn
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CreatedByEmployeeIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCreatedByEmployeeId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ModifiedOnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnModifiedOn
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ModifiedByEmployeeIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnModifiedByEmployeeId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CustomField1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomField1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CustomField2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomField2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CustomField3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomField3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CustomField4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomField4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CustomField5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomField5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CustomField6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomField6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CustomField7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomField7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CustomField8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomField8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CustomField9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomField9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CustomField10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomField10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CustomField11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomField11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CustomField12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomField12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CustomField13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomField13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CustomField14Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomField14
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CustomField15Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomField15
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FixedBidBillingModeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFixedBidBillingMode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FixedCostColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFixedCost
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As AccountPartyRow
            Get
                Return CType(Me.Rows(index),AccountPartyRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event AccountPartyRowChanging As AccountPartyRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event AccountPartyRowChanged As AccountPartyRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event AccountPartyRowDeleting As AccountPartyRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event AccountPartyRowDeleted As AccountPartyRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddAccountPartyRow(ByVal row As AccountPartyRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddAccountPartyRow( _
                    ByVal PartyTypeId As Short,  _
                    ByVal AccountId As Integer,  _
                    ByVal PartyName As String,  _
                    ByVal PartyNick As String,  _
                    ByVal EMailAddress As String,  _
                    ByVal Address1 As String,  _
                    ByVal Address2 As String,  _
                    ByVal CountryId As Short,  _
                    ByVal State As String,  _
                    ByVal City As String,  _
                    ByVal ZipCode As String,  _
                    ByVal Telephone1 As String,  _
                    ByVal Telephone2 As String,  _
                    ByVal Fax As String,  _
                    ByVal DefaultCurrencyId As Short,  _
                    ByVal DefaultBillingRate As Decimal,  _
                    ByVal Website As String,  _
                    ByVal Notes As String,  _
                    ByVal IsDisabled As Boolean,  _
                    ByVal IsDeleted As Boolean,  _
                    ByVal CreatedOn As Date,  _
                    ByVal CreatedByEmployeeId As Integer,  _
                    ByVal ModifiedOn As Date,  _
                    ByVal ModifiedByEmployeeId As Integer,  _
                    ByVal CustomField1 As String,  _
                    ByVal CustomField2 As String,  _
                    ByVal CustomField3 As String,  _
                    ByVal CustomField4 As String,  _
                    ByVal CustomField5 As String,  _
                    ByVal CustomField6 As String,  _
                    ByVal CustomField7 As String,  _
                    ByVal CustomField8 As String,  _
                    ByVal CustomField9 As String,  _
                    ByVal CustomField10 As String,  _
                    ByVal CustomField11 As String,  _
                    ByVal CustomField12 As String,  _
                    ByVal CustomField13 As String,  _
                    ByVal CustomField14 As String,  _
                    ByVal CustomField15 As String,  _
                    ByVal FixedBidBillingMode As Integer,  _
                    ByVal FixedCost As Double) As AccountPartyRow
            Dim rowAccountPartyRow As AccountPartyRow = CType(Me.NewRow,AccountPartyRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PartyTypeId, AccountId, PartyName, PartyNick, EMailAddress, Address1, Address2, CountryId, State, City, ZipCode, Telephone1, Telephone2, Fax, DefaultCurrencyId, DefaultBillingRate, Website, Notes, IsDisabled, IsDeleted, CreatedOn, CreatedByEmployeeId, ModifiedOn, ModifiedByEmployeeId, CustomField1, CustomField2, CustomField3, CustomField4, CustomField5, CustomField6, CustomField7, CustomField8, CustomField9, CustomField10, CustomField11, CustomField12, CustomField13, CustomField14, CustomField15, FixedBidBillingMode, FixedCost}
            rowAccountPartyRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowAccountPartyRow)
            Return rowAccountPartyRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByAccountPartyId(ByVal AccountPartyId As Integer) As AccountPartyRow
            Return CType(Me.Rows.Find(New Object() {AccountPartyId}),AccountPartyRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As AccountPartyDataTable = CType(MyBase.Clone,AccountPartyDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New AccountPartyDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnAccountPartyId = MyBase.Columns("AccountPartyId")
            Me.columnPartyTypeId = MyBase.Columns("PartyTypeId")
            Me.columnAccountId = MyBase.Columns("AccountId")
            Me.columnPartyName = MyBase.Columns("PartyName")
            Me.columnPartyNick = MyBase.Columns("PartyNick")
            Me.columnEMailAddress = MyBase.Columns("EMailAddress")
            Me.columnAddress1 = MyBase.Columns("Address1")
            Me.columnAddress2 = MyBase.Columns("Address2")
            Me.columnCountryId = MyBase.Columns("CountryId")
            Me.columnState = MyBase.Columns("State")
            Me.columnCity = MyBase.Columns("City")
            Me.columnZipCode = MyBase.Columns("ZipCode")
            Me.columnTelephone1 = MyBase.Columns("Telephone1")
            Me.columnTelephone2 = MyBase.Columns("Telephone2")
            Me.columnFax = MyBase.Columns("Fax")
            Me.columnDefaultCurrencyId = MyBase.Columns("DefaultCurrencyId")
            Me.columnDefaultBillingRate = MyBase.Columns("DefaultBillingRate")
            Me.columnWebsite = MyBase.Columns("Website")
            Me.columnNotes = MyBase.Columns("Notes")
            Me.columnIsDisabled = MyBase.Columns("IsDisabled")
            Me.columnIsDeleted = MyBase.Columns("IsDeleted")
            Me.columnCreatedOn = MyBase.Columns("CreatedOn")
            Me.columnCreatedByEmployeeId = MyBase.Columns("CreatedByEmployeeId")
            Me.columnModifiedOn = MyBase.Columns("ModifiedOn")
            Me.columnModifiedByEmployeeId = MyBase.Columns("ModifiedByEmployeeId")
            Me.columnCustomField1 = MyBase.Columns("CustomField1")
            Me.columnCustomField2 = MyBase.Columns("CustomField2")
            Me.columnCustomField3 = MyBase.Columns("CustomField3")
            Me.columnCustomField4 = MyBase.Columns("CustomField4")
            Me.columnCustomField5 = MyBase.Columns("CustomField5")
            Me.columnCustomField6 = MyBase.Columns("CustomField6")
            Me.columnCustomField7 = MyBase.Columns("CustomField7")
            Me.columnCustomField8 = MyBase.Columns("CustomField8")
            Me.columnCustomField9 = MyBase.Columns("CustomField9")
            Me.columnCustomField10 = MyBase.Columns("CustomField10")
            Me.columnCustomField11 = MyBase.Columns("CustomField11")
            Me.columnCustomField12 = MyBase.Columns("CustomField12")
            Me.columnCustomField13 = MyBase.Columns("CustomField13")
            Me.columnCustomField14 = MyBase.Columns("CustomField14")
            Me.columnCustomField15 = MyBase.Columns("CustomField15")
            Me.columnFixedBidBillingMode = MyBase.Columns("FixedBidBillingMode")
            Me.columnFixedCost = MyBase.Columns("FixedCost")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnAccountPartyId = New Global.System.Data.DataColumn("AccountPartyId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccountPartyId)
            Me.columnPartyTypeId = New Global.System.Data.DataColumn("PartyTypeId", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPartyTypeId)
            Me.columnAccountId = New Global.System.Data.DataColumn("AccountId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccountId)
            Me.columnPartyName = New Global.System.Data.DataColumn("PartyName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPartyName)
            Me.columnPartyNick = New Global.System.Data.DataColumn("PartyNick", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPartyNick)
            Me.columnEMailAddress = New Global.System.Data.DataColumn("EMailAddress", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMailAddress)
            Me.columnAddress1 = New Global.System.Data.DataColumn("Address1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddress1)
            Me.columnAddress2 = New Global.System.Data.DataColumn("Address2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddress2)
            Me.columnCountryId = New Global.System.Data.DataColumn("CountryId", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCountryId)
            Me.columnState = New Global.System.Data.DataColumn("State", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnState)
            Me.columnCity = New Global.System.Data.DataColumn("City", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCity)
            Me.columnZipCode = New Global.System.Data.DataColumn("ZipCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZipCode)
            Me.columnTelephone1 = New Global.System.Data.DataColumn("Telephone1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTelephone1)
            Me.columnTelephone2 = New Global.System.Data.DataColumn("Telephone2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTelephone2)
            Me.columnFax = New Global.System.Data.DataColumn("Fax", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFax)
            Me.columnDefaultCurrencyId = New Global.System.Data.DataColumn("DefaultCurrencyId", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDefaultCurrencyId)
            Me.columnDefaultBillingRate = New Global.System.Data.DataColumn("DefaultBillingRate", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDefaultBillingRate)
            Me.columnWebsite = New Global.System.Data.DataColumn("Website", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWebsite)
            Me.columnNotes = New Global.System.Data.DataColumn("Notes", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNotes)
            Me.columnIsDisabled = New Global.System.Data.DataColumn("IsDisabled", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsDisabled)
            Me.columnIsDeleted = New Global.System.Data.DataColumn("IsDeleted", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsDeleted)
            Me.columnCreatedOn = New Global.System.Data.DataColumn("CreatedOn", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCreatedOn)
            Me.columnCreatedByEmployeeId = New Global.System.Data.DataColumn("CreatedByEmployeeId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCreatedByEmployeeId)
            Me.columnModifiedOn = New Global.System.Data.DataColumn("ModifiedOn", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModifiedOn)
            Me.columnModifiedByEmployeeId = New Global.System.Data.DataColumn("ModifiedByEmployeeId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModifiedByEmployeeId)
            Me.columnCustomField1 = New Global.System.Data.DataColumn("CustomField1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomField1)
            Me.columnCustomField2 = New Global.System.Data.DataColumn("CustomField2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomField2)
            Me.columnCustomField3 = New Global.System.Data.DataColumn("CustomField3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomField3)
            Me.columnCustomField4 = New Global.System.Data.DataColumn("CustomField4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomField4)
            Me.columnCustomField5 = New Global.System.Data.DataColumn("CustomField5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomField5)
            Me.columnCustomField6 = New Global.System.Data.DataColumn("CustomField6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomField6)
            Me.columnCustomField7 = New Global.System.Data.DataColumn("CustomField7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomField7)
            Me.columnCustomField8 = New Global.System.Data.DataColumn("CustomField8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomField8)
            Me.columnCustomField9 = New Global.System.Data.DataColumn("CustomField9", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomField9)
            Me.columnCustomField10 = New Global.System.Data.DataColumn("CustomField10", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomField10)
            Me.columnCustomField11 = New Global.System.Data.DataColumn("CustomField11", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomField11)
            Me.columnCustomField12 = New Global.System.Data.DataColumn("CustomField12", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomField12)
            Me.columnCustomField13 = New Global.System.Data.DataColumn("CustomField13", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomField13)
            Me.columnCustomField14 = New Global.System.Data.DataColumn("CustomField14", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomField14)
            Me.columnCustomField15 = New Global.System.Data.DataColumn("CustomField15", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomField15)
            Me.columnFixedBidBillingMode = New Global.System.Data.DataColumn("FixedBidBillingMode", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFixedBidBillingMode)
            Me.columnFixedCost = New Global.System.Data.DataColumn("FixedCost", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFixedCost)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnAccountPartyId}, true))
            Me.columnAccountPartyId.AutoIncrement = true
            Me.columnAccountPartyId.AutoIncrementSeed = -1
            Me.columnAccountPartyId.AutoIncrementStep = -1
            Me.columnAccountPartyId.AllowDBNull = false
            Me.columnAccountPartyId.ReadOnly = true
            Me.columnAccountPartyId.Unique = true
            Me.columnPartyTypeId.AllowDBNull = false
            Me.columnAccountId.AllowDBNull = false
            Me.columnPartyName.AllowDBNull = false
            Me.columnPartyName.MaxLength = 400
            Me.columnPartyNick.AllowDBNull = false
            Me.columnPartyNick.MaxLength = 100
            Me.columnEMailAddress.MaxLength = 100
            Me.columnAddress1.MaxLength = 500
            Me.columnAddress2.MaxLength = 500
            Me.columnState.MaxLength = 50
            Me.columnCity.MaxLength = 100
            Me.columnZipCode.MaxLength = 100
            Me.columnTelephone1.MaxLength = 100
            Me.columnTelephone2.MaxLength = 100
            Me.columnFax.MaxLength = 100
            Me.columnWebsite.MaxLength = 200
            Me.columnNotes.MaxLength = 1000
            Me.columnIsDisabled.AllowDBNull = false
            Me.columnIsDeleted.AllowDBNull = false
            Me.columnCreatedOn.AllowDBNull = false
            Me.columnCreatedByEmployeeId.AllowDBNull = false
            Me.columnModifiedOn.AllowDBNull = false
            Me.columnModifiedByEmployeeId.AllowDBNull = false
            Me.columnCustomField1.MaxLength = 2000
            Me.columnCustomField2.MaxLength = 2000
            Me.columnCustomField3.MaxLength = 2000
            Me.columnCustomField4.MaxLength = 2000
            Me.columnCustomField5.MaxLength = 2000
            Me.columnCustomField6.MaxLength = 2000
            Me.columnCustomField7.MaxLength = 2000
            Me.columnCustomField8.MaxLength = 2000
            Me.columnCustomField9.MaxLength = 2000
            Me.columnCustomField10.MaxLength = 2000
            Me.columnCustomField11.MaxLength = 2000
            Me.columnCustomField12.MaxLength = 2000
            Me.columnCustomField13.MaxLength = 2000
            Me.columnCustomField14.MaxLength = 2000
            Me.columnCustomField15.MaxLength = 2000
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewAccountPartyRow() As AccountPartyRow
            Return CType(Me.NewRow,AccountPartyRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New AccountPartyRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(AccountPartyRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.AccountPartyRowChangedEvent) Is Nothing) Then
                RaiseEvent AccountPartyRowChanged(Me, New AccountPartyRowChangeEvent(CType(e.Row,AccountPartyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.AccountPartyRowChangingEvent) Is Nothing) Then
                RaiseEvent AccountPartyRowChanging(Me, New AccountPartyRowChangeEvent(CType(e.Row,AccountPartyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.AccountPartyRowDeletedEvent) Is Nothing) Then
                RaiseEvent AccountPartyRowDeleted(Me, New AccountPartyRowChangeEvent(CType(e.Row,AccountPartyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.AccountPartyRowDeletingEvent) Is Nothing) Then
                RaiseEvent AccountPartyRowDeleting(Me, New AccountPartyRowChangeEvent(CType(e.Row,AccountPartyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveAccountPartyRow(ByVal row As AccountPartyRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As TimeLiveDataSet = New TimeLiveDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "AccountPartyDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class AccountProjectTaskEmployeeDataTable
        Inherits Global.System.Data.TypedTableBase(Of AccountProjectTaskEmployeeRow)
        
        Private columnAccountProjectTaskEmployeeId As Global.System.Data.DataColumn
        
        Private columnAccountId As Global.System.Data.DataColumn
        
        Private columnAccountProjectTaskId As Global.System.Data.DataColumn
        
        Private columnAccountEmployeeId As Global.System.Data.DataColumn
        
        Private columnAllocationUnits As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "AccountProjectTaskEmployee"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AccountProjectTaskEmployeeIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccountProjectTaskEmployeeId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AccountIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccountId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AccountProjectTaskIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccountProjectTaskId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AccountEmployeeIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccountEmployeeId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AllocationUnitsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAllocationUnits
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As AccountProjectTaskEmployeeRow
            Get
                Return CType(Me.Rows(index),AccountProjectTaskEmployeeRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event AccountProjectTaskEmployeeRowChanging As AccountProjectTaskEmployeeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event AccountProjectTaskEmployeeRowChanged As AccountProjectTaskEmployeeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event AccountProjectTaskEmployeeRowDeleting As AccountProjectTaskEmployeeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event AccountProjectTaskEmployeeRowDeleted As AccountProjectTaskEmployeeRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddAccountProjectTaskEmployeeRow(ByVal row As AccountProjectTaskEmployeeRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddAccountProjectTaskEmployeeRow(ByVal AccountId As Integer, ByVal AccountProjectTaskId As Long, ByVal AccountEmployeeId As Integer, ByVal AllocationUnits As Decimal) As AccountProjectTaskEmployeeRow
            Dim rowAccountProjectTaskEmployeeRow As AccountProjectTaskEmployeeRow = CType(Me.NewRow,AccountProjectTaskEmployeeRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, AccountId, AccountProjectTaskId, AccountEmployeeId, AllocationUnits}
            rowAccountProjectTaskEmployeeRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowAccountProjectTaskEmployeeRow)
            Return rowAccountProjectTaskEmployeeRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByAccountProjectTaskEmployeeId(ByVal AccountProjectTaskEmployeeId As Long) As AccountProjectTaskEmployeeRow
            Return CType(Me.Rows.Find(New Object() {AccountProjectTaskEmployeeId}),AccountProjectTaskEmployeeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As AccountProjectTaskEmployeeDataTable = CType(MyBase.Clone,AccountProjectTaskEmployeeDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New AccountProjectTaskEmployeeDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnAccountProjectTaskEmployeeId = MyBase.Columns("AccountProjectTaskEmployeeId")
            Me.columnAccountId = MyBase.Columns("AccountId")
            Me.columnAccountProjectTaskId = MyBase.Columns("AccountProjectTaskId")
            Me.columnAccountEmployeeId = MyBase.Columns("AccountEmployeeId")
            Me.columnAllocationUnits = MyBase.Columns("AllocationUnits")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnAccountProjectTaskEmployeeId = New Global.System.Data.DataColumn("AccountProjectTaskEmployeeId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccountProjectTaskEmployeeId)
            Me.columnAccountId = New Global.System.Data.DataColumn("AccountId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccountId)
            Me.columnAccountProjectTaskId = New Global.System.Data.DataColumn("AccountProjectTaskId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccountProjectTaskId)
            Me.columnAccountEmployeeId = New Global.System.Data.DataColumn("AccountEmployeeId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccountEmployeeId)
            Me.columnAllocationUnits = New Global.System.Data.DataColumn("AllocationUnits", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAllocationUnits)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnAccountProjectTaskEmployeeId}, true))
            Me.columnAccountProjectTaskEmployeeId.AutoIncrement = true
            Me.columnAccountProjectTaskEmployeeId.AutoIncrementSeed = -1
            Me.columnAccountProjectTaskEmployeeId.AutoIncrementStep = -1
            Me.columnAccountProjectTaskEmployeeId.AllowDBNull = false
            Me.columnAccountProjectTaskEmployeeId.ReadOnly = true
            Me.columnAccountProjectTaskEmployeeId.Unique = true
            Me.columnAccountId.AllowDBNull = false
            Me.columnAccountProjectTaskId.AllowDBNull = false
            Me.columnAccountEmployeeId.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewAccountProjectTaskEmployeeRow() As AccountProjectTaskEmployeeRow
            Return CType(Me.NewRow,AccountProjectTaskEmployeeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New AccountProjectTaskEmployeeRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(AccountProjectTaskEmployeeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.AccountProjectTaskEmployeeRowChangedEvent) Is Nothing) Then
                RaiseEvent AccountProjectTaskEmployeeRowChanged(Me, New AccountProjectTaskEmployeeRowChangeEvent(CType(e.Row,AccountProjectTaskEmployeeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.AccountProjectTaskEmployeeRowChangingEvent) Is Nothing) Then
                RaiseEvent AccountProjectTaskEmployeeRowChanging(Me, New AccountProjectTaskEmployeeRowChangeEvent(CType(e.Row,AccountProjectTaskEmployeeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.AccountProjectTaskEmployeeRowDeletedEvent) Is Nothing) Then
                RaiseEvent AccountProjectTaskEmployeeRowDeleted(Me, New AccountProjectTaskEmployeeRowChangeEvent(CType(e.Row,AccountProjectTaskEmployeeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.AccountProjectTaskEmployeeRowDeletingEvent) Is Nothing) Then
                RaiseEvent AccountProjectTaskEmployeeRowDeleting(Me, New AccountProjectTaskEmployeeRowChangeEvent(CType(e.Row,AccountProjectTaskEmployeeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveAccountProjectTaskEmployeeRow(ByVal row As AccountProjectTaskEmployeeRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As TimeLiveDataSet = New TimeLiveDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "AccountProjectTaskEmployeeDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class AccountProjectEmployeeDataTable
        Inherits Global.System.Data.TypedTableBase(Of AccountProjectEmployeeRow)
        
        Private columnAccountProjectEmployeeId As Global.System.Data.DataColumn
        
        Private columnAccountId As Global.System.Data.DataColumn
        
        Private columnAccountProjectId As Global.System.Data.DataColumn
        
        Private columnAccountEmployeeId As Global.System.Data.DataColumn
        
        Private columnTaskCompletedPercentage As Global.System.Data.DataColumn
        
        Private columnTaskCompleted As Global.System.Data.DataColumn
        
        Private columnAccountRoleId As Global.System.Data.DataColumn
        
        Private columnAccountBillingRateId As Global.System.Data.DataColumn
        
        Private columnAccountProjectEmployeeTemplateId As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "AccountProjectEmployee"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AccountProjectEmployeeIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccountProjectEmployeeId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AccountIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccountId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AccountProjectIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccountProjectId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AccountEmployeeIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccountEmployeeId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TaskCompletedPercentageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTaskCompletedPercentage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TaskCompletedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTaskCompleted
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AccountRoleIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccountRoleId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AccountBillingRateIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccountBillingRateId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AccountProjectEmployeeTemplateIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccountProjectEmployeeTemplateId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As AccountProjectEmployeeRow
            Get
                Return CType(Me.Rows(index),AccountProjectEmployeeRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event AccountProjectEmployeeRowChanging As AccountProjectEmployeeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event AccountProjectEmployeeRowChanged As AccountProjectEmployeeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event AccountProjectEmployeeRowDeleting As AccountProjectEmployeeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event AccountProjectEmployeeRowDeleted As AccountProjectEmployeeRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddAccountProjectEmployeeRow(ByVal row As AccountProjectEmployeeRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddAccountProjectEmployeeRow(ByVal AccountId As Integer, ByVal AccountProjectId As Integer, ByVal AccountEmployeeId As Integer, ByVal TaskCompletedPercentage As Short, ByVal TaskCompleted As Boolean, ByVal AccountRoleId As Integer, ByVal AccountBillingRateId As Integer, ByVal AccountProjectEmployeeTemplateId As Long) As AccountProjectEmployeeRow
            Dim rowAccountProjectEmployeeRow As AccountProjectEmployeeRow = CType(Me.NewRow,AccountProjectEmployeeRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, AccountId, AccountProjectId, AccountEmployeeId, TaskCompletedPercentage, TaskCompleted, AccountRoleId, AccountBillingRateId, AccountProjectEmployeeTemplateId}
            rowAccountProjectEmployeeRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowAccountProjectEmployeeRow)
            Return rowAccountProjectEmployeeRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByAccountProjectEmployeeId(ByVal AccountProjectEmployeeId As Long) As AccountProjectEmployeeRow
            Return CType(Me.Rows.Find(New Object() {AccountProjectEmployeeId}),AccountProjectEmployeeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As AccountProjectEmployeeDataTable = CType(MyBase.Clone,AccountProjectEmployeeDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New AccountProjectEmployeeDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnAccountProjectEmployeeId = MyBase.Columns("AccountProjectEmployeeId")
            Me.columnAccountId = MyBase.Columns("AccountId")
            Me.columnAccountProjectId = MyBase.Columns("AccountProjectId")
            Me.columnAccountEmployeeId = MyBase.Columns("AccountEmployeeId")
            Me.columnTaskCompletedPercentage = MyBase.Columns("TaskCompletedPercentage")
            Me.columnTaskCompleted = MyBase.Columns("TaskCompleted")
            Me.columnAccountRoleId = MyBase.Columns("AccountRoleId")
            Me.columnAccountBillingRateId = MyBase.Columns("AccountBillingRateId")
            Me.columnAccountProjectEmployeeTemplateId = MyBase.Columns("AccountProjectEmployeeTemplateId")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnAccountProjectEmployeeId = New Global.System.Data.DataColumn("AccountProjectEmployeeId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccountProjectEmployeeId)
            Me.columnAccountId = New Global.System.Data.DataColumn("AccountId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccountId)
            Me.columnAccountProjectId = New Global.System.Data.DataColumn("AccountProjectId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccountProjectId)
            Me.columnAccountEmployeeId = New Global.System.Data.DataColumn("AccountEmployeeId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccountEmployeeId)
            Me.columnTaskCompletedPercentage = New Global.System.Data.DataColumn("TaskCompletedPercentage", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTaskCompletedPercentage)
            Me.columnTaskCompleted = New Global.System.Data.DataColumn("TaskCompleted", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTaskCompleted)
            Me.columnAccountRoleId = New Global.System.Data.DataColumn("AccountRoleId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccountRoleId)
            Me.columnAccountBillingRateId = New Global.System.Data.DataColumn("AccountBillingRateId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccountBillingRateId)
            Me.columnAccountProjectEmployeeTemplateId = New Global.System.Data.DataColumn("AccountProjectEmployeeTemplateId", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccountProjectEmployeeTemplateId)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnAccountProjectEmployeeId}, true))
            Me.columnAccountProjectEmployeeId.AutoIncrement = true
            Me.columnAccountProjectEmployeeId.AutoIncrementSeed = -1
            Me.columnAccountProjectEmployeeId.AutoIncrementStep = -1
            Me.columnAccountProjectEmployeeId.AllowDBNull = false
            Me.columnAccountProjectEmployeeId.ReadOnly = true
            Me.columnAccountProjectEmployeeId.Unique = true
            Me.columnAccountProjectId.AllowDBNull = false
            Me.columnAccountEmployeeId.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewAccountProjectEmployeeRow() As AccountProjectEmployeeRow
            Return CType(Me.NewRow,AccountProjectEmployeeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New AccountProjectEmployeeRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(AccountProjectEmployeeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.AccountProjectEmployeeRowChangedEvent) Is Nothing) Then
                RaiseEvent AccountProjectEmployeeRowChanged(Me, New AccountProjectEmployeeRowChangeEvent(CType(e.Row,AccountProjectEmployeeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.AccountProjectEmployeeRowChangingEvent) Is Nothing) Then
                RaiseEvent AccountProjectEmployeeRowChanging(Me, New AccountProjectEmployeeRowChangeEvent(CType(e.Row,AccountProjectEmployeeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.AccountProjectEmployeeRowDeletedEvent) Is Nothing) Then
                RaiseEvent AccountProjectEmployeeRowDeleted(Me, New AccountProjectEmployeeRowChangeEvent(CType(e.Row,AccountProjectEmployeeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.AccountProjectEmployeeRowDeletingEvent) Is Nothing) Then
                RaiseEvent AccountProjectEmployeeRowDeleting(Me, New AccountProjectEmployeeRowChangeEvent(CType(e.Row,AccountProjectEmployeeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveAccountProjectEmployeeRow(ByVal row As AccountProjectEmployeeRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As TimeLiveDataSet = New TimeLiveDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "AccountProjectEmployeeDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class AccountEmployeeTimeEntryPeriodDataTable
        Inherits Global.System.Data.TypedTableBase(Of AccountEmployeeTimeEntryPeriodRow)
        
        Private columnAccountEmployeeTimeEntryPeriodId As Global.System.Data.DataColumn
        
        Private columnAccountId As Global.System.Data.DataColumn
        
        Private columnAccountEmployeeId As Global.System.Data.DataColumn
        
        Private columnTimeEntryStartDate As Global.System.Data.DataColumn
        
        Private columnTimeEntryEndDate As Global.System.Data.DataColumn
        
        Private columnTimeEntryViewType As Global.System.Data.DataColumn
        
        Private columnSubmitted As Global.System.Data.DataColumn
        
        Private columnApproved As Global.System.Data.DataColumn
        
        Private columnRejected As Global.System.Data.DataColumn
        
        Private columnInApproval As Global.System.Data.DataColumn
        
        Private columnSubmittedDate As Global.System.Data.DataColumn
        
        Private columnApprovedOn As Global.System.Data.DataColumn
        
        Private columnApprovedByEmployeeId As Global.System.Data.DataColumn
        
        Private columnRejectedOn As Global.System.Data.DataColumn
        
        Private columnRejectedByEmployeeId As Global.System.Data.DataColumn
        
        Private columnSubmittedBy As Global.System.Data.DataColumn
        
        Private columnCreatedByEmployeeId As Global.System.Data.DataColumn
        
        Private columnModifiedByEmployeeId As Global.System.Data.DataColumn
        
        Private columnPeriodDescription As Global.System.Data.DataColumn
        
        Private columnCreatedOn As Global.System.Data.DataColumn
        
        Private columnModifiedOn As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "AccountEmployeeTimeEntryPeriod"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AccountEmployeeTimeEntryPeriodIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccountEmployeeTimeEntryPeriodId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AccountIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccountId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AccountEmployeeIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccountEmployeeId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TimeEntryStartDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTimeEntryStartDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TimeEntryEndDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTimeEntryEndDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TimeEntryViewTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTimeEntryViewType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SubmittedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubmitted
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ApprovedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnApproved
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RejectedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRejected
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property InApprovalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInApproval
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SubmittedDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubmittedDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ApprovedOnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnApprovedOn
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ApprovedByEmployeeIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnApprovedByEmployeeId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RejectedOnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRejectedOn
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RejectedByEmployeeIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRejectedByEmployeeId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SubmittedByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubmittedBy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CreatedByEmployeeIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCreatedByEmployeeId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ModifiedByEmployeeIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnModifiedByEmployeeId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PeriodDescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPeriodDescription
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CreatedOnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCreatedOn
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ModifiedOnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnModifiedOn
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As AccountEmployeeTimeEntryPeriodRow
            Get
                Return CType(Me.Rows(index),AccountEmployeeTimeEntryPeriodRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event AccountEmployeeTimeEntryPeriodRowChanging As AccountEmployeeTimeEntryPeriodRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event AccountEmployeeTimeEntryPeriodRowChanged As AccountEmployeeTimeEntryPeriodRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event AccountEmployeeTimeEntryPeriodRowDeleting As AccountEmployeeTimeEntryPeriodRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event AccountEmployeeTimeEntryPeriodRowDeleted As AccountEmployeeTimeEntryPeriodRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddAccountEmployeeTimeEntryPeriodRow(ByVal row As AccountEmployeeTimeEntryPeriodRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddAccountEmployeeTimeEntryPeriodRow( _
                    ByVal AccountEmployeeTimeEntryPeriodId As System.Guid,  _
                    ByVal AccountId As Integer,  _
                    ByVal AccountEmployeeId As Integer,  _
                    ByVal TimeEntryStartDate As Date,  _
                    ByVal TimeEntryEndDate As Date,  _
                    ByVal TimeEntryViewType As String,  _
                    ByVal Submitted As Boolean,  _
                    ByVal Approved As Boolean,  _
                    ByVal Rejected As Boolean,  _
                    ByVal InApproval As Boolean,  _
                    ByVal SubmittedDate As Date,  _
                    ByVal ApprovedOn As Date,  _
                    ByVal ApprovedByEmployeeId As Integer,  _
                    ByVal RejectedOn As Date,  _
                    ByVal RejectedByEmployeeId As Integer,  _
                    ByVal SubmittedBy As Integer,  _
                    ByVal CreatedByEmployeeId As Integer,  _
                    ByVal ModifiedByEmployeeId As Integer,  _
                    ByVal PeriodDescription As String,  _
                    ByVal CreatedOn As Date,  _
                    ByVal ModifiedOn As Date) As AccountEmployeeTimeEntryPeriodRow
            Dim rowAccountEmployeeTimeEntryPeriodRow As AccountEmployeeTimeEntryPeriodRow = CType(Me.NewRow,AccountEmployeeTimeEntryPeriodRow)
            Dim columnValuesArray() As Object = New Object() {AccountEmployeeTimeEntryPeriodId, AccountId, AccountEmployeeId, TimeEntryStartDate, TimeEntryEndDate, TimeEntryViewType, Submitted, Approved, Rejected, InApproval, SubmittedDate, ApprovedOn, ApprovedByEmployeeId, RejectedOn, RejectedByEmployeeId, SubmittedBy, CreatedByEmployeeId, ModifiedByEmployeeId, PeriodDescription, CreatedOn, ModifiedOn}
            rowAccountEmployeeTimeEntryPeriodRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowAccountEmployeeTimeEntryPeriodRow)
            Return rowAccountEmployeeTimeEntryPeriodRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByAccountEmployeeTimeEntryPeriodId(ByVal AccountEmployeeTimeEntryPeriodId As System.Guid) As AccountEmployeeTimeEntryPeriodRow
            Return CType(Me.Rows.Find(New Object() {AccountEmployeeTimeEntryPeriodId}),AccountEmployeeTimeEntryPeriodRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As AccountEmployeeTimeEntryPeriodDataTable = CType(MyBase.Clone,AccountEmployeeTimeEntryPeriodDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New AccountEmployeeTimeEntryPeriodDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnAccountEmployeeTimeEntryPeriodId = MyBase.Columns("AccountEmployeeTimeEntryPeriodId")
            Me.columnAccountId = MyBase.Columns("AccountId")
            Me.columnAccountEmployeeId = MyBase.Columns("AccountEmployeeId")
            Me.columnTimeEntryStartDate = MyBase.Columns("TimeEntryStartDate")
            Me.columnTimeEntryEndDate = MyBase.Columns("TimeEntryEndDate")
            Me.columnTimeEntryViewType = MyBase.Columns("TimeEntryViewType")
            Me.columnSubmitted = MyBase.Columns("Submitted")
            Me.columnApproved = MyBase.Columns("Approved")
            Me.columnRejected = MyBase.Columns("Rejected")
            Me.columnInApproval = MyBase.Columns("InApproval")
            Me.columnSubmittedDate = MyBase.Columns("SubmittedDate")
            Me.columnApprovedOn = MyBase.Columns("ApprovedOn")
            Me.columnApprovedByEmployeeId = MyBase.Columns("ApprovedByEmployeeId")
            Me.columnRejectedOn = MyBase.Columns("RejectedOn")
            Me.columnRejectedByEmployeeId = MyBase.Columns("RejectedByEmployeeId")
            Me.columnSubmittedBy = MyBase.Columns("SubmittedBy")
            Me.columnCreatedByEmployeeId = MyBase.Columns("CreatedByEmployeeId")
            Me.columnModifiedByEmployeeId = MyBase.Columns("ModifiedByEmployeeId")
            Me.columnPeriodDescription = MyBase.Columns("PeriodDescription")
            Me.columnCreatedOn = MyBase.Columns("CreatedOn")
            Me.columnModifiedOn = MyBase.Columns("ModifiedOn")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnAccountEmployeeTimeEntryPeriodId = New Global.System.Data.DataColumn("AccountEmployeeTimeEntryPeriodId", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccountEmployeeTimeEntryPeriodId)
            Me.columnAccountId = New Global.System.Data.DataColumn("AccountId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccountId)
            Me.columnAccountEmployeeId = New Global.System.Data.DataColumn("AccountEmployeeId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccountEmployeeId)
            Me.columnTimeEntryStartDate = New Global.System.Data.DataColumn("TimeEntryStartDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTimeEntryStartDate)
            Me.columnTimeEntryEndDate = New Global.System.Data.DataColumn("TimeEntryEndDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTimeEntryEndDate)
            Me.columnTimeEntryViewType = New Global.System.Data.DataColumn("TimeEntryViewType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTimeEntryViewType)
            Me.columnSubmitted = New Global.System.Data.DataColumn("Submitted", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubmitted)
            Me.columnApproved = New Global.System.Data.DataColumn("Approved", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnApproved)
            Me.columnRejected = New Global.System.Data.DataColumn("Rejected", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRejected)
            Me.columnInApproval = New Global.System.Data.DataColumn("InApproval", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInApproval)
            Me.columnSubmittedDate = New Global.System.Data.DataColumn("SubmittedDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubmittedDate)
            Me.columnApprovedOn = New Global.System.Data.DataColumn("ApprovedOn", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnApprovedOn)
            Me.columnApprovedByEmployeeId = New Global.System.Data.DataColumn("ApprovedByEmployeeId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnApprovedByEmployeeId)
            Me.columnRejectedOn = New Global.System.Data.DataColumn("RejectedOn", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRejectedOn)
            Me.columnRejectedByEmployeeId = New Global.System.Data.DataColumn("RejectedByEmployeeId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRejectedByEmployeeId)
            Me.columnSubmittedBy = New Global.System.Data.DataColumn("SubmittedBy", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubmittedBy)
            Me.columnCreatedByEmployeeId = New Global.System.Data.DataColumn("CreatedByEmployeeId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCreatedByEmployeeId)
            Me.columnModifiedByEmployeeId = New Global.System.Data.DataColumn("ModifiedByEmployeeId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModifiedByEmployeeId)
            Me.columnPeriodDescription = New Global.System.Data.DataColumn("PeriodDescription", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPeriodDescription)
            Me.columnCreatedOn = New Global.System.Data.DataColumn("CreatedOn", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCreatedOn)
            Me.columnModifiedOn = New Global.System.Data.DataColumn("ModifiedOn", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModifiedOn)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnAccountEmployeeTimeEntryPeriodId}, true))
            Me.columnAccountEmployeeTimeEntryPeriodId.AllowDBNull = false
            Me.columnAccountEmployeeTimeEntryPeriodId.Unique = true
            Me.columnAccountId.AllowDBNull = false
            Me.columnAccountEmployeeId.AllowDBNull = false
            Me.columnTimeEntryStartDate.AllowDBNull = false
            Me.columnTimeEntryEndDate.AllowDBNull = false
            Me.columnTimeEntryViewType.AllowDBNull = false
            Me.columnTimeEntryViewType.MaxLength = 50
            Me.columnSubmitted.AllowDBNull = false
            Me.columnApproved.AllowDBNull = false
            Me.columnRejected.AllowDBNull = false
            Me.columnInApproval.AllowDBNull = false
            Me.columnPeriodDescription.MaxLength = 2000
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewAccountEmployeeTimeEntryPeriodRow() As AccountEmployeeTimeEntryPeriodRow
            Return CType(Me.NewRow,AccountEmployeeTimeEntryPeriodRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New AccountEmployeeTimeEntryPeriodRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(AccountEmployeeTimeEntryPeriodRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.AccountEmployeeTimeEntryPeriodRowChangedEvent) Is Nothing) Then
                RaiseEvent AccountEmployeeTimeEntryPeriodRowChanged(Me, New AccountEmployeeTimeEntryPeriodRowChangeEvent(CType(e.Row,AccountEmployeeTimeEntryPeriodRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.AccountEmployeeTimeEntryPeriodRowChangingEvent) Is Nothing) Then
                RaiseEvent AccountEmployeeTimeEntryPeriodRowChanging(Me, New AccountEmployeeTimeEntryPeriodRowChangeEvent(CType(e.Row,AccountEmployeeTimeEntryPeriodRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.AccountEmployeeTimeEntryPeriodRowDeletedEvent) Is Nothing) Then
                RaiseEvent AccountEmployeeTimeEntryPeriodRowDeleted(Me, New AccountEmployeeTimeEntryPeriodRowChangeEvent(CType(e.Row,AccountEmployeeTimeEntryPeriodRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.AccountEmployeeTimeEntryPeriodRowDeletingEvent) Is Nothing) Then
                RaiseEvent AccountEmployeeTimeEntryPeriodRowDeleting(Me, New AccountEmployeeTimeEntryPeriodRowChangeEvent(CType(e.Row,AccountEmployeeTimeEntryPeriodRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveAccountEmployeeTimeEntryPeriodRow(ByVal row As AccountEmployeeTimeEntryPeriodRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As TimeLiveDataSet = New TimeLiveDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "AccountEmployeeTimeEntryPeriodDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class AccountPartyRow
        Inherits Global.System.Data.DataRow
        
        Private tableAccountParty As AccountPartyDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableAccountParty = CType(Me.Table,AccountPartyDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AccountPartyId() As Integer
            Get
                Return CType(Me(Me.tableAccountParty.AccountPartyIdColumn),Integer)
            End Get
            Set
                Me(Me.tableAccountParty.AccountPartyIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PartyTypeId() As Short
            Get
                Return CType(Me(Me.tableAccountParty.PartyTypeIdColumn),Short)
            End Get
            Set
                Me(Me.tableAccountParty.PartyTypeIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AccountId() As Integer
            Get
                Return CType(Me(Me.tableAccountParty.AccountIdColumn),Integer)
            End Get
            Set
                Me(Me.tableAccountParty.AccountIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PartyName() As String
            Get
                Return CType(Me(Me.tableAccountParty.PartyNameColumn),String)
            End Get
            Set
                Me(Me.tableAccountParty.PartyNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PartyNick() As String
            Get
                Return CType(Me(Me.tableAccountParty.PartyNickColumn),String)
            End Get
            Set
                Me(Me.tableAccountParty.PartyNickColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EMailAddress() As String
            Get
                Try 
                    Return CType(Me(Me.tableAccountParty.EMailAddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMailAddress' in table 'AccountParty' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountParty.EMailAddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Address1() As String
            Get
                Try 
                    Return CType(Me(Me.tableAccountParty.Address1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Address1' in table 'AccountParty' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountParty.Address1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Address2() As String
            Get
                Try 
                    Return CType(Me(Me.tableAccountParty.Address2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Address2' in table 'AccountParty' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountParty.Address2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CountryId() As Short
            Get
                Try 
                    Return CType(Me(Me.tableAccountParty.CountryIdColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CountryId' in table 'AccountParty' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountParty.CountryIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property State() As String
            Get
                Try 
                    Return CType(Me(Me.tableAccountParty.StateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'State' in table 'AccountParty' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountParty.StateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property City() As String
            Get
                Try 
                    Return CType(Me(Me.tableAccountParty.CityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'City' in table 'AccountParty' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountParty.CityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ZipCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableAccountParty.ZipCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZipCode' in table 'AccountParty' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountParty.ZipCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Telephone1() As String
            Get
                Try 
                    Return CType(Me(Me.tableAccountParty.Telephone1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Telephone1' in table 'AccountParty' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountParty.Telephone1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Telephone2() As String
            Get
                Try 
                    Return CType(Me(Me.tableAccountParty.Telephone2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Telephone2' in table 'AccountParty' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountParty.Telephone2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Fax() As String
            Get
                Try 
                    Return CType(Me(Me.tableAccountParty.FaxColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Fax' in table 'AccountParty' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountParty.FaxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DefaultCurrencyId() As Short
            Get
                Try 
                    Return CType(Me(Me.tableAccountParty.DefaultCurrencyIdColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DefaultCurrencyId' in table 'AccountParty' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountParty.DefaultCurrencyIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DefaultBillingRate() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableAccountParty.DefaultBillingRateColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DefaultBillingRate' in table 'AccountParty' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountParty.DefaultBillingRateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Website() As String
            Get
                Try 
                    Return CType(Me(Me.tableAccountParty.WebsiteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Website' in table 'AccountParty' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountParty.WebsiteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Notes() As String
            Get
                Try 
                    Return CType(Me(Me.tableAccountParty.NotesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Notes' in table 'AccountParty' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountParty.NotesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IsDisabled() As Boolean
            Get
                Return CType(Me(Me.tableAccountParty.IsDisabledColumn),Boolean)
            End Get
            Set
                Me(Me.tableAccountParty.IsDisabledColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IsDeleted() As Boolean
            Get
                Return CType(Me(Me.tableAccountParty.IsDeletedColumn),Boolean)
            End Get
            Set
                Me(Me.tableAccountParty.IsDeletedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CreatedOn() As Date
            Get
                Return CType(Me(Me.tableAccountParty.CreatedOnColumn),Date)
            End Get
            Set
                Me(Me.tableAccountParty.CreatedOnColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CreatedByEmployeeId() As Integer
            Get
                Return CType(Me(Me.tableAccountParty.CreatedByEmployeeIdColumn),Integer)
            End Get
            Set
                Me(Me.tableAccountParty.CreatedByEmployeeIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ModifiedOn() As Date
            Get
                Return CType(Me(Me.tableAccountParty.ModifiedOnColumn),Date)
            End Get
            Set
                Me(Me.tableAccountParty.ModifiedOnColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ModifiedByEmployeeId() As Integer
            Get
                Return CType(Me(Me.tableAccountParty.ModifiedByEmployeeIdColumn),Integer)
            End Get
            Set
                Me(Me.tableAccountParty.ModifiedByEmployeeIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CustomField1() As String
            Get
                Try 
                    Return CType(Me(Me.tableAccountParty.CustomField1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustomField1' in table 'AccountParty' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountParty.CustomField1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CustomField2() As String
            Get
                Try 
                    Return CType(Me(Me.tableAccountParty.CustomField2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustomField2' in table 'AccountParty' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountParty.CustomField2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CustomField3() As String
            Get
                Try 
                    Return CType(Me(Me.tableAccountParty.CustomField3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustomField3' in table 'AccountParty' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountParty.CustomField3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CustomField4() As String
            Get
                Try 
                    Return CType(Me(Me.tableAccountParty.CustomField4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustomField4' in table 'AccountParty' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountParty.CustomField4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CustomField5() As String
            Get
                Try 
                    Return CType(Me(Me.tableAccountParty.CustomField5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustomField5' in table 'AccountParty' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountParty.CustomField5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CustomField6() As String
            Get
                Try 
                    Return CType(Me(Me.tableAccountParty.CustomField6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustomField6' in table 'AccountParty' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountParty.CustomField6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CustomField7() As String
            Get
                Try 
                    Return CType(Me(Me.tableAccountParty.CustomField7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustomField7' in table 'AccountParty' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountParty.CustomField7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CustomField8() As String
            Get
                Try 
                    Return CType(Me(Me.tableAccountParty.CustomField8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustomField8' in table 'AccountParty' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountParty.CustomField8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CustomField9() As String
            Get
                Try 
                    Return CType(Me(Me.tableAccountParty.CustomField9Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustomField9' in table 'AccountParty' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountParty.CustomField9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CustomField10() As String
            Get
                Try 
                    Return CType(Me(Me.tableAccountParty.CustomField10Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustomField10' in table 'AccountParty' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountParty.CustomField10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CustomField11() As String
            Get
                Try 
                    Return CType(Me(Me.tableAccountParty.CustomField11Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustomField11' in table 'AccountParty' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountParty.CustomField11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CustomField12() As String
            Get
                Try 
                    Return CType(Me(Me.tableAccountParty.CustomField12Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustomField12' in table 'AccountParty' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountParty.CustomField12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CustomField13() As String
            Get
                Try 
                    Return CType(Me(Me.tableAccountParty.CustomField13Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustomField13' in table 'AccountParty' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountParty.CustomField13Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CustomField14() As String
            Get
                Try 
                    Return CType(Me(Me.tableAccountParty.CustomField14Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustomField14' in table 'AccountParty' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountParty.CustomField14Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CustomField15() As String
            Get
                Try 
                    Return CType(Me(Me.tableAccountParty.CustomField15Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustomField15' in table 'AccountParty' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountParty.CustomField15Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FixedBidBillingMode() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableAccountParty.FixedBidBillingModeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FixedBidBillingMode' in table 'AccountParty' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountParty.FixedBidBillingModeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FixedCost() As Double
            Get
                Try 
                    Return CType(Me(Me.tableAccountParty.FixedCostColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FixedCost' in table 'AccountParty' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountParty.FixedCostColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEMailAddressNull() As Boolean
            Return Me.IsNull(Me.tableAccountParty.EMailAddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEMailAddressNull()
            Me(Me.tableAccountParty.EMailAddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAddress1Null() As Boolean
            Return Me.IsNull(Me.tableAccountParty.Address1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAddress1Null()
            Me(Me.tableAccountParty.Address1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAddress2Null() As Boolean
            Return Me.IsNull(Me.tableAccountParty.Address2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAddress2Null()
            Me(Me.tableAccountParty.Address2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCountryIdNull() As Boolean
            Return Me.IsNull(Me.tableAccountParty.CountryIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCountryIdNull()
            Me(Me.tableAccountParty.CountryIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStateNull() As Boolean
            Return Me.IsNull(Me.tableAccountParty.StateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStateNull()
            Me(Me.tableAccountParty.StateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCityNull() As Boolean
            Return Me.IsNull(Me.tableAccountParty.CityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCityNull()
            Me(Me.tableAccountParty.CityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsZipCodeNull() As Boolean
            Return Me.IsNull(Me.tableAccountParty.ZipCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetZipCodeNull()
            Me(Me.tableAccountParty.ZipCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTelephone1Null() As Boolean
            Return Me.IsNull(Me.tableAccountParty.Telephone1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTelephone1Null()
            Me(Me.tableAccountParty.Telephone1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTelephone2Null() As Boolean
            Return Me.IsNull(Me.tableAccountParty.Telephone2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTelephone2Null()
            Me(Me.tableAccountParty.Telephone2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFaxNull() As Boolean
            Return Me.IsNull(Me.tableAccountParty.FaxColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFaxNull()
            Me(Me.tableAccountParty.FaxColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDefaultCurrencyIdNull() As Boolean
            Return Me.IsNull(Me.tableAccountParty.DefaultCurrencyIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDefaultCurrencyIdNull()
            Me(Me.tableAccountParty.DefaultCurrencyIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDefaultBillingRateNull() As Boolean
            Return Me.IsNull(Me.tableAccountParty.DefaultBillingRateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDefaultBillingRateNull()
            Me(Me.tableAccountParty.DefaultBillingRateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWebsiteNull() As Boolean
            Return Me.IsNull(Me.tableAccountParty.WebsiteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWebsiteNull()
            Me(Me.tableAccountParty.WebsiteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNotesNull() As Boolean
            Return Me.IsNull(Me.tableAccountParty.NotesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNotesNull()
            Me(Me.tableAccountParty.NotesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCustomField1Null() As Boolean
            Return Me.IsNull(Me.tableAccountParty.CustomField1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCustomField1Null()
            Me(Me.tableAccountParty.CustomField1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCustomField2Null() As Boolean
            Return Me.IsNull(Me.tableAccountParty.CustomField2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCustomField2Null()
            Me(Me.tableAccountParty.CustomField2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCustomField3Null() As Boolean
            Return Me.IsNull(Me.tableAccountParty.CustomField3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCustomField3Null()
            Me(Me.tableAccountParty.CustomField3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCustomField4Null() As Boolean
            Return Me.IsNull(Me.tableAccountParty.CustomField4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCustomField4Null()
            Me(Me.tableAccountParty.CustomField4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCustomField5Null() As Boolean
            Return Me.IsNull(Me.tableAccountParty.CustomField5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCustomField5Null()
            Me(Me.tableAccountParty.CustomField5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCustomField6Null() As Boolean
            Return Me.IsNull(Me.tableAccountParty.CustomField6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCustomField6Null()
            Me(Me.tableAccountParty.CustomField6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCustomField7Null() As Boolean
            Return Me.IsNull(Me.tableAccountParty.CustomField7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCustomField7Null()
            Me(Me.tableAccountParty.CustomField7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCustomField8Null() As Boolean
            Return Me.IsNull(Me.tableAccountParty.CustomField8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCustomField8Null()
            Me(Me.tableAccountParty.CustomField8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCustomField9Null() As Boolean
            Return Me.IsNull(Me.tableAccountParty.CustomField9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCustomField9Null()
            Me(Me.tableAccountParty.CustomField9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCustomField10Null() As Boolean
            Return Me.IsNull(Me.tableAccountParty.CustomField10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCustomField10Null()
            Me(Me.tableAccountParty.CustomField10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCustomField11Null() As Boolean
            Return Me.IsNull(Me.tableAccountParty.CustomField11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCustomField11Null()
            Me(Me.tableAccountParty.CustomField11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCustomField12Null() As Boolean
            Return Me.IsNull(Me.tableAccountParty.CustomField12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCustomField12Null()
            Me(Me.tableAccountParty.CustomField12Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCustomField13Null() As Boolean
            Return Me.IsNull(Me.tableAccountParty.CustomField13Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCustomField13Null()
            Me(Me.tableAccountParty.CustomField13Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCustomField14Null() As Boolean
            Return Me.IsNull(Me.tableAccountParty.CustomField14Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCustomField14Null()
            Me(Me.tableAccountParty.CustomField14Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCustomField15Null() As Boolean
            Return Me.IsNull(Me.tableAccountParty.CustomField15Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCustomField15Null()
            Me(Me.tableAccountParty.CustomField15Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFixedBidBillingModeNull() As Boolean
            Return Me.IsNull(Me.tableAccountParty.FixedBidBillingModeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFixedBidBillingModeNull()
            Me(Me.tableAccountParty.FixedBidBillingModeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFixedCostNull() As Boolean
            Return Me.IsNull(Me.tableAccountParty.FixedCostColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFixedCostNull()
            Me(Me.tableAccountParty.FixedCostColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class AccountProjectTaskEmployeeRow
        Inherits Global.System.Data.DataRow
        
        Private tableAccountProjectTaskEmployee As AccountProjectTaskEmployeeDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableAccountProjectTaskEmployee = CType(Me.Table,AccountProjectTaskEmployeeDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AccountProjectTaskEmployeeId() As Long
            Get
                Return CType(Me(Me.tableAccountProjectTaskEmployee.AccountProjectTaskEmployeeIdColumn),Long)
            End Get
            Set
                Me(Me.tableAccountProjectTaskEmployee.AccountProjectTaskEmployeeIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AccountId() As Integer
            Get
                Return CType(Me(Me.tableAccountProjectTaskEmployee.AccountIdColumn),Integer)
            End Get
            Set
                Me(Me.tableAccountProjectTaskEmployee.AccountIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AccountProjectTaskId() As Long
            Get
                Return CType(Me(Me.tableAccountProjectTaskEmployee.AccountProjectTaskIdColumn),Long)
            End Get
            Set
                Me(Me.tableAccountProjectTaskEmployee.AccountProjectTaskIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AccountEmployeeId() As Integer
            Get
                Return CType(Me(Me.tableAccountProjectTaskEmployee.AccountEmployeeIdColumn),Integer)
            End Get
            Set
                Me(Me.tableAccountProjectTaskEmployee.AccountEmployeeIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AllocationUnits() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableAccountProjectTaskEmployee.AllocationUnitsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AllocationUnits' in table 'AccountProjectTaskEmployee' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountProjectTaskEmployee.AllocationUnitsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAllocationUnitsNull() As Boolean
            Return Me.IsNull(Me.tableAccountProjectTaskEmployee.AllocationUnitsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAllocationUnitsNull()
            Me(Me.tableAccountProjectTaskEmployee.AllocationUnitsColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class AccountProjectEmployeeRow
        Inherits Global.System.Data.DataRow
        
        Private tableAccountProjectEmployee As AccountProjectEmployeeDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableAccountProjectEmployee = CType(Me.Table,AccountProjectEmployeeDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AccountProjectEmployeeId() As Long
            Get
                Return CType(Me(Me.tableAccountProjectEmployee.AccountProjectEmployeeIdColumn),Long)
            End Get
            Set
                Me(Me.tableAccountProjectEmployee.AccountProjectEmployeeIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AccountId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableAccountProjectEmployee.AccountIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AccountId' in table 'AccountProjectEmployee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountProjectEmployee.AccountIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AccountProjectId() As Integer
            Get
                Return CType(Me(Me.tableAccountProjectEmployee.AccountProjectIdColumn),Integer)
            End Get
            Set
                Me(Me.tableAccountProjectEmployee.AccountProjectIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AccountEmployeeId() As Integer
            Get
                Return CType(Me(Me.tableAccountProjectEmployee.AccountEmployeeIdColumn),Integer)
            End Get
            Set
                Me(Me.tableAccountProjectEmployee.AccountEmployeeIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TaskCompletedPercentage() As Short
            Get
                Try 
                    Return CType(Me(Me.tableAccountProjectEmployee.TaskCompletedPercentageColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TaskCompletedPercentage' in table 'AccountProjectEmployee' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountProjectEmployee.TaskCompletedPercentageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TaskCompleted() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableAccountProjectEmployee.TaskCompletedColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TaskCompleted' in table 'AccountProjectEmployee' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountProjectEmployee.TaskCompletedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AccountRoleId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableAccountProjectEmployee.AccountRoleIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AccountRoleId' in table 'AccountProjectEmployee' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountProjectEmployee.AccountRoleIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AccountBillingRateId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableAccountProjectEmployee.AccountBillingRateIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AccountBillingRateId' in table 'AccountProjectEmployee' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountProjectEmployee.AccountBillingRateIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AccountProjectEmployeeTemplateId() As Long
            Get
                Try 
                    Return CType(Me(Me.tableAccountProjectEmployee.AccountProjectEmployeeTemplateIdColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AccountProjectEmployeeTemplateId' in table 'AccountProjectE"& _ 
                            "mployee' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountProjectEmployee.AccountProjectEmployeeTemplateIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAccountIdNull() As Boolean
            Return Me.IsNull(Me.tableAccountProjectEmployee.AccountIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAccountIdNull()
            Me(Me.tableAccountProjectEmployee.AccountIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTaskCompletedPercentageNull() As Boolean
            Return Me.IsNull(Me.tableAccountProjectEmployee.TaskCompletedPercentageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTaskCompletedPercentageNull()
            Me(Me.tableAccountProjectEmployee.TaskCompletedPercentageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTaskCompletedNull() As Boolean
            Return Me.IsNull(Me.tableAccountProjectEmployee.TaskCompletedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTaskCompletedNull()
            Me(Me.tableAccountProjectEmployee.TaskCompletedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAccountRoleIdNull() As Boolean
            Return Me.IsNull(Me.tableAccountProjectEmployee.AccountRoleIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAccountRoleIdNull()
            Me(Me.tableAccountProjectEmployee.AccountRoleIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAccountBillingRateIdNull() As Boolean
            Return Me.IsNull(Me.tableAccountProjectEmployee.AccountBillingRateIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAccountBillingRateIdNull()
            Me(Me.tableAccountProjectEmployee.AccountBillingRateIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAccountProjectEmployeeTemplateIdNull() As Boolean
            Return Me.IsNull(Me.tableAccountProjectEmployee.AccountProjectEmployeeTemplateIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAccountProjectEmployeeTemplateIdNull()
            Me(Me.tableAccountProjectEmployee.AccountProjectEmployeeTemplateIdColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class AccountEmployeeTimeEntryPeriodRow
        Inherits Global.System.Data.DataRow
        
        Private tableAccountEmployeeTimeEntryPeriod As AccountEmployeeTimeEntryPeriodDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableAccountEmployeeTimeEntryPeriod = CType(Me.Table,AccountEmployeeTimeEntryPeriodDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AccountEmployeeTimeEntryPeriodId() As System.Guid
            Get
                Return CType(Me(Me.tableAccountEmployeeTimeEntryPeriod.AccountEmployeeTimeEntryPeriodIdColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableAccountEmployeeTimeEntryPeriod.AccountEmployeeTimeEntryPeriodIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AccountId() As Integer
            Get
                Return CType(Me(Me.tableAccountEmployeeTimeEntryPeriod.AccountIdColumn),Integer)
            End Get
            Set
                Me(Me.tableAccountEmployeeTimeEntryPeriod.AccountIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AccountEmployeeId() As Integer
            Get
                Return CType(Me(Me.tableAccountEmployeeTimeEntryPeriod.AccountEmployeeIdColumn),Integer)
            End Get
            Set
                Me(Me.tableAccountEmployeeTimeEntryPeriod.AccountEmployeeIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TimeEntryStartDate() As Date
            Get
                Return CType(Me(Me.tableAccountEmployeeTimeEntryPeriod.TimeEntryStartDateColumn),Date)
            End Get
            Set
                Me(Me.tableAccountEmployeeTimeEntryPeriod.TimeEntryStartDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TimeEntryEndDate() As Date
            Get
                Return CType(Me(Me.tableAccountEmployeeTimeEntryPeriod.TimeEntryEndDateColumn),Date)
            End Get
            Set
                Me(Me.tableAccountEmployeeTimeEntryPeriod.TimeEntryEndDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TimeEntryViewType() As String
            Get
                Return CType(Me(Me.tableAccountEmployeeTimeEntryPeriod.TimeEntryViewTypeColumn),String)
            End Get
            Set
                Me(Me.tableAccountEmployeeTimeEntryPeriod.TimeEntryViewTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Submitted() As Boolean
            Get
                Return CType(Me(Me.tableAccountEmployeeTimeEntryPeriod.SubmittedColumn),Boolean)
            End Get
            Set
                Me(Me.tableAccountEmployeeTimeEntryPeriod.SubmittedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Approved() As Boolean
            Get
                Return CType(Me(Me.tableAccountEmployeeTimeEntryPeriod.ApprovedColumn),Boolean)
            End Get
            Set
                Me(Me.tableAccountEmployeeTimeEntryPeriod.ApprovedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Rejected() As Boolean
            Get
                Return CType(Me(Me.tableAccountEmployeeTimeEntryPeriod.RejectedColumn),Boolean)
            End Get
            Set
                Me(Me.tableAccountEmployeeTimeEntryPeriod.RejectedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property InApproval() As Boolean
            Get
                Return CType(Me(Me.tableAccountEmployeeTimeEntryPeriod.InApprovalColumn),Boolean)
            End Get
            Set
                Me(Me.tableAccountEmployeeTimeEntryPeriod.InApprovalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SubmittedDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableAccountEmployeeTimeEntryPeriod.SubmittedDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubmittedDate' in table 'AccountEmployeeTimeEntryPeriod' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountEmployeeTimeEntryPeriod.SubmittedDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ApprovedOn() As Date
            Get
                Try 
                    Return CType(Me(Me.tableAccountEmployeeTimeEntryPeriod.ApprovedOnColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ApprovedOn' in table 'AccountEmployeeTimeEntryPeriod' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountEmployeeTimeEntryPeriod.ApprovedOnColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ApprovedByEmployeeId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableAccountEmployeeTimeEntryPeriod.ApprovedByEmployeeIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ApprovedByEmployeeId' in table 'AccountEmployeeTimeEntryPer"& _ 
                            "iod' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountEmployeeTimeEntryPeriod.ApprovedByEmployeeIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RejectedOn() As Date
            Get
                Try 
                    Return CType(Me(Me.tableAccountEmployeeTimeEntryPeriod.RejectedOnColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RejectedOn' in table 'AccountEmployeeTimeEntryPeriod' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountEmployeeTimeEntryPeriod.RejectedOnColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RejectedByEmployeeId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableAccountEmployeeTimeEntryPeriod.RejectedByEmployeeIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RejectedByEmployeeId' in table 'AccountEmployeeTimeEntryPer"& _ 
                            "iod' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountEmployeeTimeEntryPeriod.RejectedByEmployeeIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SubmittedBy() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableAccountEmployeeTimeEntryPeriod.SubmittedByColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubmittedBy' in table 'AccountEmployeeTimeEntryPeriod' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountEmployeeTimeEntryPeriod.SubmittedByColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CreatedByEmployeeId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableAccountEmployeeTimeEntryPeriod.CreatedByEmployeeIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CreatedByEmployeeId' in table 'AccountEmployeeTimeEntryPeri"& _ 
                            "od' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountEmployeeTimeEntryPeriod.CreatedByEmployeeIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ModifiedByEmployeeId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableAccountEmployeeTimeEntryPeriod.ModifiedByEmployeeIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ModifiedByEmployeeId' in table 'AccountEmployeeTimeEntryPer"& _ 
                            "iod' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountEmployeeTimeEntryPeriod.ModifiedByEmployeeIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PeriodDescription() As String
            Get
                Try 
                    Return CType(Me(Me.tableAccountEmployeeTimeEntryPeriod.PeriodDescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PeriodDescription' in table 'AccountEmployeeTimeEntryPeriod"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountEmployeeTimeEntryPeriod.PeriodDescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CreatedOn() As Date
            Get
                Try 
                    Return CType(Me(Me.tableAccountEmployeeTimeEntryPeriod.CreatedOnColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CreatedOn' in table 'AccountEmployeeTimeEntryPeriod' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountEmployeeTimeEntryPeriod.CreatedOnColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ModifiedOn() As Date
            Get
                Try 
                    Return CType(Me(Me.tableAccountEmployeeTimeEntryPeriod.ModifiedOnColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ModifiedOn' in table 'AccountEmployeeTimeEntryPeriod' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableAccountEmployeeTimeEntryPeriod.ModifiedOnColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSubmittedDateNull() As Boolean
            Return Me.IsNull(Me.tableAccountEmployeeTimeEntryPeriod.SubmittedDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSubmittedDateNull()
            Me(Me.tableAccountEmployeeTimeEntryPeriod.SubmittedDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsApprovedOnNull() As Boolean
            Return Me.IsNull(Me.tableAccountEmployeeTimeEntryPeriod.ApprovedOnColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetApprovedOnNull()
            Me(Me.tableAccountEmployeeTimeEntryPeriod.ApprovedOnColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsApprovedByEmployeeIdNull() As Boolean
            Return Me.IsNull(Me.tableAccountEmployeeTimeEntryPeriod.ApprovedByEmployeeIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetApprovedByEmployeeIdNull()
            Me(Me.tableAccountEmployeeTimeEntryPeriod.ApprovedByEmployeeIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRejectedOnNull() As Boolean
            Return Me.IsNull(Me.tableAccountEmployeeTimeEntryPeriod.RejectedOnColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRejectedOnNull()
            Me(Me.tableAccountEmployeeTimeEntryPeriod.RejectedOnColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRejectedByEmployeeIdNull() As Boolean
            Return Me.IsNull(Me.tableAccountEmployeeTimeEntryPeriod.RejectedByEmployeeIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRejectedByEmployeeIdNull()
            Me(Me.tableAccountEmployeeTimeEntryPeriod.RejectedByEmployeeIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSubmittedByNull() As Boolean
            Return Me.IsNull(Me.tableAccountEmployeeTimeEntryPeriod.SubmittedByColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSubmittedByNull()
            Me(Me.tableAccountEmployeeTimeEntryPeriod.SubmittedByColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCreatedByEmployeeIdNull() As Boolean
            Return Me.IsNull(Me.tableAccountEmployeeTimeEntryPeriod.CreatedByEmployeeIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCreatedByEmployeeIdNull()
            Me(Me.tableAccountEmployeeTimeEntryPeriod.CreatedByEmployeeIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsModifiedByEmployeeIdNull() As Boolean
            Return Me.IsNull(Me.tableAccountEmployeeTimeEntryPeriod.ModifiedByEmployeeIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetModifiedByEmployeeIdNull()
            Me(Me.tableAccountEmployeeTimeEntryPeriod.ModifiedByEmployeeIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPeriodDescriptionNull() As Boolean
            Return Me.IsNull(Me.tableAccountEmployeeTimeEntryPeriod.PeriodDescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPeriodDescriptionNull()
            Me(Me.tableAccountEmployeeTimeEntryPeriod.PeriodDescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCreatedOnNull() As Boolean
            Return Me.IsNull(Me.tableAccountEmployeeTimeEntryPeriod.CreatedOnColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCreatedOnNull()
            Me(Me.tableAccountEmployeeTimeEntryPeriod.CreatedOnColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsModifiedOnNull() As Boolean
            Return Me.IsNull(Me.tableAccountEmployeeTimeEntryPeriod.ModifiedOnColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetModifiedOnNull()
            Me(Me.tableAccountEmployeeTimeEntryPeriod.ModifiedOnColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class AccountPartyRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As AccountPartyRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As AccountPartyRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As AccountPartyRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class AccountProjectTaskEmployeeRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As AccountProjectTaskEmployeeRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As AccountProjectTaskEmployeeRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As AccountProjectTaskEmployeeRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class AccountProjectEmployeeRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As AccountProjectEmployeeRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As AccountProjectEmployeeRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As AccountProjectEmployeeRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class AccountEmployeeTimeEntryPeriodRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As AccountEmployeeTimeEntryPeriodRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As AccountEmployeeTimeEntryPeriodRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As AccountEmployeeTimeEntryPeriodRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace TimeLiveDataSetTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class AccountPartyTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "AccountParty"
            tableMapping.ColumnMappings.Add("AccountPartyId", "AccountPartyId")
            tableMapping.ColumnMappings.Add("PartyTypeId", "PartyTypeId")
            tableMapping.ColumnMappings.Add("AccountId", "AccountId")
            tableMapping.ColumnMappings.Add("PartyName", "PartyName")
            tableMapping.ColumnMappings.Add("PartyNick", "PartyNick")
            tableMapping.ColumnMappings.Add("EMailAddress", "EMailAddress")
            tableMapping.ColumnMappings.Add("Address1", "Address1")
            tableMapping.ColumnMappings.Add("Address2", "Address2")
            tableMapping.ColumnMappings.Add("CountryId", "CountryId")
            tableMapping.ColumnMappings.Add("State", "State")
            tableMapping.ColumnMappings.Add("City", "City")
            tableMapping.ColumnMappings.Add("ZipCode", "ZipCode")
            tableMapping.ColumnMappings.Add("Telephone1", "Telephone1")
            tableMapping.ColumnMappings.Add("Telephone2", "Telephone2")
            tableMapping.ColumnMappings.Add("Fax", "Fax")
            tableMapping.ColumnMappings.Add("DefaultCurrencyId", "DefaultCurrencyId")
            tableMapping.ColumnMappings.Add("DefaultBillingRate", "DefaultBillingRate")
            tableMapping.ColumnMappings.Add("Website", "Website")
            tableMapping.ColumnMappings.Add("Notes", "Notes")
            tableMapping.ColumnMappings.Add("IsDisabled", "IsDisabled")
            tableMapping.ColumnMappings.Add("IsDeleted", "IsDeleted")
            tableMapping.ColumnMappings.Add("CreatedOn", "CreatedOn")
            tableMapping.ColumnMappings.Add("CreatedByEmployeeId", "CreatedByEmployeeId")
            tableMapping.ColumnMappings.Add("ModifiedOn", "ModifiedOn")
            tableMapping.ColumnMappings.Add("ModifiedByEmployeeId", "ModifiedByEmployeeId")
            tableMapping.ColumnMappings.Add("CustomField1", "CustomField1")
            tableMapping.ColumnMappings.Add("CustomField2", "CustomField2")
            tableMapping.ColumnMappings.Add("CustomField3", "CustomField3")
            tableMapping.ColumnMappings.Add("CustomField4", "CustomField4")
            tableMapping.ColumnMappings.Add("CustomField5", "CustomField5")
            tableMapping.ColumnMappings.Add("CustomField6", "CustomField6")
            tableMapping.ColumnMappings.Add("CustomField7", "CustomField7")
            tableMapping.ColumnMappings.Add("CustomField8", "CustomField8")
            tableMapping.ColumnMappings.Add("CustomField9", "CustomField9")
            tableMapping.ColumnMappings.Add("CustomField10", "CustomField10")
            tableMapping.ColumnMappings.Add("CustomField11", "CustomField11")
            tableMapping.ColumnMappings.Add("CustomField12", "CustomField12")
            tableMapping.ColumnMappings.Add("CustomField13", "CustomField13")
            tableMapping.ColumnMappings.Add("CustomField14", "CustomField14")
            tableMapping.ColumnMappings.Add("CustomField15", "CustomField15")
            tableMapping.ColumnMappings.Add("FixedBidBillingMode", "FixedBidBillingMode")
            tableMapping.ColumnMappings.Add("FixedCost", "FixedCost")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[AccountParty] WHERE (([AccountPartyId] = @Original_AccountPart"& _ 
                "yId) AND ([PartyTypeId] = @Original_PartyTypeId) AND ([AccountId] = @Original_Ac"& _ 
                "countId) AND ([PartyName] = @Original_PartyName) AND ([PartyNick] = @Original_Pa"& _ 
                "rtyNick) AND ((@IsNull_EMailAddress = 1 AND [EMailAddress] IS NULL) OR ([EMailAd"& _ 
                "dress] = @Original_EMailAddress)) AND ((@IsNull_Address1 = 1 AND [Address1] IS N"& _ 
                "ULL) OR ([Address1] = @Original_Address1)) AND ((@IsNull_Address2 = 1 AND [Addre"& _ 
                "ss2] IS NULL) OR ([Address2] = @Original_Address2)) AND ((@IsNull_CountryId = 1 "& _ 
                "AND [CountryId] IS NULL) OR ([CountryId] = @Original_CountryId)) AND ((@IsNull_S"& _ 
                "tate = 1 AND [State] IS NULL) OR ([State] = @Original_State)) AND ((@IsNull_City"& _ 
                " = 1 AND [City] IS NULL) OR ([City] = @Original_City)) AND ((@IsNull_ZipCode = 1"& _ 
                " AND [ZipCode] IS NULL) OR ([ZipCode] = @Original_ZipCode)) AND ((@IsNull_Teleph"& _ 
                "one1 = 1 AND [Telephone1] IS NULL) OR ([Telephone1] = @Original_Telephone1)) AND"& _ 
                " ((@IsNull_Telephone2 = 1 AND [Telephone2] IS NULL) OR ([Telephone2] = @Original"& _ 
                "_Telephone2)) AND ((@IsNull_Fax = 1 AND [Fax] IS NULL) OR ([Fax] = @Original_Fax"& _ 
                ")) AND ((@IsNull_DefaultCurrencyId = 1 AND [DefaultCurrencyId] IS NULL) OR ([Def"& _ 
                "aultCurrencyId] = @Original_DefaultCurrencyId)) AND ((@IsNull_DefaultBillingRate"& _ 
                " = 1 AND [DefaultBillingRate] IS NULL) OR ([DefaultBillingRate] = @Original_Defa"& _ 
                "ultBillingRate)) AND ((@IsNull_Website = 1 AND [Website] IS NULL) OR ([Website] "& _ 
                "= @Original_Website)) AND ((@IsNull_Notes = 1 AND [Notes] IS NULL) OR ([Notes] ="& _ 
                " @Original_Notes)) AND ([IsDisabled] = @Original_IsDisabled) AND ([IsDeleted] = "& _ 
                "@Original_IsDeleted) AND ([CreatedOn] = @Original_CreatedOn) AND ([CreatedByEmpl"& _ 
                "oyeeId] = @Original_CreatedByEmployeeId) AND ([ModifiedOn] = @Original_ModifiedO"& _ 
                "n) AND ([ModifiedByEmployeeId] = @Original_ModifiedByEmployeeId) AND ((@IsNull_C"& _ 
                "ustomField1 = 1 AND [CustomField1] IS NULL) OR ([CustomField1] = @Original_Custo"& _ 
                "mField1)) AND ((@IsNull_CustomField2 = 1 AND [CustomField2] IS NULL) OR ([Custom"& _ 
                "Field2] = @Original_CustomField2)) AND ((@IsNull_CustomField3 = 1 AND [CustomFie"& _ 
                "ld3] IS NULL) OR ([CustomField3] = @Original_CustomField3)) AND ((@IsNull_Custom"& _ 
                "Field4 = 1 AND [CustomField4] IS NULL) OR ([CustomField4] = @Original_CustomFiel"& _ 
                "d4)) AND ((@IsNull_CustomField5 = 1 AND [CustomField5] IS NULL) OR ([CustomField"& _ 
                "5] = @Original_CustomField5)) AND ((@IsNull_CustomField6 = 1 AND [CustomField6] "& _ 
                "IS NULL) OR ([CustomField6] = @Original_CustomField6)) AND ((@IsNull_CustomField"& _ 
                "7 = 1 AND [CustomField7] IS NULL) OR ([CustomField7] = @Original_CustomField7)) "& _ 
                "AND ((@IsNull_CustomField8 = 1 AND [CustomField8] IS NULL) OR ([CustomField8] = "& _ 
                "@Original_CustomField8)) AND ((@IsNull_CustomField9 = 1 AND [CustomField9] IS NU"& _ 
                "LL) OR ([CustomField9] = @Original_CustomField9)) AND ((@IsNull_CustomField10 = "& _ 
                "1 AND [CustomField10] IS NULL) OR ([CustomField10] = @Original_CustomField10)) A"& _ 
                "ND ((@IsNull_CustomField11 = 1 AND [CustomField11] IS NULL) OR ([CustomField11] "& _ 
                "= @Original_CustomField11)) AND ((@IsNull_CustomField12 = 1 AND [CustomField12] "& _ 
                "IS NULL) OR ([CustomField12] = @Original_CustomField12)) AND ((@IsNull_CustomFie"& _ 
                "ld13 = 1 AND [CustomField13] IS NULL) OR ([CustomField13] = @Original_CustomFiel"& _ 
                "d13)) AND ((@IsNull_CustomField14 = 1 AND [CustomField14] IS NULL) OR ([CustomFi"& _ 
                "eld14] = @Original_CustomField14)) AND ((@IsNull_CustomField15 = 1 AND [CustomFi"& _ 
                "eld15] IS NULL) OR ([CustomField15] = @Original_CustomField15)) AND ((@IsNull_Fi"& _ 
                "xedBidBillingMode = 1 AND [FixedBidBillingMode] IS NULL) OR ([FixedBidBillingMod"& _ 
                "e] = @Original_FixedBidBillingMode)) AND ((@IsNull_FixedCost = 1 AND [FixedCost]"& _ 
                " IS NULL) OR ([FixedCost] = @Original_FixedCost)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountPartyId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountPartyId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PartyTypeId", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PartyTypeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PartyName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PartyName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PartyNick", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PartyNick", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EMailAddress", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMailAddress", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EMailAddress", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMailAddress", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Address1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Address1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Address1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Address1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Address2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Address2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Address2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Address2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CountryId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CountryId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CountryId", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CountryId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_State", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "State", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_State", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "State", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_City", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "City", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_City", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "City", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ZipCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZipCode", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ZipCode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZipCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Telephone1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Telephone1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Telephone1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Telephone1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Telephone2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Telephone2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Telephone2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Telephone2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Fax", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Fax", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Fax", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Fax", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DefaultCurrencyId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DefaultCurrencyId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DefaultCurrencyId", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DefaultCurrencyId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DefaultBillingRate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DefaultBillingRate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DefaultBillingRate", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DefaultBillingRate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Website", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Website", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Website", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Website", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Notes", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Notes", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Notes", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Notes", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsDisabled", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsDisabled", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsDeleted", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsDeleted", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CreatedOn", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreatedOn", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CreatedByEmployeeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreatedByEmployeeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ModifiedOn", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModifiedOn", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ModifiedByEmployeeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModifiedByEmployeeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField4", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField6", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField6", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField6", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField6", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField7", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField7", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField7", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField7", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField8", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField8", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField8", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField8", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField9", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField9", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField9", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField9", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField10", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField10", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField10", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField10", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField11", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField11", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField11", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField11", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField12", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField12", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField12", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField12", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField13", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField13", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField13", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField13", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField14", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField14", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField14", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField14", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField15", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField15", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField15", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField15", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FixedBidBillingMode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FixedBidBillingMode", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FixedBidBillingMode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FixedBidBillingMode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FixedCost", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FixedCost", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FixedCost", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FixedCost", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[AccountParty] ([PartyTypeId], [AccountId], [PartyName], [Party"& _ 
                "Nick], [EMailAddress], [Address1], [Address2], [CountryId], [State], [City], [Zi"& _ 
                "pCode], [Telephone1], [Telephone2], [Fax], [DefaultCurrencyId], [DefaultBillingR"& _ 
                "ate], [Website], [Notes], [IsDisabled], [IsDeleted], [CreatedOn], [CreatedByEmpl"& _ 
                "oyeeId], [ModifiedOn], [ModifiedByEmployeeId], [CustomField1], [CustomField2], ["& _ 
                "CustomField3], [CustomField4], [CustomField5], [CustomField6], [CustomField7], ["& _ 
                "CustomField8], [CustomField9], [CustomField10], [CustomField11], [CustomField12]"& _ 
                ", [CustomField13], [CustomField14], [CustomField15], [FixedBidBillingMode], [Fix"& _ 
                "edCost]) VALUES (@PartyTypeId, @AccountId, @PartyName, @PartyNick, @EMailAddress"& _ 
                ", @Address1, @Address2, @CountryId, @State, @City, @ZipCode, @Telephone1, @Telep"& _ 
                "hone2, @Fax, @DefaultCurrencyId, @DefaultBillingRate, @Website, @Notes, @IsDisab"& _ 
                "led, @IsDeleted, @CreatedOn, @CreatedByEmployeeId, @ModifiedOn, @ModifiedByEmplo"& _ 
                "yeeId, @CustomField1, @CustomField2, @CustomField3, @CustomField4, @CustomField5"& _ 
                ", @CustomField6, @CustomField7, @CustomField8, @CustomField9, @CustomField10, @C"& _ 
                "ustomField11, @CustomField12, @CustomField13, @CustomField14, @CustomField15, @F"& _ 
                "ixedBidBillingMode, @FixedCost);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT AccountPartyId, PartyTypeId, AccountId,"& _ 
                " PartyName, PartyNick, EMailAddress, Address1, Address2, CountryId, State, City,"& _ 
                " ZipCode, Telephone1, Telephone2, Fax, DefaultCurrencyId, DefaultBillingRate, We"& _ 
                "bsite, Notes, IsDisabled, IsDeleted, CreatedOn, CreatedByEmployeeId, ModifiedOn,"& _ 
                " ModifiedByEmployeeId, CustomField1, CustomField2, CustomField3, CustomField4, C"& _ 
                "ustomField5, CustomField6, CustomField7, CustomField8, CustomField9, CustomField"& _ 
                "10, CustomField11, CustomField12, CustomField13, CustomField14, CustomField15, F"& _ 
                "ixedBidBillingMode, FixedCost FROM AccountParty WHERE (AccountPartyId = SCOPE_ID"& _ 
                "ENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PartyTypeId", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PartyTypeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PartyName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PartyName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PartyNick", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PartyNick", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EMailAddress", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMailAddress", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Address1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Address1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Address2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Address2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CountryId", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CountryId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@State", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "State", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@City", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "City", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ZipCode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZipCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Telephone1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Telephone1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Telephone2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Telephone2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Fax", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Fax", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DefaultCurrencyId", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DefaultCurrencyId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DefaultBillingRate", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DefaultBillingRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Website", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Website", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Notes", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Notes", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsDisabled", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsDisabled", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsDeleted", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsDeleted", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CreatedOn", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreatedOn", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CreatedByEmployeeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreatedByEmployeeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ModifiedOn", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModifiedOn", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ModifiedByEmployeeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModifiedByEmployeeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField6", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField7", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField7", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField8", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField8", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField9", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField9", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField10", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField11", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField11", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField12", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField12", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField13", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField13", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField14", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField14", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField15", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField15", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FixedBidBillingMode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FixedBidBillingMode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FixedCost", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FixedCost", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[AccountParty] SET [PartyTypeId] = @PartyTypeId, [AccountId] = @Acco"& _ 
                "untId, [PartyName] = @PartyName, [PartyNick] = @PartyNick, [EMailAddress] = @EMa"& _ 
                "ilAddress, [Address1] = @Address1, [Address2] = @Address2, [CountryId] = @Countr"& _ 
                "yId, [State] = @State, [City] = @City, [ZipCode] = @ZipCode, [Telephone1] = @Tel"& _ 
                "ephone1, [Telephone2] = @Telephone2, [Fax] = @Fax, [DefaultCurrencyId] = @Defaul"& _ 
                "tCurrencyId, [DefaultBillingRate] = @DefaultBillingRate, [Website] = @Website, ["& _ 
                "Notes] = @Notes, [IsDisabled] = @IsDisabled, [IsDeleted] = @IsDeleted, [CreatedO"& _ 
                "n] = @CreatedOn, [CreatedByEmployeeId] = @CreatedByEmployeeId, [ModifiedOn] = @M"& _ 
                "odifiedOn, [ModifiedByEmployeeId] = @ModifiedByEmployeeId, [CustomField1] = @Cus"& _ 
                "tomField1, [CustomField2] = @CustomField2, [CustomField3] = @CustomField3, [Cust"& _ 
                "omField4] = @CustomField4, [CustomField5] = @CustomField5, [CustomField6] = @Cus"& _ 
                "tomField6, [CustomField7] = @CustomField7, [CustomField8] = @CustomField8, [Cust"& _ 
                "omField9] = @CustomField9, [CustomField10] = @CustomField10, [CustomField11] = @"& _ 
                "CustomField11, [CustomField12] = @CustomField12, [CustomField13] = @CustomField1"& _ 
                "3, [CustomField14] = @CustomField14, [CustomField15] = @CustomField15, [FixedBid"& _ 
                "BillingMode] = @FixedBidBillingMode, [FixedCost] = @FixedCost WHERE (([AccountPa"& _ 
                "rtyId] = @Original_AccountPartyId) AND ([PartyTypeId] = @Original_PartyTypeId) A"& _ 
                "ND ([AccountId] = @Original_AccountId) AND ([PartyName] = @Original_PartyName) A"& _ 
                "ND ([PartyNick] = @Original_PartyNick) AND ((@IsNull_EMailAddress = 1 AND [EMail"& _ 
                "Address] IS NULL) OR ([EMailAddress] = @Original_EMailAddress)) AND ((@IsNull_Ad"& _ 
                "dress1 = 1 AND [Address1] IS NULL) OR ([Address1] = @Original_Address1)) AND ((@"& _ 
                "IsNull_Address2 = 1 AND [Address2] IS NULL) OR ([Address2] = @Original_Address2)"& _ 
                ") AND ((@IsNull_CountryId = 1 AND [CountryId] IS NULL) OR ([CountryId] = @Origin"& _ 
                "al_CountryId)) AND ((@IsNull_State = 1 AND [State] IS NULL) OR ([State] = @Origi"& _ 
                "nal_State)) AND ((@IsNull_City = 1 AND [City] IS NULL) OR ([City] = @Original_Ci"& _ 
                "ty)) AND ((@IsNull_ZipCode = 1 AND [ZipCode] IS NULL) OR ([ZipCode] = @Original_"& _ 
                "ZipCode)) AND ((@IsNull_Telephone1 = 1 AND [Telephone1] IS NULL) OR ([Telephone1"& _ 
                "] = @Original_Telephone1)) AND ((@IsNull_Telephone2 = 1 AND [Telephone2] IS NULL"& _ 
                ") OR ([Telephone2] = @Original_Telephone2)) AND ((@IsNull_Fax = 1 AND [Fax] IS N"& _ 
                "ULL) OR ([Fax] = @Original_Fax)) AND ((@IsNull_DefaultCurrencyId = 1 AND [Defaul"& _ 
                "tCurrencyId] IS NULL) OR ([DefaultCurrencyId] = @Original_DefaultCurrencyId)) AN"& _ 
                "D ((@IsNull_DefaultBillingRate = 1 AND [DefaultBillingRate] IS NULL) OR ([Defaul"& _ 
                "tBillingRate] = @Original_DefaultBillingRate)) AND ((@IsNull_Website = 1 AND [We"& _ 
                "bsite] IS NULL) OR ([Website] = @Original_Website)) AND ((@IsNull_Notes = 1 AND "& _ 
                "[Notes] IS NULL) OR ([Notes] = @Original_Notes)) AND ([IsDisabled] = @Original_I"& _ 
                "sDisabled) AND ([IsDeleted] = @Original_IsDeleted) AND ([CreatedOn] = @Original_"& _ 
                "CreatedOn) AND ([CreatedByEmployeeId] = @Original_CreatedByEmployeeId) AND ([Mod"& _ 
                "ifiedOn] = @Original_ModifiedOn) AND ([ModifiedByEmployeeId] = @Original_Modifie"& _ 
                "dByEmployeeId) AND ((@IsNull_CustomField1 = 1 AND [CustomField1] IS NULL) OR ([C"& _ 
                "ustomField1] = @Original_CustomField1)) AND ((@IsNull_CustomField2 = 1 AND [Cust"& _ 
                "omField2] IS NULL) OR ([CustomField2] = @Original_CustomField2)) AND ((@IsNull_C"& _ 
                "ustomField3 = 1 AND [CustomField3] IS NULL) OR ([CustomField3] = @Original_Custo"& _ 
                "mField3)) AND ((@IsNull_CustomField4 = 1 AND [CustomField4] IS NULL) OR ([Custom"& _ 
                "Field4] = @Original_CustomField4)) AND ((@IsNull_CustomField5 = 1 AND [CustomFie"& _ 
                "ld5] IS NULL) OR ([CustomField5] = @Original_CustomField5)) AND ((@IsNull_Custom"& _ 
                "Field6 = 1 AND [CustomField6] IS NULL) OR ([CustomField6] = @Original_CustomFiel"& _ 
                "d6)) AND ((@IsNull_CustomField7 = 1 AND [CustomField7] IS NULL) OR ([CustomField"& _ 
                "7] = @Original_CustomField7)) AND ((@IsNull_CustomField8 = 1 AND [CustomField8] "& _ 
                "IS NULL) OR ([CustomField8] = @Original_CustomField8)) AND ((@IsNull_CustomField"& _ 
                "9 = 1 AND [CustomField9] IS NULL) OR ([CustomField9] = @Original_CustomField9)) "& _ 
                "AND ((@IsNull_CustomField10 = 1 AND [CustomField10] IS NULL) OR ([CustomField10]"& _ 
                " = @Original_CustomField10)) AND ((@IsNull_CustomField11 = 1 AND [CustomField11]"& _ 
                " IS NULL) OR ([CustomField11] = @Original_CustomField11)) AND ((@IsNull_CustomFi"& _ 
                "eld12 = 1 AND [CustomField12] IS NULL) OR ([CustomField12] = @Original_CustomFie"& _ 
                "ld12)) AND ((@IsNull_CustomField13 = 1 AND [CustomField13] IS NULL) OR ([CustomF"& _ 
                "ield13] = @Original_CustomField13)) AND ((@IsNull_CustomField14 = 1 AND [CustomF"& _ 
                "ield14] IS NULL) OR ([CustomField14] = @Original_CustomField14)) AND ((@IsNull_C"& _ 
                "ustomField15 = 1 AND [CustomField15] IS NULL) OR ([CustomField15] = @Original_Cu"& _ 
                "stomField15)) AND ((@IsNull_FixedBidBillingMode = 1 AND [FixedBidBillingMode] IS"& _ 
                " NULL) OR ([FixedBidBillingMode] = @Original_FixedBidBillingMode)) AND ((@IsNull"& _ 
                "_FixedCost = 1 AND [FixedCost] IS NULL) OR ([FixedCost] = @Original_FixedCost)))"& _ 
                ";"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT AccountPartyId, PartyTypeId, AccountId, PartyName, PartyNick, EMailAdd"& _ 
                "ress, Address1, Address2, CountryId, State, City, ZipCode, Telephone1, Telephone"& _ 
                "2, Fax, DefaultCurrencyId, DefaultBillingRate, Website, Notes, IsDisabled, IsDel"& _ 
                "eted, CreatedOn, CreatedByEmployeeId, ModifiedOn, ModifiedByEmployeeId, CustomFi"& _ 
                "eld1, CustomField2, CustomField3, CustomField4, CustomField5, CustomField6, Cust"& _ 
                "omField7, CustomField8, CustomField9, CustomField10, CustomField11, CustomField1"& _ 
                "2, CustomField13, CustomField14, CustomField15, FixedBidBillingMode, FixedCost F"& _ 
                "ROM AccountParty WHERE (AccountPartyId = @AccountPartyId)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PartyTypeId", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PartyTypeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PartyName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PartyName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PartyNick", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PartyNick", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EMailAddress", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMailAddress", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Address1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Address1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Address2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Address2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CountryId", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CountryId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@State", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "State", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@City", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "City", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ZipCode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZipCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Telephone1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Telephone1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Telephone2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Telephone2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Fax", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Fax", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DefaultCurrencyId", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DefaultCurrencyId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DefaultBillingRate", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DefaultBillingRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Website", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Website", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Notes", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Notes", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsDisabled", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsDisabled", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsDeleted", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsDeleted", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CreatedOn", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreatedOn", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CreatedByEmployeeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreatedByEmployeeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ModifiedOn", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModifiedOn", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ModifiedByEmployeeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModifiedByEmployeeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField6", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField7", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField7", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField8", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField8", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField9", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField9", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField10", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField11", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField11", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField12", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField12", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField13", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField13", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField14", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField14", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustomField15", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField15", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FixedBidBillingMode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FixedBidBillingMode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FixedCost", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FixedCost", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountPartyId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountPartyId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PartyTypeId", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PartyTypeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PartyName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PartyName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PartyNick", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PartyNick", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EMailAddress", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMailAddress", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EMailAddress", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMailAddress", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Address1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Address1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Address1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Address1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Address2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Address2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Address2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Address2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CountryId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CountryId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CountryId", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CountryId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_State", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "State", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_State", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "State", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_City", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "City", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_City", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "City", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ZipCode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZipCode", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ZipCode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZipCode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Telephone1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Telephone1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Telephone1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Telephone1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Telephone2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Telephone2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Telephone2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Telephone2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Fax", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Fax", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Fax", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Fax", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DefaultCurrencyId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DefaultCurrencyId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DefaultCurrencyId", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DefaultCurrencyId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DefaultBillingRate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DefaultBillingRate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DefaultBillingRate", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DefaultBillingRate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Website", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Website", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Website", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Website", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Notes", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Notes", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Notes", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Notes", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsDisabled", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsDisabled", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsDeleted", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsDeleted", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CreatedOn", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreatedOn", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CreatedByEmployeeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreatedByEmployeeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ModifiedOn", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModifiedOn", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ModifiedByEmployeeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModifiedByEmployeeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField3", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField3", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField4", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField4", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField6", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField6", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField6", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField6", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField7", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField7", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField7", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField7", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField8", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField8", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField8", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField8", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField9", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField9", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField9", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField9", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField10", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField10", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField10", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField10", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField11", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField11", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField11", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField11", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField12", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField12", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField12", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField12", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField13", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField13", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField13", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField13", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField14", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField14", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField14", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField14", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CustomField15", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField15", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CustomField15", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustomField15", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FixedBidBillingMode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FixedBidBillingMode", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FixedBidBillingMode", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FixedBidBillingMode", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FixedCost", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FixedCost", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FixedCost", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FixedCost", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountPartyId", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountPartyId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.TimeLive.Quickbooks.Integrator.My.MySettings.Default.TimeLiveDevConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT AccountPartyId, PartyTypeId, AccountId, PartyName, PartyNick, EMailAddress"& _ 
                ", Address1, Address2, CountryId, State, City, ZipCode, Telephone1, Telephone2, F"& _ 
                "ax, DefaultCurrencyId, DefaultBillingRate, Website, Notes, IsDisabled, IsDeleted"& _ 
                ", CreatedOn, CreatedByEmployeeId, ModifiedOn, ModifiedByEmployeeId, CustomField1"& _ 
                ", CustomField2, CustomField3, CustomField4, CustomField5, CustomField6, CustomFi"& _ 
                "eld7, CustomField8, CustomField9, CustomField10, CustomField11, CustomField12, C"& _ 
                "ustomField13, CustomField14, CustomField15, FixedBidBillingMode, FixedCost FROM "& _ 
                "dbo.AccountParty"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As TimeLiveDataSet.AccountPartyDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As TimeLiveDataSet.AccountPartyDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As TimeLiveDataSet.AccountPartyDataTable = New TimeLiveDataSet.AccountPartyDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As TimeLiveDataSet.AccountPartyDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As TimeLiveDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "AccountParty")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_AccountPartyId As Integer,  _
                    ByVal Original_PartyTypeId As Short,  _
                    ByVal Original_AccountId As Integer,  _
                    ByVal Original_PartyName As String,  _
                    ByVal Original_PartyNick As String,  _
                    ByVal Original_EMailAddress As String,  _
                    ByVal Original_Address1 As String,  _
                    ByVal Original_Address2 As String,  _
                    ByVal Original_CountryId As Global.System.Nullable(Of Short),  _
                    ByVal Original_State As String,  _
                    ByVal Original_City As String,  _
                    ByVal Original_ZipCode As String,  _
                    ByVal Original_Telephone1 As String,  _
                    ByVal Original_Telephone2 As String,  _
                    ByVal Original_Fax As String,  _
                    ByVal Original_DefaultCurrencyId As Global.System.Nullable(Of Short),  _
                    ByVal Original_DefaultBillingRate As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_Website As String,  _
                    ByVal Original_Notes As String,  _
                    ByVal Original_IsDisabled As Boolean,  _
                    ByVal Original_IsDeleted As Boolean,  _
                    ByVal Original_CreatedOn As Date,  _
                    ByVal Original_CreatedByEmployeeId As Integer,  _
                    ByVal Original_ModifiedOn As Date,  _
                    ByVal Original_ModifiedByEmployeeId As Integer,  _
                    ByVal Original_CustomField1 As String,  _
                    ByVal Original_CustomField2 As String,  _
                    ByVal Original_CustomField3 As String,  _
                    ByVal Original_CustomField4 As String,  _
                    ByVal Original_CustomField5 As String,  _
                    ByVal Original_CustomField6 As String,  _
                    ByVal Original_CustomField7 As String,  _
                    ByVal Original_CustomField8 As String,  _
                    ByVal Original_CustomField9 As String,  _
                    ByVal Original_CustomField10 As String,  _
                    ByVal Original_CustomField11 As String,  _
                    ByVal Original_CustomField12 As String,  _
                    ByVal Original_CustomField13 As String,  _
                    ByVal Original_CustomField14 As String,  _
                    ByVal Original_CustomField15 As String,  _
                    ByVal Original_FixedBidBillingMode As Global.System.Nullable(Of Integer),  _
                    ByVal Original_FixedCost As Global.System.Nullable(Of Double)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_AccountPartyId,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_PartyTypeId,Short)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_AccountId,Integer)
            If (Original_PartyName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PartyName")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_PartyName,String)
            End If
            If (Original_PartyNick Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PartyNick")
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_PartyNick,String)
            End If
            If (Original_EMailAddress Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_EMailAddress,String)
            End If
            If (Original_Address1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_Address1,String)
            End If
            If (Original_Address2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_Address2,String)
            End If
            If (Original_CountryId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_CountryId.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_State Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_State,String)
            End If
            If (Original_City Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_City,String)
            End If
            If (Original_ZipCode Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_ZipCode,String)
            End If
            If (Original_Telephone1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_Telephone1,String)
            End If
            If (Original_Telephone2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_Telephone2,String)
            End If
            If (Original_Fax Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_Fax,String)
            End If
            If (Original_DefaultCurrencyId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_DefaultCurrencyId.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_DefaultBillingRate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_DefaultBillingRate.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Original_Website Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_Website,String)
            End If
            If (Original_Notes Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_Notes,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(33).Value = CType(Original_IsDisabled,Boolean)
            Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_IsDeleted,Boolean)
            Me.Adapter.DeleteCommand.Parameters(35).Value = CType(Original_CreatedOn,Date)
            Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_CreatedByEmployeeId,Integer)
            Me.Adapter.DeleteCommand.Parameters(37).Value = CType(Original_ModifiedOn,Date)
            Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_ModifiedByEmployeeId,Integer)
            If (Original_CustomField1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_CustomField1,String)
            End If
            If (Original_CustomField2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_CustomField2,String)
            End If
            If (Original_CustomField3 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_CustomField3,String)
            End If
            If (Original_CustomField4 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_CustomField4,String)
            End If
            If (Original_CustomField5 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_CustomField5,String)
            End If
            If (Original_CustomField6 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_CustomField6,String)
            End If
            If (Original_CustomField7 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_CustomField7,String)
            End If
            If (Original_CustomField8 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_CustomField8,String)
            End If
            If (Original_CustomField9 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(Original_CustomField9,String)
            End If
            If (Original_CustomField10 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(Original_CustomField10,String)
            End If
            If (Original_CustomField11 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(Original_CustomField11,String)
            End If
            If (Original_CustomField12 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(Original_CustomField12,String)
            End If
            If (Original_CustomField13 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(Original_CustomField13,String)
            End If
            If (Original_CustomField14 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(Original_CustomField14,String)
            End If
            If (Original_CustomField15 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(Original_CustomField15,String)
            End If
            If (Original_FixedBidBillingMode.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(Original_FixedBidBillingMode.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (Original_FixedCost.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(Original_FixedCost.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal PartyTypeId As Short,  _
                    ByVal AccountId As Integer,  _
                    ByVal PartyName As String,  _
                    ByVal PartyNick As String,  _
                    ByVal EMailAddress As String,  _
                    ByVal Address1 As String,  _
                    ByVal Address2 As String,  _
                    ByVal CountryId As Global.System.Nullable(Of Short),  _
                    ByVal State As String,  _
                    ByVal City As String,  _
                    ByVal ZipCode As String,  _
                    ByVal Telephone1 As String,  _
                    ByVal Telephone2 As String,  _
                    ByVal Fax As String,  _
                    ByVal DefaultCurrencyId As Global.System.Nullable(Of Short),  _
                    ByVal DefaultBillingRate As Global.System.Nullable(Of Decimal),  _
                    ByVal Website As String,  _
                    ByVal Notes As String,  _
                    ByVal IsDisabled As Boolean,  _
                    ByVal IsDeleted As Boolean,  _
                    ByVal CreatedOn As Date,  _
                    ByVal CreatedByEmployeeId As Integer,  _
                    ByVal ModifiedOn As Date,  _
                    ByVal ModifiedByEmployeeId As Integer,  _
                    ByVal CustomField1 As String,  _
                    ByVal CustomField2 As String,  _
                    ByVal CustomField3 As String,  _
                    ByVal CustomField4 As String,  _
                    ByVal CustomField5 As String,  _
                    ByVal CustomField6 As String,  _
                    ByVal CustomField7 As String,  _
                    ByVal CustomField8 As String,  _
                    ByVal CustomField9 As String,  _
                    ByVal CustomField10 As String,  _
                    ByVal CustomField11 As String,  _
                    ByVal CustomField12 As String,  _
                    ByVal CustomField13 As String,  _
                    ByVal CustomField14 As String,  _
                    ByVal CustomField15 As String,  _
                    ByVal FixedBidBillingMode As Global.System.Nullable(Of Integer),  _
                    ByVal FixedCost As Global.System.Nullable(Of Double)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(PartyTypeId,Short)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(AccountId,Integer)
            If (PartyName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PartyName")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(PartyName,String)
            End If
            If (PartyNick Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PartyNick")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(PartyNick,String)
            End If
            If (EMailAddress Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(EMailAddress,String)
            End If
            If (Address1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Address1,String)
            End If
            If (Address2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Address2,String)
            End If
            If (CountryId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(CountryId.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (State Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(State,String)
            End If
            If (City Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(City,String)
            End If
            If (ZipCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(ZipCode,String)
            End If
            If (Telephone1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(Telephone1,String)
            End If
            If (Telephone2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(Telephone2,String)
            End If
            If (Fax Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(Fax,String)
            End If
            If (DefaultCurrencyId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(DefaultCurrencyId.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (DefaultBillingRate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(DefaultBillingRate.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Website Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(Website,String)
            End If
            If (Notes Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(Notes,String)
            End If
            Me.Adapter.InsertCommand.Parameters(18).Value = CType(IsDisabled,Boolean)
            Me.Adapter.InsertCommand.Parameters(19).Value = CType(IsDeleted,Boolean)
            Me.Adapter.InsertCommand.Parameters(20).Value = CType(CreatedOn,Date)
            Me.Adapter.InsertCommand.Parameters(21).Value = CType(CreatedByEmployeeId,Integer)
            Me.Adapter.InsertCommand.Parameters(22).Value = CType(ModifiedOn,Date)
            Me.Adapter.InsertCommand.Parameters(23).Value = CType(ModifiedByEmployeeId,Integer)
            If (CustomField1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(CustomField1,String)
            End If
            If (CustomField2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(CustomField2,String)
            End If
            If (CustomField3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(CustomField3,String)
            End If
            If (CustomField4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(CustomField4,String)
            End If
            If (CustomField5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(CustomField5,String)
            End If
            If (CustomField6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(CustomField6,String)
            End If
            If (CustomField7 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(CustomField7,String)
            End If
            If (CustomField8 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(CustomField8,String)
            End If
            If (CustomField9 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(CustomField9,String)
            End If
            If (CustomField10 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(CustomField10,String)
            End If
            If (CustomField11 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(CustomField11,String)
            End If
            If (CustomField12 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(CustomField12,String)
            End If
            If (CustomField13 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(CustomField13,String)
            End If
            If (CustomField14 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(CustomField14,String)
            End If
            If (CustomField15 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(CustomField15,String)
            End If
            If (FixedBidBillingMode.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(FixedBidBillingMode.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (FixedCost.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(FixedCost.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal PartyTypeId As Short,  _
                    ByVal AccountId As Integer,  _
                    ByVal PartyName As String,  _
                    ByVal PartyNick As String,  _
                    ByVal EMailAddress As String,  _
                    ByVal Address1 As String,  _
                    ByVal Address2 As String,  _
                    ByVal CountryId As Global.System.Nullable(Of Short),  _
                    ByVal State As String,  _
                    ByVal City As String,  _
                    ByVal ZipCode As String,  _
                    ByVal Telephone1 As String,  _
                    ByVal Telephone2 As String,  _
                    ByVal Fax As String,  _
                    ByVal DefaultCurrencyId As Global.System.Nullable(Of Short),  _
                    ByVal DefaultBillingRate As Global.System.Nullable(Of Decimal),  _
                    ByVal Website As String,  _
                    ByVal Notes As String,  _
                    ByVal IsDisabled As Boolean,  _
                    ByVal IsDeleted As Boolean,  _
                    ByVal CreatedOn As Date,  _
                    ByVal CreatedByEmployeeId As Integer,  _
                    ByVal ModifiedOn As Date,  _
                    ByVal ModifiedByEmployeeId As Integer,  _
                    ByVal CustomField1 As String,  _
                    ByVal CustomField2 As String,  _
                    ByVal CustomField3 As String,  _
                    ByVal CustomField4 As String,  _
                    ByVal CustomField5 As String,  _
                    ByVal CustomField6 As String,  _
                    ByVal CustomField7 As String,  _
                    ByVal CustomField8 As String,  _
                    ByVal CustomField9 As String,  _
                    ByVal CustomField10 As String,  _
                    ByVal CustomField11 As String,  _
                    ByVal CustomField12 As String,  _
                    ByVal CustomField13 As String,  _
                    ByVal CustomField14 As String,  _
                    ByVal CustomField15 As String,  _
                    ByVal FixedBidBillingMode As Global.System.Nullable(Of Integer),  _
                    ByVal FixedCost As Global.System.Nullable(Of Double),  _
                    ByVal Original_AccountPartyId As Integer,  _
                    ByVal Original_PartyTypeId As Short,  _
                    ByVal Original_AccountId As Integer,  _
                    ByVal Original_PartyName As String,  _
                    ByVal Original_PartyNick As String,  _
                    ByVal Original_EMailAddress As String,  _
                    ByVal Original_Address1 As String,  _
                    ByVal Original_Address2 As String,  _
                    ByVal Original_CountryId As Global.System.Nullable(Of Short),  _
                    ByVal Original_State As String,  _
                    ByVal Original_City As String,  _
                    ByVal Original_ZipCode As String,  _
                    ByVal Original_Telephone1 As String,  _
                    ByVal Original_Telephone2 As String,  _
                    ByVal Original_Fax As String,  _
                    ByVal Original_DefaultCurrencyId As Global.System.Nullable(Of Short),  _
                    ByVal Original_DefaultBillingRate As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_Website As String,  _
                    ByVal Original_Notes As String,  _
                    ByVal Original_IsDisabled As Boolean,  _
                    ByVal Original_IsDeleted As Boolean,  _
                    ByVal Original_CreatedOn As Date,  _
                    ByVal Original_CreatedByEmployeeId As Integer,  _
                    ByVal Original_ModifiedOn As Date,  _
                    ByVal Original_ModifiedByEmployeeId As Integer,  _
                    ByVal Original_CustomField1 As String,  _
                    ByVal Original_CustomField2 As String,  _
                    ByVal Original_CustomField3 As String,  _
                    ByVal Original_CustomField4 As String,  _
                    ByVal Original_CustomField5 As String,  _
                    ByVal Original_CustomField6 As String,  _
                    ByVal Original_CustomField7 As String,  _
                    ByVal Original_CustomField8 As String,  _
                    ByVal Original_CustomField9 As String,  _
                    ByVal Original_CustomField10 As String,  _
                    ByVal Original_CustomField11 As String,  _
                    ByVal Original_CustomField12 As String,  _
                    ByVal Original_CustomField13 As String,  _
                    ByVal Original_CustomField14 As String,  _
                    ByVal Original_CustomField15 As String,  _
                    ByVal Original_FixedBidBillingMode As Global.System.Nullable(Of Integer),  _
                    ByVal Original_FixedCost As Global.System.Nullable(Of Double),  _
                    ByVal AccountPartyId As Integer) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(PartyTypeId,Short)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(AccountId,Integer)
            If (PartyName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PartyName")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(PartyName,String)
            End If
            If (PartyNick Is Nothing) Then
                Throw New Global.System.ArgumentNullException("PartyNick")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(PartyNick,String)
            End If
            If (EMailAddress Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(EMailAddress,String)
            End If
            If (Address1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Address1,String)
            End If
            If (Address2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Address2,String)
            End If
            If (CountryId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(CountryId.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (State Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(State,String)
            End If
            If (City Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(City,String)
            End If
            If (ZipCode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(ZipCode,String)
            End If
            If (Telephone1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Telephone1,String)
            End If
            If (Telephone2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Telephone2,String)
            End If
            If (Fax Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Fax,String)
            End If
            If (DefaultCurrencyId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(DefaultCurrencyId.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (DefaultBillingRate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(DefaultBillingRate.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Website Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Website,String)
            End If
            If (Notes Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Notes,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(IsDisabled,Boolean)
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(IsDeleted,Boolean)
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(CreatedOn,Date)
            Me.Adapter.UpdateCommand.Parameters(21).Value = CType(CreatedByEmployeeId,Integer)
            Me.Adapter.UpdateCommand.Parameters(22).Value = CType(ModifiedOn,Date)
            Me.Adapter.UpdateCommand.Parameters(23).Value = CType(ModifiedByEmployeeId,Integer)
            If (CustomField1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(CustomField1,String)
            End If
            If (CustomField2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(CustomField2,String)
            End If
            If (CustomField3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(CustomField3,String)
            End If
            If (CustomField4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(CustomField4,String)
            End If
            If (CustomField5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(CustomField5,String)
            End If
            If (CustomField6 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(CustomField6,String)
            End If
            If (CustomField7 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(CustomField7,String)
            End If
            If (CustomField8 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(CustomField8,String)
            End If
            If (CustomField9 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(CustomField9,String)
            End If
            If (CustomField10 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(CustomField10,String)
            End If
            If (CustomField11 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(CustomField11,String)
            End If
            If (CustomField12 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(CustomField12,String)
            End If
            If (CustomField13 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(CustomField13,String)
            End If
            If (CustomField14 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(CustomField14,String)
            End If
            If (CustomField15 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(CustomField15,String)
            End If
            If (FixedBidBillingMode.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(FixedBidBillingMode.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (FixedCost.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(FixedCost.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_AccountPartyId,Integer)
            Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_PartyTypeId,Short)
            Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_AccountId,Integer)
            If (Original_PartyName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PartyName")
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_PartyName,String)
            End If
            If (Original_PartyNick Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_PartyNick")
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_PartyNick,String)
            End If
            If (Original_EMailAddress Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_EMailAddress,String)
            End If
            If (Original_Address1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_Address1,String)
            End If
            If (Original_Address2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_Address2,String)
            End If
            If (Original_CountryId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_CountryId.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (Original_State Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_State,String)
            End If
            If (Original_City Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_City,String)
            End If
            If (Original_ZipCode Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_ZipCode,String)
            End If
            If (Original_Telephone1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_Telephone1,String)
            End If
            If (Original_Telephone2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_Telephone2,String)
            End If
            If (Original_Fax Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_Fax,String)
            End If
            If (Original_DefaultCurrencyId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(Original_DefaultCurrencyId.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (Original_DefaultBillingRate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(Original_DefaultBillingRate.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = Global.System.DBNull.Value
            End If
            If (Original_Website Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(Original_Website,String)
            End If
            If (Original_Notes Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(Original_Notes,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(74).Value = CType(Original_IsDisabled,Boolean)
            Me.Adapter.UpdateCommand.Parameters(75).Value = CType(Original_IsDeleted,Boolean)
            Me.Adapter.UpdateCommand.Parameters(76).Value = CType(Original_CreatedOn,Date)
            Me.Adapter.UpdateCommand.Parameters(77).Value = CType(Original_CreatedByEmployeeId,Integer)
            Me.Adapter.UpdateCommand.Parameters(78).Value = CType(Original_ModifiedOn,Date)
            Me.Adapter.UpdateCommand.Parameters(79).Value = CType(Original_ModifiedByEmployeeId,Integer)
            If (Original_CustomField1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(Original_CustomField1,String)
            End If
            If (Original_CustomField2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(Original_CustomField2,String)
            End If
            If (Original_CustomField3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(Original_CustomField3,String)
            End If
            If (Original_CustomField4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(Original_CustomField4,String)
            End If
            If (Original_CustomField5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(Original_CustomField5,String)
            End If
            If (Original_CustomField6 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(Original_CustomField6,String)
            End If
            If (Original_CustomField7 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(Original_CustomField7,String)
            End If
            If (Original_CustomField8 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(95).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(Original_CustomField8,String)
            End If
            If (Original_CustomField9 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(97).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(Original_CustomField9,String)
            End If
            If (Original_CustomField10 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(99).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(Original_CustomField10,String)
            End If
            If (Original_CustomField11 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(101).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(Original_CustomField11,String)
            End If
            If (Original_CustomField12 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(103).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(Original_CustomField12,String)
            End If
            If (Original_CustomField13 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(105).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(Original_CustomField13,String)
            End If
            If (Original_CustomField14 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(107).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(Original_CustomField14,String)
            End If
            If (Original_CustomField15 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(109).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(Original_CustomField15,String)
            End If
            If (Original_FixedBidBillingMode.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(Original_FixedBidBillingMode.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(111).Value = Global.System.DBNull.Value
            End If
            If (Original_FixedCost.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(Original_FixedCost.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(113).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(114).Value = CType(AccountPartyId,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal PartyTypeId As Short,  _
                    ByVal AccountId As Integer,  _
                    ByVal PartyName As String,  _
                    ByVal PartyNick As String,  _
                    ByVal EMailAddress As String,  _
                    ByVal Address1 As String,  _
                    ByVal Address2 As String,  _
                    ByVal CountryId As Global.System.Nullable(Of Short),  _
                    ByVal State As String,  _
                    ByVal City As String,  _
                    ByVal ZipCode As String,  _
                    ByVal Telephone1 As String,  _
                    ByVal Telephone2 As String,  _
                    ByVal Fax As String,  _
                    ByVal DefaultCurrencyId As Global.System.Nullable(Of Short),  _
                    ByVal DefaultBillingRate As Global.System.Nullable(Of Decimal),  _
                    ByVal Website As String,  _
                    ByVal Notes As String,  _
                    ByVal IsDisabled As Boolean,  _
                    ByVal IsDeleted As Boolean,  _
                    ByVal CreatedOn As Date,  _
                    ByVal CreatedByEmployeeId As Integer,  _
                    ByVal ModifiedOn As Date,  _
                    ByVal ModifiedByEmployeeId As Integer,  _
                    ByVal CustomField1 As String,  _
                    ByVal CustomField2 As String,  _
                    ByVal CustomField3 As String,  _
                    ByVal CustomField4 As String,  _
                    ByVal CustomField5 As String,  _
                    ByVal CustomField6 As String,  _
                    ByVal CustomField7 As String,  _
                    ByVal CustomField8 As String,  _
                    ByVal CustomField9 As String,  _
                    ByVal CustomField10 As String,  _
                    ByVal CustomField11 As String,  _
                    ByVal CustomField12 As String,  _
                    ByVal CustomField13 As String,  _
                    ByVal CustomField14 As String,  _
                    ByVal CustomField15 As String,  _
                    ByVal FixedBidBillingMode As Global.System.Nullable(Of Integer),  _
                    ByVal FixedCost As Global.System.Nullable(Of Double),  _
                    ByVal Original_AccountPartyId As Integer,  _
                    ByVal Original_PartyTypeId As Short,  _
                    ByVal Original_AccountId As Integer,  _
                    ByVal Original_PartyName As String,  _
                    ByVal Original_PartyNick As String,  _
                    ByVal Original_EMailAddress As String,  _
                    ByVal Original_Address1 As String,  _
                    ByVal Original_Address2 As String,  _
                    ByVal Original_CountryId As Global.System.Nullable(Of Short),  _
                    ByVal Original_State As String,  _
                    ByVal Original_City As String,  _
                    ByVal Original_ZipCode As String,  _
                    ByVal Original_Telephone1 As String,  _
                    ByVal Original_Telephone2 As String,  _
                    ByVal Original_Fax As String,  _
                    ByVal Original_DefaultCurrencyId As Global.System.Nullable(Of Short),  _
                    ByVal Original_DefaultBillingRate As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_Website As String,  _
                    ByVal Original_Notes As String,  _
                    ByVal Original_IsDisabled As Boolean,  _
                    ByVal Original_IsDeleted As Boolean,  _
                    ByVal Original_CreatedOn As Date,  _
                    ByVal Original_CreatedByEmployeeId As Integer,  _
                    ByVal Original_ModifiedOn As Date,  _
                    ByVal Original_ModifiedByEmployeeId As Integer,  _
                    ByVal Original_CustomField1 As String,  _
                    ByVal Original_CustomField2 As String,  _
                    ByVal Original_CustomField3 As String,  _
                    ByVal Original_CustomField4 As String,  _
                    ByVal Original_CustomField5 As String,  _
                    ByVal Original_CustomField6 As String,  _
                    ByVal Original_CustomField7 As String,  _
                    ByVal Original_CustomField8 As String,  _
                    ByVal Original_CustomField9 As String,  _
                    ByVal Original_CustomField10 As String,  _
                    ByVal Original_CustomField11 As String,  _
                    ByVal Original_CustomField12 As String,  _
                    ByVal Original_CustomField13 As String,  _
                    ByVal Original_CustomField14 As String,  _
                    ByVal Original_CustomField15 As String,  _
                    ByVal Original_FixedBidBillingMode As Global.System.Nullable(Of Integer),  _
                    ByVal Original_FixedCost As Global.System.Nullable(Of Double)) As Integer
            Return Me.Update(PartyTypeId, AccountId, PartyName, PartyNick, EMailAddress, Address1, Address2, CountryId, State, City, ZipCode, Telephone1, Telephone2, Fax, DefaultCurrencyId, DefaultBillingRate, Website, Notes, IsDisabled, IsDeleted, CreatedOn, CreatedByEmployeeId, ModifiedOn, ModifiedByEmployeeId, CustomField1, CustomField2, CustomField3, CustomField4, CustomField5, CustomField6, CustomField7, CustomField8, CustomField9, CustomField10, CustomField11, CustomField12, CustomField13, CustomField14, CustomField15, FixedBidBillingMode, FixedCost, Original_AccountPartyId, Original_PartyTypeId, Original_AccountId, Original_PartyName, Original_PartyNick, Original_EMailAddress, Original_Address1, Original_Address2, Original_CountryId, Original_State, Original_City, Original_ZipCode, Original_Telephone1, Original_Telephone2, Original_Fax, Original_DefaultCurrencyId, Original_DefaultBillingRate, Original_Website, Original_Notes, Original_IsDisabled, Original_IsDeleted, Original_CreatedOn, Original_CreatedByEmployeeId, Original_ModifiedOn, Original_ModifiedByEmployeeId, Original_CustomField1, Original_CustomField2, Original_CustomField3, Original_CustomField4, Original_CustomField5, Original_CustomField6, Original_CustomField7, Original_CustomField8, Original_CustomField9, Original_CustomField10, Original_CustomField11, Original_CustomField12, Original_CustomField13, Original_CustomField14, Original_CustomField15, Original_FixedBidBillingMode, Original_FixedCost, Original_AccountPartyId)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class AccountProjectTaskEmployeeTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "AccountProjectTaskEmployee"
            tableMapping.ColumnMappings.Add("AccountProjectTaskEmployeeId", "AccountProjectTaskEmployeeId")
            tableMapping.ColumnMappings.Add("AccountId", "AccountId")
            tableMapping.ColumnMappings.Add("AccountProjectTaskId", "AccountProjectTaskId")
            tableMapping.ColumnMappings.Add("AccountEmployeeId", "AccountEmployeeId")
            tableMapping.ColumnMappings.Add("AllocationUnits", "AllocationUnits")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[AccountProjectTaskEmployee] WHERE (([AccountProjectTaskEmploye"& _ 
                "eId] = @Original_AccountProjectTaskEmployeeId) AND ([AccountId] = @Original_Acco"& _ 
                "untId) AND ([AccountProjectTaskId] = @Original_AccountProjectTaskId) AND ([Accou"& _ 
                "ntEmployeeId] = @Original_AccountEmployeeId) AND ((@IsNull_AllocationUnits = 1 A"& _ 
                "ND [AllocationUnits] IS NULL) OR ([AllocationUnits] = @Original_AllocationUnits)"& _ 
                "))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountProjectTaskEmployeeId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountProjectTaskEmployeeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountProjectTaskId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountProjectTaskId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountEmployeeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountEmployeeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AllocationUnits", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AllocationUnits", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AllocationUnits", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "AllocationUnits", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[AccountProjectTaskEmployee] ([AccountId], [AccountProjectTaskI"& _ 
                "d], [AccountEmployeeId], [AllocationUnits]) VALUES (@AccountId, @AccountProjectT"& _ 
                "askId, @AccountEmployeeId, @AllocationUnits);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT AccountProjectTaskEmployee"& _ 
                "Id, AccountId, AccountProjectTaskId, AccountEmployeeId, AllocationUnits FROM Acc"& _ 
                "ountProjectTaskEmployee WHERE (AccountProjectTaskEmployeeId = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountProjectTaskId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountProjectTaskId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountEmployeeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountEmployeeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AllocationUnits", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "AllocationUnits", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[AccountProjectTaskEmployee] SET [AccountId] = @AccountId, [AccountP"& _ 
                "rojectTaskId] = @AccountProjectTaskId, [AccountEmployeeId] = @AccountEmployeeId,"& _ 
                " [AllocationUnits] = @AllocationUnits WHERE (([AccountProjectTaskEmployeeId] = @"& _ 
                "Original_AccountProjectTaskEmployeeId) AND ([AccountId] = @Original_AccountId) A"& _ 
                "ND ([AccountProjectTaskId] = @Original_AccountProjectTaskId) AND ([AccountEmploy"& _ 
                "eeId] = @Original_AccountEmployeeId) AND ((@IsNull_AllocationUnits = 1 AND [Allo"& _ 
                "cationUnits] IS NULL) OR ([AllocationUnits] = @Original_AllocationUnits)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SEL"& _ 
                "ECT AccountProjectTaskEmployeeId, AccountId, AccountProjectTaskId, AccountEmploy"& _ 
                "eeId, AllocationUnits FROM AccountProjectTaskEmployee WHERE (AccountProjectTaskE"& _ 
                "mployeeId = @AccountProjectTaskEmployeeId)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountProjectTaskId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountProjectTaskId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountEmployeeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountEmployeeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AllocationUnits", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "AllocationUnits", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountProjectTaskEmployeeId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountProjectTaskEmployeeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountProjectTaskId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountProjectTaskId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountEmployeeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountEmployeeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AllocationUnits", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AllocationUnits", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AllocationUnits", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "AllocationUnits", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountProjectTaskEmployeeId", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountProjectTaskEmployeeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.TimeLive.Quickbooks.Integrator.My.MySettings.Default.TimeLiveDevConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT AccountProjectTaskEmployeeId, AccountId, AccountProjectTaskId, AccountEmpl"& _ 
                "oyeeId, AllocationUnits FROM dbo.AccountProjectTaskEmployee"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As TimeLiveDataSet.AccountProjectTaskEmployeeDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetTaskEmployeeData() As TimeLiveDataSet.AccountProjectTaskEmployeeDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As TimeLiveDataSet.AccountProjectTaskEmployeeDataTable = New TimeLiveDataSet.AccountProjectTaskEmployeeDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As TimeLiveDataSet.AccountProjectTaskEmployeeDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As TimeLiveDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "AccountProjectTaskEmployee")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_AccountProjectTaskEmployeeId As Long, ByVal Original_AccountId As Integer, ByVal Original_AccountProjectTaskId As Long, ByVal Original_AccountEmployeeId As Integer, ByVal Original_AllocationUnits As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_AccountProjectTaskEmployeeId,Long)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_AccountId,Integer)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_AccountProjectTaskId,Long)
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_AccountEmployeeId,Integer)
            If (Original_AllocationUnits.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_AllocationUnits.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal AccountId As Integer, ByVal AccountProjectTaskId As Long, ByVal AccountEmployeeId As Integer, ByVal AllocationUnits As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(AccountId,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(AccountProjectTaskId,Long)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(AccountEmployeeId,Integer)
            If (AllocationUnits.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(AllocationUnits.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal AccountId As Integer, ByVal AccountProjectTaskId As Long, ByVal AccountEmployeeId As Integer, ByVal AllocationUnits As Global.System.Nullable(Of Decimal), ByVal Original_AccountProjectTaskEmployeeId As Long, ByVal Original_AccountId As Integer, ByVal Original_AccountProjectTaskId As Long, ByVal Original_AccountEmployeeId As Integer, ByVal Original_AllocationUnits As Global.System.Nullable(Of Decimal), ByVal AccountProjectTaskEmployeeId As Long) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(AccountId,Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(AccountProjectTaskId,Long)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(AccountEmployeeId,Integer)
            If (AllocationUnits.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(AllocationUnits.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_AccountProjectTaskEmployeeId,Long)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_AccountId,Integer)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_AccountProjectTaskId,Long)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_AccountEmployeeId,Integer)
            If (Original_AllocationUnits.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_AllocationUnits.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(AccountProjectTaskEmployeeId,Long)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal AccountId As Integer, ByVal AccountProjectTaskId As Long, ByVal AccountEmployeeId As Integer, ByVal AllocationUnits As Global.System.Nullable(Of Decimal), ByVal Original_AccountProjectTaskEmployeeId As Long, ByVal Original_AccountId As Integer, ByVal Original_AccountProjectTaskId As Long, ByVal Original_AccountEmployeeId As Integer, ByVal Original_AllocationUnits As Global.System.Nullable(Of Decimal)) As Integer
            Return Me.Update(AccountId, AccountProjectTaskId, AccountEmployeeId, AllocationUnits, Original_AccountProjectTaskEmployeeId, Original_AccountId, Original_AccountProjectTaskId, Original_AccountEmployeeId, Original_AllocationUnits, Original_AccountProjectTaskEmployeeId)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class AccountProjectEmployeeTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "AccountProjectEmployee"
            tableMapping.ColumnMappings.Add("AccountProjectEmployeeId", "AccountProjectEmployeeId")
            tableMapping.ColumnMappings.Add("AccountId", "AccountId")
            tableMapping.ColumnMappings.Add("AccountProjectId", "AccountProjectId")
            tableMapping.ColumnMappings.Add("AccountEmployeeId", "AccountEmployeeId")
            tableMapping.ColumnMappings.Add("TaskCompletedPercentage", "TaskCompletedPercentage")
            tableMapping.ColumnMappings.Add("TaskCompleted", "TaskCompleted")
            tableMapping.ColumnMappings.Add("AccountRoleId", "AccountRoleId")
            tableMapping.ColumnMappings.Add("AccountBillingRateId", "AccountBillingRateId")
            tableMapping.ColumnMappings.Add("AccountProjectEmployeeTemplateId", "AccountProjectEmployeeTemplateId")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[AccountProjectEmployee] WHERE (([AccountProjectEmployeeId] = @"& _ 
                "Original_AccountProjectEmployeeId) AND ((@IsNull_AccountId = 1 AND [AccountId] I"& _ 
                "S NULL) OR ([AccountId] = @Original_AccountId)) AND ([AccountProjectId] = @Origi"& _ 
                "nal_AccountProjectId) AND ([AccountEmployeeId] = @Original_AccountEmployeeId) AN"& _ 
                "D ((@IsNull_TaskCompletedPercentage = 1 AND [TaskCompletedPercentage] IS NULL) O"& _ 
                "R ([TaskCompletedPercentage] = @Original_TaskCompletedPercentage)) AND ((@IsNull"& _ 
                "_TaskCompleted = 1 AND [TaskCompleted] IS NULL) OR ([TaskCompleted] = @Original_"& _ 
                "TaskCompleted)) AND ((@IsNull_AccountRoleId = 1 AND [AccountRoleId] IS NULL) OR "& _ 
                "([AccountRoleId] = @Original_AccountRoleId)) AND ((@IsNull_AccountBillingRateId "& _ 
                "= 1 AND [AccountBillingRateId] IS NULL) OR ([AccountBillingRateId] = @Original_A"& _ 
                "ccountBillingRateId)) AND ((@IsNull_AccountProjectEmployeeTemplateId = 1 AND [Ac"& _ 
                "countProjectEmployeeTemplateId] IS NULL) OR ([AccountProjectEmployeeTemplateId] "& _ 
                "= @Original_AccountProjectEmployeeTemplateId)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountProjectEmployeeId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountProjectEmployeeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AccountId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountProjectId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountProjectId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountEmployeeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountEmployeeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TaskCompletedPercentage", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TaskCompletedPercentage", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TaskCompletedPercentage", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TaskCompletedPercentage", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TaskCompleted", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TaskCompleted", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TaskCompleted", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TaskCompleted", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AccountRoleId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountRoleId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountRoleId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountRoleId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AccountBillingRateId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountBillingRateId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountBillingRateId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountBillingRateId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AccountProjectEmployeeTemplateId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountProjectEmployeeTemplateId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountProjectEmployeeTemplateId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountProjectEmployeeTemplateId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[AccountProjectEmployee] ([AccountId], [AccountProjectId], [Acc"& _ 
                "ountEmployeeId], [TaskCompletedPercentage], [TaskCompleted], [AccountRoleId], [A"& _ 
                "ccountBillingRateId], [AccountProjectEmployeeTemplateId]) VALUES (@AccountId, @A"& _ 
                "ccountProjectId, @AccountEmployeeId, @TaskCompletedPercentage, @TaskCompleted, @"& _ 
                "AccountRoleId, @AccountBillingRateId, @AccountProjectEmployeeTemplateId);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELEC"& _ 
                "T AccountProjectEmployeeId, AccountId, AccountProjectId, AccountEmployeeId, Task"& _ 
                "CompletedPercentage, TaskCompleted, AccountRoleId, AccountBillingRateId, Account"& _ 
                "ProjectEmployeeTemplateId FROM AccountProjectEmployee WHERE (AccountProjectEmplo"& _ 
                "yeeId = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountProjectId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountProjectId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountEmployeeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountEmployeeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TaskCompletedPercentage", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TaskCompletedPercentage", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TaskCompleted", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TaskCompleted", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountRoleId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountRoleId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountBillingRateId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountBillingRateId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountProjectEmployeeTemplateId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountProjectEmployeeTemplateId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[AccountProjectEmployee] SET [AccountId] = @AccountId, [AccountProje"& _ 
                "ctId] = @AccountProjectId, [AccountEmployeeId] = @AccountEmployeeId, [TaskComple"& _ 
                "tedPercentage] = @TaskCompletedPercentage, [TaskCompleted] = @TaskCompleted, [Ac"& _ 
                "countRoleId] = @AccountRoleId, [AccountBillingRateId] = @AccountBillingRateId, ["& _ 
                "AccountProjectEmployeeTemplateId] = @AccountProjectEmployeeTemplateId WHERE (([A"& _ 
                "ccountProjectEmployeeId] = @Original_AccountProjectEmployeeId) AND ((@IsNull_Acc"& _ 
                "ountId = 1 AND [AccountId] IS NULL) OR ([AccountId] = @Original_AccountId)) AND "& _ 
                "([AccountProjectId] = @Original_AccountProjectId) AND ([AccountEmployeeId] = @Or"& _ 
                "iginal_AccountEmployeeId) AND ((@IsNull_TaskCompletedPercentage = 1 AND [TaskCom"& _ 
                "pletedPercentage] IS NULL) OR ([TaskCompletedPercentage] = @Original_TaskComplet"& _ 
                "edPercentage)) AND ((@IsNull_TaskCompleted = 1 AND [TaskCompleted] IS NULL) OR ("& _ 
                "[TaskCompleted] = @Original_TaskCompleted)) AND ((@IsNull_AccountRoleId = 1 AND "& _ 
                "[AccountRoleId] IS NULL) OR ([AccountRoleId] = @Original_AccountRoleId)) AND ((@"& _ 
                "IsNull_AccountBillingRateId = 1 AND [AccountBillingRateId] IS NULL) OR ([Account"& _ 
                "BillingRateId] = @Original_AccountBillingRateId)) AND ((@IsNull_AccountProjectEm"& _ 
                "ployeeTemplateId = 1 AND [AccountProjectEmployeeTemplateId] IS NULL) OR ([Accoun"& _ 
                "tProjectEmployeeTemplateId] = @Original_AccountProjectEmployeeTemplateId)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SE"& _ 
                "LECT AccountProjectEmployeeId, AccountId, AccountProjectId, AccountEmployeeId, T"& _ 
                "askCompletedPercentage, TaskCompleted, AccountRoleId, AccountBillingRateId, Acco"& _ 
                "untProjectEmployeeTemplateId FROM AccountProjectEmployee WHERE (AccountProjectEm"& _ 
                "ployeeId = @AccountProjectEmployeeId)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountProjectId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountProjectId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountEmployeeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountEmployeeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TaskCompletedPercentage", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TaskCompletedPercentage", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TaskCompleted", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TaskCompleted", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountRoleId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountRoleId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountBillingRateId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountBillingRateId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountProjectEmployeeTemplateId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountProjectEmployeeTemplateId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountProjectEmployeeId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountProjectEmployeeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AccountId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountProjectId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountProjectId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountEmployeeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountEmployeeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TaskCompletedPercentage", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TaskCompletedPercentage", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TaskCompletedPercentage", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TaskCompletedPercentage", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TaskCompleted", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TaskCompleted", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TaskCompleted", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TaskCompleted", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AccountRoleId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountRoleId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountRoleId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountRoleId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AccountBillingRateId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountBillingRateId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountBillingRateId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountBillingRateId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AccountProjectEmployeeTemplateId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountProjectEmployeeTemplateId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountProjectEmployeeTemplateId", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountProjectEmployeeTemplateId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountProjectEmployeeId", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountProjectEmployeeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.TimeLive.Quickbooks.Integrator.My.MySettings.Default.TimeLiveDevConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT AccountProjectEmployeeId, AccountId, AccountProjectId, AccountEmployeeId, "& _ 
                "TaskCompletedPercentage, TaskCompleted, AccountRoleId, AccountBillingRateId, Acc"& _ 
                "ountProjectEmployeeTemplateId FROM dbo.AccountProjectEmployee"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As TimeLiveDataSet.AccountProjectEmployeeDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetProjectEmployeeData() As TimeLiveDataSet.AccountProjectEmployeeDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As TimeLiveDataSet.AccountProjectEmployeeDataTable = New TimeLiveDataSet.AccountProjectEmployeeDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As TimeLiveDataSet.AccountProjectEmployeeDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As TimeLiveDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "AccountProjectEmployee")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_AccountProjectEmployeeId As Long, ByVal Original_AccountId As Global.System.Nullable(Of Integer), ByVal Original_AccountProjectId As Integer, ByVal Original_AccountEmployeeId As Integer, ByVal Original_TaskCompletedPercentage As Global.System.Nullable(Of Short), ByVal Original_TaskCompleted As Global.System.Nullable(Of Boolean), ByVal Original_AccountRoleId As Global.System.Nullable(Of Integer), ByVal Original_AccountBillingRateId As Global.System.Nullable(Of Integer), ByVal Original_AccountProjectEmployeeTemplateId As Global.System.Nullable(Of Long)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_AccountProjectEmployeeId,Long)
            If (Original_AccountId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_AccountId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_AccountProjectId,Integer)
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_AccountEmployeeId,Integer)
            If (Original_TaskCompletedPercentage.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_TaskCompletedPercentage.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_TaskCompleted.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_TaskCompleted.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_AccountRoleId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_AccountRoleId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_AccountBillingRateId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_AccountBillingRateId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_AccountProjectEmployeeTemplateId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_AccountProjectEmployeeTemplateId.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal AccountId As Global.System.Nullable(Of Integer), ByVal AccountProjectId As Integer, ByVal AccountEmployeeId As Integer, ByVal TaskCompletedPercentage As Global.System.Nullable(Of Short), ByVal TaskCompleted As Global.System.Nullable(Of Boolean), ByVal AccountRoleId As Global.System.Nullable(Of Integer), ByVal AccountBillingRateId As Global.System.Nullable(Of Integer), ByVal AccountProjectEmployeeTemplateId As Global.System.Nullable(Of Long)) As Integer
            If (AccountId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(AccountId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(AccountProjectId,Integer)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(AccountEmployeeId,Integer)
            If (TaskCompletedPercentage.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(TaskCompletedPercentage.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (TaskCompleted.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(TaskCompleted.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (AccountRoleId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(AccountRoleId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (AccountBillingRateId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(AccountBillingRateId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (AccountProjectEmployeeTemplateId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(AccountProjectEmployeeTemplateId.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal AccountId As Global.System.Nullable(Of Integer),  _
                    ByVal AccountProjectId As Integer,  _
                    ByVal AccountEmployeeId As Integer,  _
                    ByVal TaskCompletedPercentage As Global.System.Nullable(Of Short),  _
                    ByVal TaskCompleted As Global.System.Nullable(Of Boolean),  _
                    ByVal AccountRoleId As Global.System.Nullable(Of Integer),  _
                    ByVal AccountBillingRateId As Global.System.Nullable(Of Integer),  _
                    ByVal AccountProjectEmployeeTemplateId As Global.System.Nullable(Of Long),  _
                    ByVal Original_AccountProjectEmployeeId As Long,  _
                    ByVal Original_AccountId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_AccountProjectId As Integer,  _
                    ByVal Original_AccountEmployeeId As Integer,  _
                    ByVal Original_TaskCompletedPercentage As Global.System.Nullable(Of Short),  _
                    ByVal Original_TaskCompleted As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_AccountRoleId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_AccountBillingRateId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_AccountProjectEmployeeTemplateId As Global.System.Nullable(Of Long),  _
                    ByVal AccountProjectEmployeeId As Long) As Integer
            If (AccountId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(AccountId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(AccountProjectId,Integer)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(AccountEmployeeId,Integer)
            If (TaskCompletedPercentage.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(TaskCompletedPercentage.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (TaskCompleted.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(TaskCompleted.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (AccountRoleId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(AccountRoleId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (AccountBillingRateId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(AccountBillingRateId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (AccountProjectEmployeeTemplateId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(AccountProjectEmployeeTemplateId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_AccountProjectEmployeeId,Long)
            If (Original_AccountId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_AccountId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_AccountProjectId,Integer)
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_AccountEmployeeId,Integer)
            If (Original_TaskCompletedPercentage.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_TaskCompletedPercentage.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_TaskCompleted.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_TaskCompleted.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_AccountRoleId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_AccountRoleId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_AccountBillingRateId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_AccountBillingRateId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Original_AccountProjectEmployeeTemplateId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_AccountProjectEmployeeTemplateId.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(23).Value = CType(AccountProjectEmployeeId,Long)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal AccountId As Global.System.Nullable(Of Integer),  _
                    ByVal AccountProjectId As Integer,  _
                    ByVal AccountEmployeeId As Integer,  _
                    ByVal TaskCompletedPercentage As Global.System.Nullable(Of Short),  _
                    ByVal TaskCompleted As Global.System.Nullable(Of Boolean),  _
                    ByVal AccountRoleId As Global.System.Nullable(Of Integer),  _
                    ByVal AccountBillingRateId As Global.System.Nullable(Of Integer),  _
                    ByVal AccountProjectEmployeeTemplateId As Global.System.Nullable(Of Long),  _
                    ByVal Original_AccountProjectEmployeeId As Long,  _
                    ByVal Original_AccountId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_AccountProjectId As Integer,  _
                    ByVal Original_AccountEmployeeId As Integer,  _
                    ByVal Original_TaskCompletedPercentage As Global.System.Nullable(Of Short),  _
                    ByVal Original_TaskCompleted As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_AccountRoleId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_AccountBillingRateId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_AccountProjectEmployeeTemplateId As Global.System.Nullable(Of Long)) As Integer
            Return Me.Update(AccountId, AccountProjectId, AccountEmployeeId, TaskCompletedPercentage, TaskCompleted, AccountRoleId, AccountBillingRateId, AccountProjectEmployeeTemplateId, Original_AccountProjectEmployeeId, Original_AccountId, Original_AccountProjectId, Original_AccountEmployeeId, Original_TaskCompletedPercentage, Original_TaskCompleted, Original_AccountRoleId, Original_AccountBillingRateId, Original_AccountProjectEmployeeTemplateId, Original_AccountProjectEmployeeId)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class AccountEmployeeTimeEntryPeriodTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "AccountEmployeeTimeEntryPeriod"
            tableMapping.ColumnMappings.Add("AccountEmployeeTimeEntryPeriodId", "AccountEmployeeTimeEntryPeriodId")
            tableMapping.ColumnMappings.Add("AccountId", "AccountId")
            tableMapping.ColumnMappings.Add("AccountEmployeeId", "AccountEmployeeId")
            tableMapping.ColumnMappings.Add("TimeEntryStartDate", "TimeEntryStartDate")
            tableMapping.ColumnMappings.Add("TimeEntryEndDate", "TimeEntryEndDate")
            tableMapping.ColumnMappings.Add("TimeEntryViewType", "TimeEntryViewType")
            tableMapping.ColumnMappings.Add("Submitted", "Submitted")
            tableMapping.ColumnMappings.Add("Approved", "Approved")
            tableMapping.ColumnMappings.Add("Rejected", "Rejected")
            tableMapping.ColumnMappings.Add("InApproval", "InApproval")
            tableMapping.ColumnMappings.Add("SubmittedDate", "SubmittedDate")
            tableMapping.ColumnMappings.Add("ApprovedOn", "ApprovedOn")
            tableMapping.ColumnMappings.Add("ApprovedByEmployeeId", "ApprovedByEmployeeId")
            tableMapping.ColumnMappings.Add("RejectedOn", "RejectedOn")
            tableMapping.ColumnMappings.Add("RejectedByEmployeeId", "RejectedByEmployeeId")
            tableMapping.ColumnMappings.Add("SubmittedBy", "SubmittedBy")
            tableMapping.ColumnMappings.Add("CreatedByEmployeeId", "CreatedByEmployeeId")
            tableMapping.ColumnMappings.Add("ModifiedByEmployeeId", "ModifiedByEmployeeId")
            tableMapping.ColumnMappings.Add("PeriodDescription", "PeriodDescription")
            tableMapping.ColumnMappings.Add("CreatedOn", "CreatedOn")
            tableMapping.ColumnMappings.Add("ModifiedOn", "ModifiedOn")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[AccountEmployeeTimeEntryPeriod] WHERE (([AccountEmployeeTimeEn"& _ 
                "tryPeriodId] = @Original_AccountEmployeeTimeEntryPeriodId) AND ([AccountId] = @O"& _ 
                "riginal_AccountId) AND ([AccountEmployeeId] = @Original_AccountEmployeeId) AND ("& _ 
                "[TimeEntryStartDate] = @Original_TimeEntryStartDate) AND ([TimeEntryEndDate] = @"& _ 
                "Original_TimeEntryEndDate) AND ([TimeEntryViewType] = @Original_TimeEntryViewTyp"& _ 
                "e) AND ([Submitted] = @Original_Submitted) AND ([Approved] = @Original_Approved)"& _ 
                " AND ([Rejected] = @Original_Rejected) AND ([InApproval] = @Original_InApproval)"& _ 
                " AND ((@IsNull_SubmittedDate = 1 AND [SubmittedDate] IS NULL) OR ([SubmittedDate"& _ 
                "] = @Original_SubmittedDate)) AND ((@IsNull_ApprovedOn = 1 AND [ApprovedOn] IS N"& _ 
                "ULL) OR ([ApprovedOn] = @Original_ApprovedOn)) AND ((@IsNull_ApprovedByEmployeeI"& _ 
                "d = 1 AND [ApprovedByEmployeeId] IS NULL) OR ([ApprovedByEmployeeId] = @Original"& _ 
                "_ApprovedByEmployeeId)) AND ((@IsNull_RejectedOn = 1 AND [RejectedOn] IS NULL) O"& _ 
                "R ([RejectedOn] = @Original_RejectedOn)) AND ((@IsNull_RejectedByEmployeeId = 1 "& _ 
                "AND [RejectedByEmployeeId] IS NULL) OR ([RejectedByEmployeeId] = @Original_Rejec"& _ 
                "tedByEmployeeId)) AND ((@IsNull_SubmittedBy = 1 AND [SubmittedBy] IS NULL) OR (["& _ 
                "SubmittedBy] = @Original_SubmittedBy)) AND ((@IsNull_CreatedByEmployeeId = 1 AND"& _ 
                " [CreatedByEmployeeId] IS NULL) OR ([CreatedByEmployeeId] = @Original_CreatedByE"& _ 
                "mployeeId)) AND ((@IsNull_ModifiedByEmployeeId = 1 AND [ModifiedByEmployeeId] IS"& _ 
                " NULL) OR ([ModifiedByEmployeeId] = @Original_ModifiedByEmployeeId)) AND ((@IsNu"& _ 
                "ll_PeriodDescription = 1 AND [PeriodDescription] IS NULL) OR ([PeriodDescription"& _ 
                "] = @Original_PeriodDescription)) AND ((@IsNull_CreatedOn = 1 AND [CreatedOn] IS"& _ 
                " NULL) OR ([CreatedOn] = @Original_CreatedOn)) AND ((@IsNull_ModifiedOn = 1 AND "& _ 
                "[ModifiedOn] IS NULL) OR ([ModifiedOn] = @Original_ModifiedOn)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountEmployeeTimeEntryPeriodId", Global.System.Data.SqlDbType.UniqueIdentifier, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountEmployeeTimeEntryPeriodId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountEmployeeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountEmployeeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TimeEntryStartDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TimeEntryStartDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TimeEntryEndDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TimeEntryEndDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TimeEntryViewType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TimeEntryViewType", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Submitted", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Submitted", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Approved", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Approved", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Rejected", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Rejected", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InApproval", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InApproval", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SubmittedDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubmittedDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SubmittedDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubmittedDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ApprovedOn", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ApprovedOn", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ApprovedOn", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ApprovedOn", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ApprovedByEmployeeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ApprovedByEmployeeId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ApprovedByEmployeeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ApprovedByEmployeeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RejectedOn", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RejectedOn", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RejectedOn", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RejectedOn", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RejectedByEmployeeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RejectedByEmployeeId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RejectedByEmployeeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RejectedByEmployeeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SubmittedBy", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubmittedBy", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SubmittedBy", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubmittedBy", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CreatedByEmployeeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreatedByEmployeeId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CreatedByEmployeeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreatedByEmployeeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ModifiedByEmployeeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModifiedByEmployeeId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ModifiedByEmployeeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModifiedByEmployeeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PeriodDescription", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PeriodDescription", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PeriodDescription", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PeriodDescription", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CreatedOn", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreatedOn", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CreatedOn", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreatedOn", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ModifiedOn", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModifiedOn", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ModifiedOn", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModifiedOn", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[AccountEmployeeTimeEntryPeriod] ([AccountEmployeeTimeEntryPeri"& _ 
                "odId], [AccountId], [AccountEmployeeId], [TimeEntryStartDate], [TimeEntryEndDate"& _ 
                "], [TimeEntryViewType], [Submitted], [Approved], [Rejected], [InApproval], [Subm"& _ 
                "ittedDate], [ApprovedOn], [ApprovedByEmployeeId], [RejectedOn], [RejectedByEmplo"& _ 
                "yeeId], [SubmittedBy], [CreatedByEmployeeId], [ModifiedByEmployeeId], [PeriodDes"& _ 
                "cription], [CreatedOn], [ModifiedOn]) VALUES (@AccountEmployeeTimeEntryPeriodId,"& _ 
                " @AccountId, @AccountEmployeeId, @TimeEntryStartDate, @TimeEntryEndDate, @TimeEn"& _ 
                "tryViewType, @Submitted, @Approved, @Rejected, @InApproval, @SubmittedDate, @App"& _ 
                "rovedOn, @ApprovedByEmployeeId, @RejectedOn, @RejectedByEmployeeId, @SubmittedBy"& _ 
                ", @CreatedByEmployeeId, @ModifiedByEmployeeId, @PeriodDescription, @CreatedOn, @"& _ 
                "ModifiedOn);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT AccountEmployeeTimeEntryPeriodId, AccountId, AccountEmploye"& _ 
                "eId, TimeEntryStartDate, TimeEntryEndDate, TimeEntryViewType, Submitted, Approve"& _ 
                "d, Rejected, InApproval, SubmittedDate, ApprovedOn, ApprovedByEmployeeId, Reject"& _ 
                "edOn, RejectedByEmployeeId, SubmittedBy, CreatedByEmployeeId, ModifiedByEmployee"& _ 
                "Id, PeriodDescription, CreatedOn, ModifiedOn FROM AccountEmployeeTimeEntryPeriod"& _ 
                " WHERE (AccountEmployeeTimeEntryPeriodId = @AccountEmployeeTimeEntryPeriodId)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountEmployeeTimeEntryPeriodId", Global.System.Data.SqlDbType.UniqueIdentifier, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountEmployeeTimeEntryPeriodId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountEmployeeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountEmployeeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TimeEntryStartDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TimeEntryStartDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TimeEntryEndDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TimeEntryEndDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TimeEntryViewType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TimeEntryViewType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Submitted", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Submitted", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Approved", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Approved", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Rejected", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Rejected", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InApproval", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InApproval", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubmittedDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubmittedDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ApprovedOn", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ApprovedOn", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ApprovedByEmployeeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ApprovedByEmployeeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RejectedOn", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RejectedOn", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RejectedByEmployeeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RejectedByEmployeeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubmittedBy", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubmittedBy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CreatedByEmployeeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreatedByEmployeeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ModifiedByEmployeeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModifiedByEmployeeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PeriodDescription", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PeriodDescription", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CreatedOn", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreatedOn", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ModifiedOn", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModifiedOn", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[AccountEmployeeTimeEntryPeriod] SET [AccountEmployeeTimeEntryPeriod"& _ 
                "Id] = @AccountEmployeeTimeEntryPeriodId, [AccountId] = @AccountId, [AccountEmplo"& _ 
                "yeeId] = @AccountEmployeeId, [TimeEntryStartDate] = @TimeEntryStartDate, [TimeEn"& _ 
                "tryEndDate] = @TimeEntryEndDate, [TimeEntryViewType] = @TimeEntryViewType, [Subm"& _ 
                "itted] = @Submitted, [Approved] = @Approved, [Rejected] = @Rejected, [InApproval"& _ 
                "] = @InApproval, [SubmittedDate] = @SubmittedDate, [ApprovedOn] = @ApprovedOn, ["& _ 
                "ApprovedByEmployeeId] = @ApprovedByEmployeeId, [RejectedOn] = @RejectedOn, [Reje"& _ 
                "ctedByEmployeeId] = @RejectedByEmployeeId, [SubmittedBy] = @SubmittedBy, [Create"& _ 
                "dByEmployeeId] = @CreatedByEmployeeId, [ModifiedByEmployeeId] = @ModifiedByEmplo"& _ 
                "yeeId, [PeriodDescription] = @PeriodDescription, [CreatedOn] = @CreatedOn, [Modi"& _ 
                "fiedOn] = @ModifiedOn WHERE (([AccountEmployeeTimeEntryPeriodId] = @Original_Acc"& _ 
                "ountEmployeeTimeEntryPeriodId) AND ([AccountId] = @Original_AccountId) AND ([Acc"& _ 
                "ountEmployeeId] = @Original_AccountEmployeeId) AND ([TimeEntryStartDate] = @Orig"& _ 
                "inal_TimeEntryStartDate) AND ([TimeEntryEndDate] = @Original_TimeEntryEndDate) A"& _ 
                "ND ([TimeEntryViewType] = @Original_TimeEntryViewType) AND ([Submitted] = @Origi"& _ 
                "nal_Submitted) AND ([Approved] = @Original_Approved) AND ([Rejected] = @Original"& _ 
                "_Rejected) AND ([InApproval] = @Original_InApproval) AND ((@IsNull_SubmittedDate"& _ 
                " = 1 AND [SubmittedDate] IS NULL) OR ([SubmittedDate] = @Original_SubmittedDate)"& _ 
                ") AND ((@IsNull_ApprovedOn = 1 AND [ApprovedOn] IS NULL) OR ([ApprovedOn] = @Ori"& _ 
                "ginal_ApprovedOn)) AND ((@IsNull_ApprovedByEmployeeId = 1 AND [ApprovedByEmploye"& _ 
                "eId] IS NULL) OR ([ApprovedByEmployeeId] = @Original_ApprovedByEmployeeId)) AND "& _ 
                "((@IsNull_RejectedOn = 1 AND [RejectedOn] IS NULL) OR ([RejectedOn] = @Original_"& _ 
                "RejectedOn)) AND ((@IsNull_RejectedByEmployeeId = 1 AND [RejectedByEmployeeId] I"& _ 
                "S NULL) OR ([RejectedByEmployeeId] = @Original_RejectedByEmployeeId)) AND ((@IsN"& _ 
                "ull_SubmittedBy = 1 AND [SubmittedBy] IS NULL) OR ([SubmittedBy] = @Original_Sub"& _ 
                "mittedBy)) AND ((@IsNull_CreatedByEmployeeId = 1 AND [CreatedByEmployeeId] IS NU"& _ 
                "LL) OR ([CreatedByEmployeeId] = @Original_CreatedByEmployeeId)) AND ((@IsNull_Mo"& _ 
                "difiedByEmployeeId = 1 AND [ModifiedByEmployeeId] IS NULL) OR ([ModifiedByEmploy"& _ 
                "eeId] = @Original_ModifiedByEmployeeId)) AND ((@IsNull_PeriodDescription = 1 AND"& _ 
                " [PeriodDescription] IS NULL) OR ([PeriodDescription] = @Original_PeriodDescript"& _ 
                "ion)) AND ((@IsNull_CreatedOn = 1 AND [CreatedOn] IS NULL) OR ([CreatedOn] = @Or"& _ 
                "iginal_CreatedOn)) AND ((@IsNull_ModifiedOn = 1 AND [ModifiedOn] IS NULL) OR ([M"& _ 
                "odifiedOn] = @Original_ModifiedOn)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT AccountEmployeeTimeEntryPeriodId, "& _ 
                "AccountId, AccountEmployeeId, TimeEntryStartDate, TimeEntryEndDate, TimeEntryVie"& _ 
                "wType, Submitted, Approved, Rejected, InApproval, SubmittedDate, ApprovedOn, App"& _ 
                "rovedByEmployeeId, RejectedOn, RejectedByEmployeeId, SubmittedBy, CreatedByEmplo"& _ 
                "yeeId, ModifiedByEmployeeId, PeriodDescription, CreatedOn, ModifiedOn FROM Accou"& _ 
                "ntEmployeeTimeEntryPeriod WHERE (AccountEmployeeTimeEntryPeriodId = @AccountEmpl"& _ 
                "oyeeTimeEntryPeriodId)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountEmployeeTimeEntryPeriodId", Global.System.Data.SqlDbType.UniqueIdentifier, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountEmployeeTimeEntryPeriodId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountEmployeeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountEmployeeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TimeEntryStartDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TimeEntryStartDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TimeEntryEndDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TimeEntryEndDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TimeEntryViewType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TimeEntryViewType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Submitted", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Submitted", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Approved", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Approved", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Rejected", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Rejected", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InApproval", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InApproval", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubmittedDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubmittedDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ApprovedOn", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ApprovedOn", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ApprovedByEmployeeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ApprovedByEmployeeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RejectedOn", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RejectedOn", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RejectedByEmployeeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RejectedByEmployeeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubmittedBy", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubmittedBy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CreatedByEmployeeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreatedByEmployeeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ModifiedByEmployeeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModifiedByEmployeeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PeriodDescription", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PeriodDescription", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CreatedOn", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreatedOn", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ModifiedOn", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModifiedOn", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountEmployeeTimeEntryPeriodId", Global.System.Data.SqlDbType.UniqueIdentifier, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountEmployeeTimeEntryPeriodId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AccountEmployeeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountEmployeeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TimeEntryStartDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TimeEntryStartDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TimeEntryEndDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TimeEntryEndDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TimeEntryViewType", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TimeEntryViewType", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Submitted", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Submitted", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Approved", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Approved", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Rejected", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Rejected", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InApproval", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InApproval", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SubmittedDate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubmittedDate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SubmittedDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubmittedDate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ApprovedOn", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ApprovedOn", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ApprovedOn", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ApprovedOn", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ApprovedByEmployeeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ApprovedByEmployeeId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ApprovedByEmployeeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ApprovedByEmployeeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RejectedOn", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RejectedOn", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RejectedOn", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RejectedOn", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RejectedByEmployeeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RejectedByEmployeeId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RejectedByEmployeeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RejectedByEmployeeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SubmittedBy", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubmittedBy", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SubmittedBy", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubmittedBy", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CreatedByEmployeeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreatedByEmployeeId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CreatedByEmployeeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreatedByEmployeeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ModifiedByEmployeeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModifiedByEmployeeId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ModifiedByEmployeeId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModifiedByEmployeeId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PeriodDescription", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PeriodDescription", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PeriodDescription", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PeriodDescription", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CreatedOn", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreatedOn", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CreatedOn", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreatedOn", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ModifiedOn", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModifiedOn", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ModifiedOn", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModifiedOn", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.TimeLive.Quickbooks.Integrator.My.MySettings.Default.TimeLiveDevConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(6) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT AccountEmployeeTimeEntryPeriodId, AccountId, AccountEmployeeId, TimeEntryS"& _ 
                "tartDate, TimeEntryEndDate, TimeEntryViewType, Submitted, Approved, Rejected, In"& _ 
                "Approval, SubmittedDate, ApprovedOn, ApprovedByEmployeeId, RejectedOn, RejectedB"& _ 
                "yEmployeeId, SubmittedBy, CreatedByEmployeeId, ModifiedByEmployeeId, PeriodDescr"& _ 
                "iption, CreatedOn, ModifiedOn FROM dbo.AccountEmployeeTimeEntryPeriod"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT Approved"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM AccountEmployeeTimeEntryPeriod"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE (AccountEmployeeId = "& _ 
                "@EmployeeId AND TimeEntryStartDate <= @Date AND TimeEntryEndDate >= @Date)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EmployeeId", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountEmployeeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Date", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "TimeEntryStartDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT Submitted"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM AccountEmployeeTimeEntryPeriod"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE (AccountEmployeeId ="& _ 
                " @EmployeeId AND TimeEntryStartDate <= @Date AND TimeEntryEndDate >= @Date)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EmployeeId", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountEmployeeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Date", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "TimeEntryStartDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT        COUNT(*) AS Expr1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            AccountEmployeeTimeEntryPeriod"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "WHERE        (AccountEmployeeId = @EmployeeId) AND (TimeEntryStartDate <= @End_D"& _ 
                "ate) AND (TimeEntryEndDate >= @Start_Date)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EmployeeId", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountEmployeeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Start_Date", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "TimeEntryEndDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@End_Date", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "TimeEntryStartDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT        COUNT(*) AS Expr1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            AccountEmployeeTimeEntryPeriod"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "WHERE        (AccountEmployeeId = @EmployeeId) AND (TimeEntryStartDate <= @End_D"& _ 
                "ate) AND (TimeEntryEndDate >= @Start_Date) AND Rejected = 'True'"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EmployeeId", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountEmployeeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Start_Date", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "TimeEntryEndDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@End_Date", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "TimeEntryStartDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT        COUNT(*) AS Expr1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            AccountEmployeeTimeEntryPeriod"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "WHERE        (AccountEmployeeId = @EmployeeId) AND (TimeEntryStartDate <= @End_D"& _ 
                "ate) AND (TimeEntryEndDate >= @Start_Date) AND (Approved = 'False')"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EmployeeId", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountEmployeeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Start_Date", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "TimeEntryEndDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@End_Date", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "TimeEntryStartDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(6).Connection = Me.Connection
            Me._commandCollection(6).CommandText = "SELECT        COUNT(*) AS Expr1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            AccountEmployeeTimeEntryPeriod"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "WHERE        (AccountEmployeeId = @EmployeeId) AND (TimeEntryStartDate <= @End_D"& _ 
                "ate) AND (TimeEntryEndDate >= @Start_Date) AND (Submitted = 'False')"
            Me._commandCollection(6).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EmployeeId", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "AccountEmployeeId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Start_Date", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "TimeEntryEndDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@End_Date", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "TimeEntryStartDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As TimeLiveDataSet.AccountEmployeeTimeEntryPeriodDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As TimeLiveDataSet.AccountEmployeeTimeEntryPeriodDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As TimeLiveDataSet.AccountEmployeeTimeEntryPeriodDataTable = New TimeLiveDataSet.AccountEmployeeTimeEntryPeriodDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As TimeLiveDataSet.AccountEmployeeTimeEntryPeriodDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As TimeLiveDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "AccountEmployeeTimeEntryPeriod")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_AccountEmployeeTimeEntryPeriodId As System.Guid,  _
                    ByVal Original_AccountId As Integer,  _
                    ByVal Original_AccountEmployeeId As Integer,  _
                    ByVal Original_TimeEntryStartDate As Date,  _
                    ByVal Original_TimeEntryEndDate As Date,  _
                    ByVal Original_TimeEntryViewType As String,  _
                    ByVal Original_Submitted As Boolean,  _
                    ByVal Original_Approved As Boolean,  _
                    ByVal Original_Rejected As Boolean,  _
                    ByVal Original_InApproval As Boolean,  _
                    ByVal Original_SubmittedDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_ApprovedOn As Global.System.Nullable(Of Date),  _
                    ByVal Original_ApprovedByEmployeeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_RejectedOn As Global.System.Nullable(Of Date),  _
                    ByVal Original_RejectedByEmployeeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SubmittedBy As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CreatedByEmployeeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ModifiedByEmployeeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_PeriodDescription As String,  _
                    ByVal Original_CreatedOn As Global.System.Nullable(Of Date),  _
                    ByVal Original_ModifiedOn As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_AccountEmployeeTimeEntryPeriodId,System.Guid)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_AccountId,Integer)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_AccountEmployeeId,Integer)
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_TimeEntryStartDate,Date)
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_TimeEntryEndDate,Date)
            If (Original_TimeEntryViewType Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TimeEntryViewType")
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_TimeEntryViewType,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_Submitted,Boolean)
            Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_Approved,Boolean)
            Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_Rejected,Boolean)
            Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_InApproval,Boolean)
            If (Original_SubmittedDate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_SubmittedDate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Original_ApprovedOn.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_ApprovedOn.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Original_ApprovedByEmployeeId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_ApprovedByEmployeeId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Original_RejectedOn.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_RejectedOn.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Original_RejectedByEmployeeId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_RejectedByEmployeeId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Original_SubmittedBy.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_SubmittedBy.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Original_CreatedByEmployeeId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_CreatedByEmployeeId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (Original_ModifiedByEmployeeId.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_ModifiedByEmployeeId.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Original_PeriodDescription Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_PeriodDescription,String)
            End If
            If (Original_CreatedOn.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_CreatedOn.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Original_ModifiedOn.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_ModifiedOn.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal AccountEmployeeTimeEntryPeriodId As System.Guid,  _
                    ByVal AccountId As Integer,  _
                    ByVal AccountEmployeeId As Integer,  _
                    ByVal TimeEntryStartDate As Date,  _
                    ByVal TimeEntryEndDate As Date,  _
                    ByVal TimeEntryViewType As String,  _
                    ByVal Submitted As Boolean,  _
                    ByVal Approved As Boolean,  _
                    ByVal Rejected As Boolean,  _
                    ByVal InApproval As Boolean,  _
                    ByVal SubmittedDate As Global.System.Nullable(Of Date),  _
                    ByVal ApprovedOn As Global.System.Nullable(Of Date),  _
                    ByVal ApprovedByEmployeeId As Global.System.Nullable(Of Integer),  _
                    ByVal RejectedOn As Global.System.Nullable(Of Date),  _
                    ByVal RejectedByEmployeeId As Global.System.Nullable(Of Integer),  _
                    ByVal SubmittedBy As Global.System.Nullable(Of Integer),  _
                    ByVal CreatedByEmployeeId As Global.System.Nullable(Of Integer),  _
                    ByVal ModifiedByEmployeeId As Global.System.Nullable(Of Integer),  _
                    ByVal PeriodDescription As String,  _
                    ByVal CreatedOn As Global.System.Nullable(Of Date),  _
                    ByVal ModifiedOn As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(AccountEmployeeTimeEntryPeriodId,System.Guid)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(AccountId,Integer)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(AccountEmployeeId,Integer)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(TimeEntryStartDate,Date)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(TimeEntryEndDate,Date)
            If (TimeEntryViewType Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TimeEntryViewType")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(TimeEntryViewType,String)
            End If
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(Submitted,Boolean)
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(Approved,Boolean)
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(Rejected,Boolean)
            Me.Adapter.InsertCommand.Parameters(9).Value = CType(InApproval,Boolean)
            If (SubmittedDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(SubmittedDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (ApprovedOn.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(ApprovedOn.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (ApprovedByEmployeeId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(ApprovedByEmployeeId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (RejectedOn.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(RejectedOn.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (RejectedByEmployeeId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(RejectedByEmployeeId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (SubmittedBy.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(SubmittedBy.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (CreatedByEmployeeId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(CreatedByEmployeeId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (ModifiedByEmployeeId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(ModifiedByEmployeeId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (PeriodDescription Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(PeriodDescription,String)
            End If
            If (CreatedOn.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(CreatedOn.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (ModifiedOn.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(ModifiedOn.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal AccountEmployeeTimeEntryPeriodId As System.Guid,  _
                    ByVal AccountId As Integer,  _
                    ByVal AccountEmployeeId As Integer,  _
                    ByVal TimeEntryStartDate As Date,  _
                    ByVal TimeEntryEndDate As Date,  _
                    ByVal TimeEntryViewType As String,  _
                    ByVal Submitted As Boolean,  _
                    ByVal Approved As Boolean,  _
                    ByVal Rejected As Boolean,  _
                    ByVal InApproval As Boolean,  _
                    ByVal SubmittedDate As Global.System.Nullable(Of Date),  _
                    ByVal ApprovedOn As Global.System.Nullable(Of Date),  _
                    ByVal ApprovedByEmployeeId As Global.System.Nullable(Of Integer),  _
                    ByVal RejectedOn As Global.System.Nullable(Of Date),  _
                    ByVal RejectedByEmployeeId As Global.System.Nullable(Of Integer),  _
                    ByVal SubmittedBy As Global.System.Nullable(Of Integer),  _
                    ByVal CreatedByEmployeeId As Global.System.Nullable(Of Integer),  _
                    ByVal ModifiedByEmployeeId As Global.System.Nullable(Of Integer),  _
                    ByVal PeriodDescription As String,  _
                    ByVal CreatedOn As Global.System.Nullable(Of Date),  _
                    ByVal ModifiedOn As Global.System.Nullable(Of Date),  _
                    ByVal Original_AccountEmployeeTimeEntryPeriodId As System.Guid,  _
                    ByVal Original_AccountId As Integer,  _
                    ByVal Original_AccountEmployeeId As Integer,  _
                    ByVal Original_TimeEntryStartDate As Date,  _
                    ByVal Original_TimeEntryEndDate As Date,  _
                    ByVal Original_TimeEntryViewType As String,  _
                    ByVal Original_Submitted As Boolean,  _
                    ByVal Original_Approved As Boolean,  _
                    ByVal Original_Rejected As Boolean,  _
                    ByVal Original_InApproval As Boolean,  _
                    ByVal Original_SubmittedDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_ApprovedOn As Global.System.Nullable(Of Date),  _
                    ByVal Original_ApprovedByEmployeeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_RejectedOn As Global.System.Nullable(Of Date),  _
                    ByVal Original_RejectedByEmployeeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SubmittedBy As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CreatedByEmployeeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ModifiedByEmployeeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_PeriodDescription As String,  _
                    ByVal Original_CreatedOn As Global.System.Nullable(Of Date),  _
                    ByVal Original_ModifiedOn As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(AccountEmployeeTimeEntryPeriodId,System.Guid)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(AccountId,Integer)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(AccountEmployeeId,Integer)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(TimeEntryStartDate,Date)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(TimeEntryEndDate,Date)
            If (TimeEntryViewType Is Nothing) Then
                Throw New Global.System.ArgumentNullException("TimeEntryViewType")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(TimeEntryViewType,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Submitted,Boolean)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Approved,Boolean)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Rejected,Boolean)
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(InApproval,Boolean)
            If (SubmittedDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(SubmittedDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (ApprovedOn.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(ApprovedOn.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (ApprovedByEmployeeId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(ApprovedByEmployeeId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (RejectedOn.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(RejectedOn.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (RejectedByEmployeeId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(RejectedByEmployeeId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (SubmittedBy.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(SubmittedBy.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (CreatedByEmployeeId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(CreatedByEmployeeId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (ModifiedByEmployeeId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(ModifiedByEmployeeId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (PeriodDescription Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(PeriodDescription,String)
            End If
            If (CreatedOn.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(CreatedOn.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (ModifiedOn.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(ModifiedOn.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_AccountEmployeeTimeEntryPeriodId,System.Guid)
            Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_AccountId,Integer)
            Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_AccountEmployeeId,Integer)
            Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_TimeEntryStartDate,Date)
            Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_TimeEntryEndDate,Date)
            If (Original_TimeEntryViewType Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_TimeEntryViewType")
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_TimeEntryViewType,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_Submitted,Boolean)
            Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_Approved,Boolean)
            Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_Rejected,Boolean)
            Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_InApproval,Boolean)
            If (Original_SubmittedDate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_SubmittedDate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Original_ApprovedOn.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_ApprovedOn.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (Original_ApprovedByEmployeeId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_ApprovedByEmployeeId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Original_RejectedOn.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_RejectedOn.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_RejectedByEmployeeId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_RejectedByEmployeeId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_SubmittedBy.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_SubmittedBy.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (Original_CreatedByEmployeeId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_CreatedByEmployeeId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (Original_ModifiedByEmployeeId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_ModifiedByEmployeeId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (Original_PeriodDescription Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(Original_PeriodDescription,String)
            End If
            If (Original_CreatedOn.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_CreatedOn.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (Original_ModifiedOn.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(Original_ModifiedOn.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal AccountId As Integer,  _
                    ByVal AccountEmployeeId As Integer,  _
                    ByVal TimeEntryStartDate As Date,  _
                    ByVal TimeEntryEndDate As Date,  _
                    ByVal TimeEntryViewType As String,  _
                    ByVal Submitted As Boolean,  _
                    ByVal Approved As Boolean,  _
                    ByVal Rejected As Boolean,  _
                    ByVal InApproval As Boolean,  _
                    ByVal SubmittedDate As Global.System.Nullable(Of Date),  _
                    ByVal ApprovedOn As Global.System.Nullable(Of Date),  _
                    ByVal ApprovedByEmployeeId As Global.System.Nullable(Of Integer),  _
                    ByVal RejectedOn As Global.System.Nullable(Of Date),  _
                    ByVal RejectedByEmployeeId As Global.System.Nullable(Of Integer),  _
                    ByVal SubmittedBy As Global.System.Nullable(Of Integer),  _
                    ByVal CreatedByEmployeeId As Global.System.Nullable(Of Integer),  _
                    ByVal ModifiedByEmployeeId As Global.System.Nullable(Of Integer),  _
                    ByVal PeriodDescription As String,  _
                    ByVal CreatedOn As Global.System.Nullable(Of Date),  _
                    ByVal ModifiedOn As Global.System.Nullable(Of Date),  _
                    ByVal Original_AccountEmployeeTimeEntryPeriodId As System.Guid,  _
                    ByVal Original_AccountId As Integer,  _
                    ByVal Original_AccountEmployeeId As Integer,  _
                    ByVal Original_TimeEntryStartDate As Date,  _
                    ByVal Original_TimeEntryEndDate As Date,  _
                    ByVal Original_TimeEntryViewType As String,  _
                    ByVal Original_Submitted As Boolean,  _
                    ByVal Original_Approved As Boolean,  _
                    ByVal Original_Rejected As Boolean,  _
                    ByVal Original_InApproval As Boolean,  _
                    ByVal Original_SubmittedDate As Global.System.Nullable(Of Date),  _
                    ByVal Original_ApprovedOn As Global.System.Nullable(Of Date),  _
                    ByVal Original_ApprovedByEmployeeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_RejectedOn As Global.System.Nullable(Of Date),  _
                    ByVal Original_RejectedByEmployeeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SubmittedBy As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CreatedByEmployeeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ModifiedByEmployeeId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_PeriodDescription As String,  _
                    ByVal Original_CreatedOn As Global.System.Nullable(Of Date),  _
                    ByVal Original_ModifiedOn As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(Original_AccountEmployeeTimeEntryPeriodId, AccountId, AccountEmployeeId, TimeEntryStartDate, TimeEntryEndDate, TimeEntryViewType, Submitted, Approved, Rejected, InApproval, SubmittedDate, ApprovedOn, ApprovedByEmployeeId, RejectedOn, RejectedByEmployeeId, SubmittedBy, CreatedByEmployeeId, ModifiedByEmployeeId, PeriodDescription, CreatedOn, ModifiedOn, Original_AccountEmployeeTimeEntryPeriodId, Original_AccountId, Original_AccountEmployeeId, Original_TimeEntryStartDate, Original_TimeEntryEndDate, Original_TimeEntryViewType, Original_Submitted, Original_Approved, Original_Rejected, Original_InApproval, Original_SubmittedDate, Original_ApprovedOn, Original_ApprovedByEmployeeId, Original_RejectedOn, Original_RejectedByEmployeeId, Original_SubmittedBy, Original_CreatedByEmployeeId, Original_ModifiedByEmployeeId, Original_PeriodDescription, Original_CreatedOn, Original_ModifiedOn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTimeApproval(ByVal EmployeeId As Integer, ByVal _Date As Date) As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            command.Parameters(0).Value = CType(EmployeeId,Integer)
            command.Parameters(1).Value = CType(_Date,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTimeSubmission(ByVal EmployeeId As Integer, ByVal _Date As Date) As Global.System.Nullable(Of Boolean)
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            command.Parameters(0).Value = CType(EmployeeId,Integer)
            command.Parameters(1).Value = CType(_Date,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Boolean)()
            Else
                Return New Global.System.Nullable(Of Boolean)(CType(returnValue,Boolean))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTotalNumEntries(ByVal EmployeeId As Integer, ByVal Start_Date As Date, ByVal End_Date As Date) As Global.System.Nullable(Of Integer)
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            command.Parameters(0).Value = CType(EmployeeId,Integer)
            command.Parameters(1).Value = CType(Start_Date,Date)
            command.Parameters(2).Value = CType(End_Date,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Integer)()
            Else
                Return New Global.System.Nullable(Of Integer)(CType(returnValue,Integer))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTotalNumRejectedEntries(ByVal EmployeeId As Integer, ByVal Start_Date As Date, ByVal End_Date As Date) As Global.System.Nullable(Of Integer)
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(4)
            command.Parameters(0).Value = CType(EmployeeId,Integer)
            command.Parameters(1).Value = CType(Start_Date,Date)
            command.Parameters(2).Value = CType(End_Date,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Integer)()
            Else
                Return New Global.System.Nullable(Of Integer)(CType(returnValue,Integer))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTotalNumUnapprovedEntries(ByVal EmployeeId As Integer, ByVal Start_Date As Date, ByVal End_Date As Date) As Global.System.Nullable(Of Integer)
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(5)
            command.Parameters(0).Value = CType(EmployeeId,Integer)
            command.Parameters(1).Value = CType(Start_Date,Date)
            command.Parameters(2).Value = CType(End_Date,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Integer)()
            Else
                Return New Global.System.Nullable(Of Integer)(CType(returnValue,Integer))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetTotalNumUnsubmittedEntries(ByVal EmployeeId As Integer, ByVal Start_Date As Date, ByVal End_Date As Date) As Global.System.Nullable(Of Integer)
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(6)
            command.Parameters(0).Value = CType(EmployeeId,Integer)
            command.Parameters(1).Value = CType(Start_Date,Date)
            command.Parameters(2).Value = CType(End_Date,Date)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Integer)()
            Else
                Return New Global.System.Nullable(Of Integer)(CType(returnValue,Integer))
            End If
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _accountPartyTableAdapter As AccountPartyTableAdapter
        
        Private _accountProjectTaskEmployeeTableAdapter As AccountProjectTaskEmployeeTableAdapter
        
        Private _accountProjectEmployeeTableAdapter As AccountProjectEmployeeTableAdapter
        
        Private _accountEmployeeTimeEntryPeriodTableAdapter As AccountEmployeeTimeEntryPeriodTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property AccountPartyTableAdapter() As AccountPartyTableAdapter
            Get
                Return Me._accountPartyTableAdapter
            End Get
            Set
                Me._accountPartyTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property AccountProjectTaskEmployeeTableAdapter() As AccountProjectTaskEmployeeTableAdapter
            Get
                Return Me._accountProjectTaskEmployeeTableAdapter
            End Get
            Set
                Me._accountProjectTaskEmployeeTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property AccountProjectEmployeeTableAdapter() As AccountProjectEmployeeTableAdapter
            Get
                Return Me._accountProjectEmployeeTableAdapter
            End Get
            Set
                Me._accountProjectEmployeeTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property AccountEmployeeTimeEntryPeriodTableAdapter() As AccountEmployeeTimeEntryPeriodTableAdapter
            Get
                Return Me._accountEmployeeTimeEntryPeriodTableAdapter
            End Get
            Set
                Me._accountEmployeeTimeEntryPeriodTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._accountPartyTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._accountPartyTableAdapter.Connection) Is Nothing)) Then
                    Return Me._accountPartyTableAdapter.Connection
                End If
                If ((Not (Me._accountProjectTaskEmployeeTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._accountProjectTaskEmployeeTableAdapter.Connection) Is Nothing)) Then
                    Return Me._accountProjectTaskEmployeeTableAdapter.Connection
                End If
                If ((Not (Me._accountProjectEmployeeTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._accountProjectEmployeeTableAdapter.Connection) Is Nothing)) Then
                    Return Me._accountProjectEmployeeTableAdapter.Connection
                End If
                If ((Not (Me._accountEmployeeTimeEntryPeriodTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._accountEmployeeTimeEntryPeriodTableAdapter.Connection) Is Nothing)) Then
                    Return Me._accountEmployeeTimeEntryPeriodTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._accountPartyTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._accountProjectTaskEmployeeTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._accountProjectEmployeeTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._accountEmployeeTimeEntryPeriodTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As TimeLiveDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._accountPartyTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.AccountParty.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._accountPartyTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._accountProjectTaskEmployeeTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.AccountProjectTaskEmployee.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._accountProjectTaskEmployeeTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._accountProjectEmployeeTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.AccountProjectEmployee.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._accountProjectEmployeeTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._accountEmployeeTimeEntryPeriodTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.AccountEmployeeTimeEntryPeriod.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._accountEmployeeTimeEntryPeriodTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As TimeLiveDataSet, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._accountPartyTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.AccountParty.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._accountPartyTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._accountProjectTaskEmployeeTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.AccountProjectTaskEmployee.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._accountProjectTaskEmployeeTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._accountProjectEmployeeTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.AccountProjectEmployee.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._accountProjectEmployeeTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._accountEmployeeTimeEntryPeriodTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.AccountEmployeeTimeEntryPeriod.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._accountEmployeeTimeEntryPeriodTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As TimeLiveDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._accountEmployeeTimeEntryPeriodTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.AccountEmployeeTimeEntryPeriod.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._accountEmployeeTimeEntryPeriodTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._accountProjectEmployeeTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.AccountProjectEmployee.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._accountProjectEmployeeTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._accountProjectTaskEmployeeTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.AccountProjectTaskEmployee.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._accountProjectTaskEmployeeTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._accountPartyTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.AccountParty.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._accountPartyTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As TimeLiveDataSet) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._accountPartyTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._accountPartyTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._accountProjectTaskEmployeeTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._accountProjectTaskEmployeeTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._accountProjectEmployeeTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._accountProjectEmployeeTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._accountEmployeeTimeEntryPeriodTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._accountEmployeeTimeEntryPeriodTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._accountPartyTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._accountPartyTableAdapter, Me._accountPartyTableAdapter.Connection)
                    Me._accountPartyTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._accountPartyTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._accountPartyTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._accountPartyTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._accountPartyTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._accountProjectTaskEmployeeTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._accountProjectTaskEmployeeTableAdapter, Me._accountProjectTaskEmployeeTableAdapter.Connection)
                    Me._accountProjectTaskEmployeeTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._accountProjectTaskEmployeeTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._accountProjectTaskEmployeeTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._accountProjectTaskEmployeeTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._accountProjectTaskEmployeeTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._accountProjectEmployeeTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._accountProjectEmployeeTableAdapter, Me._accountProjectEmployeeTableAdapter.Connection)
                    Me._accountProjectEmployeeTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._accountProjectEmployeeTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._accountProjectEmployeeTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._accountProjectEmployeeTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._accountProjectEmployeeTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._accountEmployeeTimeEntryPeriodTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._accountEmployeeTimeEntryPeriodTableAdapter, Me._accountEmployeeTimeEntryPeriodTableAdapter.Connection)
                    Me._accountEmployeeTimeEntryPeriodTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._accountEmployeeTimeEntryPeriodTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._accountEmployeeTimeEntryPeriodTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._accountEmployeeTimeEntryPeriodTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._accountEmployeeTimeEntryPeriodTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._accountPartyTableAdapter) Is Nothing) Then
                    Me._accountPartyTableAdapter.Connection = CType(revertConnections(Me._accountPartyTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._accountPartyTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._accountProjectTaskEmployeeTableAdapter) Is Nothing) Then
                    Me._accountProjectTaskEmployeeTableAdapter.Connection = CType(revertConnections(Me._accountProjectTaskEmployeeTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._accountProjectTaskEmployeeTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._accountProjectEmployeeTableAdapter) Is Nothing) Then
                    Me._accountProjectEmployeeTableAdapter.Connection = CType(revertConnections(Me._accountProjectEmployeeTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._accountProjectEmployeeTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._accountEmployeeTimeEntryPeriodTableAdapter) Is Nothing) Then
                    Me._accountEmployeeTimeEntryPeriodTableAdapter.Connection = CType(revertConnections(Me._accountEmployeeTimeEntryPeriodTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._accountEmployeeTimeEntryPeriodTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
