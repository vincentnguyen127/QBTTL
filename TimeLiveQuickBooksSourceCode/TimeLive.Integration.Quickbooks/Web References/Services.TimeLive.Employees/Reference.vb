'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace Services.TimeLive.Employees
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="EmployeesSoap", [Namespace]:="http://tempuri.org/"),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(Object()))>  _
    Partial Public Class Employees
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private securedWebServiceHeaderValueField As SecuredWebServiceHeader
        
        Private AddEmployeeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertEmployeeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateEmployeeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserRoleIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeTypeIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeStatusIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeBillingTypeIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeWorkingDayTypeIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeesDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private IsEmployeeExistsByEmailAddressOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.TimeLive.Quickbooks.Integrator.My.MySettings.Default.TimeLive_Integration_Quickbooks_Services_TimeLive_Employees_Employees
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Property SecuredWebServiceHeaderValue() As SecuredWebServiceHeader
            Get
                Return Me.securedWebServiceHeaderValueField
            End Get
            Set
                Me.securedWebServiceHeaderValueField = value
            End Set
        End Property
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event AddEmployeeCompleted As AddEmployeeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeesCompleted As GetEmployeesCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertEmployeeCompleted As InsertEmployeeCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateEmployeeCompleted As UpdateEmployeeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeIdCompleted As GetEmployeeIdCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserRoleIdCompleted As GetUserRoleIdCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeTypeIdCompleted As GetEmployeeTypeIdCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeStatusIdCompleted As GetEmployeeStatusIdCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeBillingTypeIdCompleted As GetEmployeeBillingTypeIdCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeWorkingDayTypeIdCompleted As GetEmployeeWorkingDayTypeIdCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeesDataCompleted As GetEmployeesDataCompletedEventHandler
        
        '''<remarks/>
        Public Event IsEmployeeExistsByEmailAddressCompleted As IsEmployeeExistsByEmailAddressCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecuredWebServiceHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddEmployee", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddEmployee(ByVal objEmployee As Employee) As String
            Dim results() As Object = Me.Invoke("AddEmployee", New Object() {objEmployee})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddEmployeeAsync(ByVal objEmployee As Employee)
            Me.AddEmployeeAsync(objEmployee, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddEmployeeAsync(ByVal objEmployee As Employee, ByVal userState As Object)
            If (Me.AddEmployeeOperationCompleted Is Nothing) Then
                Me.AddEmployeeOperationCompleted = AddressOf Me.OnAddEmployeeOperationCompleted
            End If
            Me.InvokeAsync("AddEmployee", New Object() {objEmployee}, Me.AddEmployeeOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddEmployeeOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddEmployeeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddEmployeeCompleted(Me, New AddEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecuredWebServiceHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmployees", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployees() As Object()
            Dim results() As Object = Me.Invoke("GetEmployees", New Object(-1) {})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeesAsync()
            Me.GetEmployeesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeesAsync(ByVal userState As Object)
            If (Me.GetEmployeesOperationCompleted Is Nothing) Then
                Me.GetEmployeesOperationCompleted = AddressOf Me.OnGetEmployeesOperationCompleted
            End If
            Me.InvokeAsync("GetEmployees", New Object(-1) {}, Me.GetEmployeesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeesCompleted(Me, New GetEmployeesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecuredWebServiceHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertEmployee", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub InsertEmployee( _
                    ByVal Username As String,  _
                    ByVal Password As String,  _
                    ByVal FirstName As String,  _
                    ByVal LastName As String,  _
                    ByVal EmailAddress As String,  _
                    ByVal EmployeeCode As String,  _
                    ByVal AccountDepartmentId As Integer,  _
                    ByVal AccountRoleId As Integer,  _
                    ByVal AccountLocationId As Integer,  _
                    ByVal CountryId As Short,  _
                    ByVal BillingTypeId As Integer,  _
                    ByVal StartDate As Date,  _
                    ByVal DefaultProjectId As Integer,  _
                    ByVal EmployeeManagerId As Integer,  _
                    ByVal TimeZoneId As Byte,  _
                    ByVal CreatedByEmployeeId As Integer,  _
                    ByVal ModifiedByEmployeeId As Integer,  _
                    ByVal EmployeePayTypeId As System.Guid,  _
                    ByVal StatusId As Integer,  _
                    ByVal JobTitle As String,  _
                    ByVal HiredDate As Date,  _
                    ByVal TerminationDate As Date,  _
                    ByVal AccountWorkingDayTypeId As System.Guid,  _
                    ByVal AccountTimeOffPolicyId As System.Guid,  _
                    ByVal TimeOffApprovalTypeId As Integer,  _
                    ByVal AccountHolidayTypeId As System.Guid,  _
                    ByVal IsForcePasswordChange As Boolean,  _
                    ByVal Address1 As String,  _
                    ByVal Address2 As String,  _
                    ByVal State As String,  _
                    ByVal City As String,  _
                    ByVal Zip As String,  _
                    ByVal HomePhoneNo As String,  _
                    ByVal WorkPhoneNo As String,  _
                    ByVal MobilePhoneNo As String,  _
                    ByVal MiddleName As String,  _
                    ByVal Prefix As String,  _
                    ByVal DoNotSendEmail As Boolean)
            Me.Invoke("InsertEmployee", New Object() {Username, Password, FirstName, LastName, EmailAddress, EmployeeCode, AccountDepartmentId, AccountRoleId, AccountLocationId, CountryId, BillingTypeId, StartDate, DefaultProjectId, EmployeeManagerId, TimeZoneId, CreatedByEmployeeId, ModifiedByEmployeeId, EmployeePayTypeId, StatusId, JobTitle, HiredDate, TerminationDate, AccountWorkingDayTypeId, AccountTimeOffPolicyId, TimeOffApprovalTypeId, AccountHolidayTypeId, IsForcePasswordChange, Address1, Address2, State, City, Zip, HomePhoneNo, WorkPhoneNo, MobilePhoneNo, MiddleName, Prefix, DoNotSendEmail})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertEmployeeAsync( _
                    ByVal Username As String,  _
                    ByVal Password As String,  _
                    ByVal FirstName As String,  _
                    ByVal LastName As String,  _
                    ByVal EmailAddress As String,  _
                    ByVal EmployeeCode As String,  _
                    ByVal AccountDepartmentId As Integer,  _
                    ByVal AccountRoleId As Integer,  _
                    ByVal AccountLocationId As Integer,  _
                    ByVal CountryId As Short,  _
                    ByVal BillingTypeId As Integer,  _
                    ByVal StartDate As Date,  _
                    ByVal DefaultProjectId As Integer,  _
                    ByVal EmployeeManagerId As Integer,  _
                    ByVal TimeZoneId As Byte,  _
                    ByVal CreatedByEmployeeId As Integer,  _
                    ByVal ModifiedByEmployeeId As Integer,  _
                    ByVal EmployeePayTypeId As System.Guid,  _
                    ByVal StatusId As Integer,  _
                    ByVal JobTitle As String,  _
                    ByVal HiredDate As Date,  _
                    ByVal TerminationDate As Date,  _
                    ByVal AccountWorkingDayTypeId As System.Guid,  _
                    ByVal AccountTimeOffPolicyId As System.Guid,  _
                    ByVal TimeOffApprovalTypeId As Integer,  _
                    ByVal AccountHolidayTypeId As System.Guid,  _
                    ByVal IsForcePasswordChange As Boolean,  _
                    ByVal Address1 As String,  _
                    ByVal Address2 As String,  _
                    ByVal State As String,  _
                    ByVal City As String,  _
                    ByVal Zip As String,  _
                    ByVal HomePhoneNo As String,  _
                    ByVal WorkPhoneNo As String,  _
                    ByVal MobilePhoneNo As String,  _
                    ByVal MiddleName As String,  _
                    ByVal Prefix As String,  _
                    ByVal DoNotSendEmail As Boolean)
            Me.InsertEmployeeAsync(Username, Password, FirstName, LastName, EmailAddress, EmployeeCode, AccountDepartmentId, AccountRoleId, AccountLocationId, CountryId, BillingTypeId, StartDate, DefaultProjectId, EmployeeManagerId, TimeZoneId, CreatedByEmployeeId, ModifiedByEmployeeId, EmployeePayTypeId, StatusId, JobTitle, HiredDate, TerminationDate, AccountWorkingDayTypeId, AccountTimeOffPolicyId, TimeOffApprovalTypeId, AccountHolidayTypeId, IsForcePasswordChange, Address1, Address2, State, City, Zip, HomePhoneNo, WorkPhoneNo, MobilePhoneNo, MiddleName, Prefix, DoNotSendEmail, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertEmployeeAsync( _
                    ByVal Username As String,  _
                    ByVal Password As String,  _
                    ByVal FirstName As String,  _
                    ByVal LastName As String,  _
                    ByVal EmailAddress As String,  _
                    ByVal EmployeeCode As String,  _
                    ByVal AccountDepartmentId As Integer,  _
                    ByVal AccountRoleId As Integer,  _
                    ByVal AccountLocationId As Integer,  _
                    ByVal CountryId As Short,  _
                    ByVal BillingTypeId As Integer,  _
                    ByVal StartDate As Date,  _
                    ByVal DefaultProjectId As Integer,  _
                    ByVal EmployeeManagerId As Integer,  _
                    ByVal TimeZoneId As Byte,  _
                    ByVal CreatedByEmployeeId As Integer,  _
                    ByVal ModifiedByEmployeeId As Integer,  _
                    ByVal EmployeePayTypeId As System.Guid,  _
                    ByVal StatusId As Integer,  _
                    ByVal JobTitle As String,  _
                    ByVal HiredDate As Date,  _
                    ByVal TerminationDate As Date,  _
                    ByVal AccountWorkingDayTypeId As System.Guid,  _
                    ByVal AccountTimeOffPolicyId As System.Guid,  _
                    ByVal TimeOffApprovalTypeId As Integer,  _
                    ByVal AccountHolidayTypeId As System.Guid,  _
                    ByVal IsForcePasswordChange As Boolean,  _
                    ByVal Address1 As String,  _
                    ByVal Address2 As String,  _
                    ByVal State As String,  _
                    ByVal City As String,  _
                    ByVal Zip As String,  _
                    ByVal HomePhoneNo As String,  _
                    ByVal WorkPhoneNo As String,  _
                    ByVal MobilePhoneNo As String,  _
                    ByVal MiddleName As String,  _
                    ByVal Prefix As String,  _
                    ByVal DoNotSendEmail As Boolean,  _
                    ByVal userState As Object)
            If (Me.InsertEmployeeOperationCompleted Is Nothing) Then
                Me.InsertEmployeeOperationCompleted = AddressOf Me.OnInsertEmployeeOperationCompleted
            End If
            Me.InvokeAsync("InsertEmployee", New Object() {Username, Password, FirstName, LastName, EmailAddress, EmployeeCode, AccountDepartmentId, AccountRoleId, AccountLocationId, CountryId, BillingTypeId, StartDate, DefaultProjectId, EmployeeManagerId, TimeZoneId, CreatedByEmployeeId, ModifiedByEmployeeId, EmployeePayTypeId, StatusId, JobTitle, HiredDate, TerminationDate, AccountWorkingDayTypeId, AccountTimeOffPolicyId, TimeOffApprovalTypeId, AccountHolidayTypeId, IsForcePasswordChange, Address1, Address2, State, City, Zip, HomePhoneNo, WorkPhoneNo, MobilePhoneNo, MiddleName, Prefix, DoNotSendEmail}, Me.InsertEmployeeOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertEmployeeOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertEmployeeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertEmployeeCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecuredWebServiceHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateEmployee", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UpdateEmployee( _
                    ByVal AccountEmployeeId As Integer,  _
                    ByVal Password As String,  _
                    ByVal Prefix As String,  _
                    ByVal FirstName As String,  _
                    ByVal LastName As String,  _
                    ByVal MiddleName As String,  _
                    ByVal EMailAddress As String,  _
                    ByVal EmployeeCode As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal AccountDepartmentId As System.Nullable(Of Integer),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal AccountRoleId As System.Nullable(Of Integer),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal AccountLocationId As System.Nullable(Of Integer),  _
                    ByVal AddressLine1 As String,  _
                    ByVal AddressLine2 As String,  _
                    ByVal State As String,  _
                    ByVal City As String,  _
                    ByVal Zip As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal CountryId As System.Nullable(Of Short),  _
                    ByVal HomePhoneNo As String,  _
                    ByVal WorkPhoneNo As String,  _
                    ByVal MobilePhoneNo As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal BillingTypeId As System.Nullable(Of Integer),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal StartDate As System.Nullable(Of Date),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal TerminationDate As System.Nullable(Of Date),  _
                    ByVal StatusId As Integer,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal IsDeleted As System.Nullable(Of Boolean),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal IsDisabled As System.Nullable(Of Boolean),  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal DefaultProjectId As System.Nullable(Of Integer),  _
                    ByVal EmployeeManagerId As Integer,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal TimeZoneId As System.Nullable(Of Byte),  _
                    ByVal CreatedByEmployeeId As Integer,  _
                    ByVal ModifiedByEmployeeId As Integer,  _
                    ByVal AllowedAccessFromIP As String,  _
                    ByVal EmployeePayTypeId As System.Guid,  _
                    ByVal JobTitle As String,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal HiredDate As System.Nullable(Of Date),  _
                    ByVal AccountWorkingDayTypeId As System.Guid,  _
                    ByVal AccountTimeOffPolicyId As System.Guid,  _
                    ByVal TimeOffApprovalTypeId As Integer,  _
                    ByVal AccountHolidayTypeId As System.Guid,  _
                    <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal IsForcePasswordChange As System.Nullable(Of Boolean),  _
                    ByVal UserInterfaceLanguage As String,  _
                    ByVal IsShowEmployeeProfilePicture As Boolean)
            Me.Invoke("UpdateEmployee", New Object() {AccountEmployeeId, Password, Prefix, FirstName, LastName, MiddleName, EMailAddress, EmployeeCode, AccountDepartmentId, AccountRoleId, AccountLocationId, AddressLine1, AddressLine2, State, City, Zip, CountryId, HomePhoneNo, WorkPhoneNo, MobilePhoneNo, BillingTypeId, StartDate, TerminationDate, StatusId, IsDeleted, IsDisabled, DefaultProjectId, EmployeeManagerId, TimeZoneId, CreatedByEmployeeId, ModifiedByEmployeeId, AllowedAccessFromIP, EmployeePayTypeId, JobTitle, HiredDate, AccountWorkingDayTypeId, AccountTimeOffPolicyId, TimeOffApprovalTypeId, AccountHolidayTypeId, IsForcePasswordChange, UserInterfaceLanguage, IsShowEmployeeProfilePicture})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateEmployeeAsync( _
                    ByVal AccountEmployeeId As Integer,  _
                    ByVal Password As String,  _
                    ByVal Prefix As String,  _
                    ByVal FirstName As String,  _
                    ByVal LastName As String,  _
                    ByVal MiddleName As String,  _
                    ByVal EMailAddress As String,  _
                    ByVal EmployeeCode As String,  _
                    ByVal AccountDepartmentId As System.Nullable(Of Integer),  _
                    ByVal AccountRoleId As System.Nullable(Of Integer),  _
                    ByVal AccountLocationId As System.Nullable(Of Integer),  _
                    ByVal AddressLine1 As String,  _
                    ByVal AddressLine2 As String,  _
                    ByVal State As String,  _
                    ByVal City As String,  _
                    ByVal Zip As String,  _
                    ByVal CountryId As System.Nullable(Of Short),  _
                    ByVal HomePhoneNo As String,  _
                    ByVal WorkPhoneNo As String,  _
                    ByVal MobilePhoneNo As String,  _
                    ByVal BillingTypeId As System.Nullable(Of Integer),  _
                    ByVal StartDate As System.Nullable(Of Date),  _
                    ByVal TerminationDate As System.Nullable(Of Date),  _
                    ByVal StatusId As Integer,  _
                    ByVal IsDeleted As System.Nullable(Of Boolean),  _
                    ByVal IsDisabled As System.Nullable(Of Boolean),  _
                    ByVal DefaultProjectId As System.Nullable(Of Integer),  _
                    ByVal EmployeeManagerId As Integer,  _
                    ByVal TimeZoneId As System.Nullable(Of Byte),  _
                    ByVal CreatedByEmployeeId As Integer,  _
                    ByVal ModifiedByEmployeeId As Integer,  _
                    ByVal AllowedAccessFromIP As String,  _
                    ByVal EmployeePayTypeId As System.Guid,  _
                    ByVal JobTitle As String,  _
                    ByVal HiredDate As System.Nullable(Of Date),  _
                    ByVal AccountWorkingDayTypeId As System.Guid,  _
                    ByVal AccountTimeOffPolicyId As System.Guid,  _
                    ByVal TimeOffApprovalTypeId As Integer,  _
                    ByVal AccountHolidayTypeId As System.Guid,  _
                    ByVal IsForcePasswordChange As System.Nullable(Of Boolean),  _
                    ByVal UserInterfaceLanguage As String,  _
                    ByVal IsShowEmployeeProfilePicture As Boolean)
            Me.UpdateEmployeeAsync(AccountEmployeeId, Password, Prefix, FirstName, LastName, MiddleName, EMailAddress, EmployeeCode, AccountDepartmentId, AccountRoleId, AccountLocationId, AddressLine1, AddressLine2, State, City, Zip, CountryId, HomePhoneNo, WorkPhoneNo, MobilePhoneNo, BillingTypeId, StartDate, TerminationDate, StatusId, IsDeleted, IsDisabled, DefaultProjectId, EmployeeManagerId, TimeZoneId, CreatedByEmployeeId, ModifiedByEmployeeId, AllowedAccessFromIP, EmployeePayTypeId, JobTitle, HiredDate, AccountWorkingDayTypeId, AccountTimeOffPolicyId, TimeOffApprovalTypeId, AccountHolidayTypeId, IsForcePasswordChange, UserInterfaceLanguage, IsShowEmployeeProfilePicture, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateEmployeeAsync( _
                    ByVal AccountEmployeeId As Integer,  _
                    ByVal Password As String,  _
                    ByVal Prefix As String,  _
                    ByVal FirstName As String,  _
                    ByVal LastName As String,  _
                    ByVal MiddleName As String,  _
                    ByVal EMailAddress As String,  _
                    ByVal EmployeeCode As String,  _
                    ByVal AccountDepartmentId As System.Nullable(Of Integer),  _
                    ByVal AccountRoleId As System.Nullable(Of Integer),  _
                    ByVal AccountLocationId As System.Nullable(Of Integer),  _
                    ByVal AddressLine1 As String,  _
                    ByVal AddressLine2 As String,  _
                    ByVal State As String,  _
                    ByVal City As String,  _
                    ByVal Zip As String,  _
                    ByVal CountryId As System.Nullable(Of Short),  _
                    ByVal HomePhoneNo As String,  _
                    ByVal WorkPhoneNo As String,  _
                    ByVal MobilePhoneNo As String,  _
                    ByVal BillingTypeId As System.Nullable(Of Integer),  _
                    ByVal StartDate As System.Nullable(Of Date),  _
                    ByVal TerminationDate As System.Nullable(Of Date),  _
                    ByVal StatusId As Integer,  _
                    ByVal IsDeleted As System.Nullable(Of Boolean),  _
                    ByVal IsDisabled As System.Nullable(Of Boolean),  _
                    ByVal DefaultProjectId As System.Nullable(Of Integer),  _
                    ByVal EmployeeManagerId As Integer,  _
                    ByVal TimeZoneId As System.Nullable(Of Byte),  _
                    ByVal CreatedByEmployeeId As Integer,  _
                    ByVal ModifiedByEmployeeId As Integer,  _
                    ByVal AllowedAccessFromIP As String,  _
                    ByVal EmployeePayTypeId As System.Guid,  _
                    ByVal JobTitle As String,  _
                    ByVal HiredDate As System.Nullable(Of Date),  _
                    ByVal AccountWorkingDayTypeId As System.Guid,  _
                    ByVal AccountTimeOffPolicyId As System.Guid,  _
                    ByVal TimeOffApprovalTypeId As Integer,  _
                    ByVal AccountHolidayTypeId As System.Guid,  _
                    ByVal IsForcePasswordChange As System.Nullable(Of Boolean),  _
                    ByVal UserInterfaceLanguage As String,  _
                    ByVal IsShowEmployeeProfilePicture As Boolean,  _
                    ByVal userState As Object)
            If (Me.UpdateEmployeeOperationCompleted Is Nothing) Then
                Me.UpdateEmployeeOperationCompleted = AddressOf Me.OnUpdateEmployeeOperationCompleted
            End If
            Me.InvokeAsync("UpdateEmployee", New Object() {AccountEmployeeId, Password, Prefix, FirstName, LastName, MiddleName, EMailAddress, EmployeeCode, AccountDepartmentId, AccountRoleId, AccountLocationId, AddressLine1, AddressLine2, State, City, Zip, CountryId, HomePhoneNo, WorkPhoneNo, MobilePhoneNo, BillingTypeId, StartDate, TerminationDate, StatusId, IsDeleted, IsDisabled, DefaultProjectId, EmployeeManagerId, TimeZoneId, CreatedByEmployeeId, ModifiedByEmployeeId, AllowedAccessFromIP, EmployeePayTypeId, JobTitle, HiredDate, AccountWorkingDayTypeId, AccountTimeOffPolicyId, TimeOffApprovalTypeId, AccountHolidayTypeId, IsForcePasswordChange, UserInterfaceLanguage, IsShowEmployeeProfilePicture}, Me.UpdateEmployeeOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateEmployeeOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateEmployeeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateEmployeeCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecuredWebServiceHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmployeeId", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeId(ByVal EmployeeName As String) As Integer
            Dim results() As Object = Me.Invoke("GetEmployeeId", New Object() {EmployeeName})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeIdAsync(ByVal EmployeeName As String)
            Me.GetEmployeeIdAsync(EmployeeName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeIdAsync(ByVal EmployeeName As String, ByVal userState As Object)
            If (Me.GetEmployeeIdOperationCompleted Is Nothing) Then
                Me.GetEmployeeIdOperationCompleted = AddressOf Me.OnGetEmployeeIdOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeId", New Object() {EmployeeName}, Me.GetEmployeeIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeIdCompleted(Me, New GetEmployeeIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecuredWebServiceHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserRoleId", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserRoleId() As Integer
            Dim results() As Object = Me.Invoke("GetUserRoleId", New Object(-1) {})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserRoleIdAsync()
            Me.GetUserRoleIdAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserRoleIdAsync(ByVal userState As Object)
            If (Me.GetUserRoleIdOperationCompleted Is Nothing) Then
                Me.GetUserRoleIdOperationCompleted = AddressOf Me.OnGetUserRoleIdOperationCompleted
            End If
            Me.InvokeAsync("GetUserRoleId", New Object(-1) {}, Me.GetUserRoleIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserRoleIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserRoleIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserRoleIdCompleted(Me, New GetUserRoleIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecuredWebServiceHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmployeeTypeId", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeTypeId() As System.Guid
            Dim results() As Object = Me.Invoke("GetEmployeeTypeId", New Object(-1) {})
            Return CType(results(0),System.Guid)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeTypeIdAsync()
            Me.GetEmployeeTypeIdAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeTypeIdAsync(ByVal userState As Object)
            If (Me.GetEmployeeTypeIdOperationCompleted Is Nothing) Then
                Me.GetEmployeeTypeIdOperationCompleted = AddressOf Me.OnGetEmployeeTypeIdOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeTypeId", New Object(-1) {}, Me.GetEmployeeTypeIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeTypeIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeTypeIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeTypeIdCompleted(Me, New GetEmployeeTypeIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecuredWebServiceHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmployeeStatusId", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeStatusId() As Integer
            Dim results() As Object = Me.Invoke("GetEmployeeStatusId", New Object(-1) {})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeStatusIdAsync()
            Me.GetEmployeeStatusIdAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeStatusIdAsync(ByVal userState As Object)
            If (Me.GetEmployeeStatusIdOperationCompleted Is Nothing) Then
                Me.GetEmployeeStatusIdOperationCompleted = AddressOf Me.OnGetEmployeeStatusIdOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeStatusId", New Object(-1) {}, Me.GetEmployeeStatusIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeStatusIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeStatusIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeStatusIdCompleted(Me, New GetEmployeeStatusIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecuredWebServiceHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmployeeBillingTypeId", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeBillingTypeId() As Integer
            Dim results() As Object = Me.Invoke("GetEmployeeBillingTypeId", New Object(-1) {})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeBillingTypeIdAsync()
            Me.GetEmployeeBillingTypeIdAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeBillingTypeIdAsync(ByVal userState As Object)
            If (Me.GetEmployeeBillingTypeIdOperationCompleted Is Nothing) Then
                Me.GetEmployeeBillingTypeIdOperationCompleted = AddressOf Me.OnGetEmployeeBillingTypeIdOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeBillingTypeId", New Object(-1) {}, Me.GetEmployeeBillingTypeIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeBillingTypeIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeBillingTypeIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeBillingTypeIdCompleted(Me, New GetEmployeeBillingTypeIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecuredWebServiceHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmployeeWorkingDayTypeId", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeeWorkingDayTypeId() As System.Guid
            Dim results() As Object = Me.Invoke("GetEmployeeWorkingDayTypeId", New Object(-1) {})
            Return CType(results(0),System.Guid)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeWorkingDayTypeIdAsync()
            Me.GetEmployeeWorkingDayTypeIdAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeWorkingDayTypeIdAsync(ByVal userState As Object)
            If (Me.GetEmployeeWorkingDayTypeIdOperationCompleted Is Nothing) Then
                Me.GetEmployeeWorkingDayTypeIdOperationCompleted = AddressOf Me.OnGetEmployeeWorkingDayTypeIdOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeeWorkingDayTypeId", New Object(-1) {}, Me.GetEmployeeWorkingDayTypeIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeWorkingDayTypeIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeWorkingDayTypeIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeWorkingDayTypeIdCompleted(Me, New GetEmployeeWorkingDayTypeIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecuredWebServiceHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmployeesData", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeesData() As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetEmployeesData", New Object(-1) {})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeesDataAsync()
            Me.GetEmployeesDataAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeesDataAsync(ByVal userState As Object)
            If (Me.GetEmployeesDataOperationCompleted Is Nothing) Then
                Me.GetEmployeesDataOperationCompleted = AddressOf Me.OnGetEmployeesDataOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeesData", New Object(-1) {}, Me.GetEmployeesDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeesDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeesDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeesDataCompleted(Me, New GetEmployeesDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecuredWebServiceHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsEmployeeExistsByEmailAddress", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function IsEmployeeExistsByEmailAddress(ByVal EmailAddress As String) As Boolean
            Dim results() As Object = Me.Invoke("IsEmployeeExistsByEmailAddress", New Object() {EmailAddress})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub IsEmployeeExistsByEmailAddressAsync(ByVal EmailAddress As String)
            Me.IsEmployeeExistsByEmailAddressAsync(EmailAddress, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub IsEmployeeExistsByEmailAddressAsync(ByVal EmailAddress As String, ByVal userState As Object)
            If (Me.IsEmployeeExistsByEmailAddressOperationCompleted Is Nothing) Then
                Me.IsEmployeeExistsByEmailAddressOperationCompleted = AddressOf Me.OnIsEmployeeExistsByEmailAddressOperationCompleted
            End If
            Me.InvokeAsync("IsEmployeeExistsByEmailAddress", New Object() {EmailAddress}, Me.IsEmployeeExistsByEmailAddressOperationCompleted, userState)
        End Sub
        
        Private Sub OnIsEmployeeExistsByEmailAddressOperationCompleted(ByVal arg As Object)
            If (Not (Me.IsEmployeeExistsByEmailAddressCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent IsEmployeeExistsByEmailAddressCompleted(Me, New IsEmployeeExistsByEmailAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/"),  _
     System.Xml.Serialization.XmlRootAttribute([Namespace]:="http://tempuri.org/", IsNullable:=false)>  _
    Partial Public Class SecuredWebServiceHeader
        Inherits System.Web.Services.Protocols.SoapHeader
        
        Private usernameField As String
        
        Private passwordField As String
        
        Private authenticatedTokenField As String
        
        Private accountIdField As Integer
        
        Private accountEmployeeIdField As Integer
        
        Private anyAttrField() As System.Xml.XmlAttribute
        
        '''<remarks/>
        Public Property Username() As String
            Get
                Return Me.usernameField
            End Get
            Set
                Me.usernameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Password() As String
            Get
                Return Me.passwordField
            End Get
            Set
                Me.passwordField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AuthenticatedToken() As String
            Get
                Return Me.authenticatedTokenField
            End Get
            Set
                Me.authenticatedTokenField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AccountId() As Integer
            Get
                Return Me.accountIdField
            End Get
            Set
                Me.accountIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AccountEmployeeId() As Integer
            Get
                Return Me.accountEmployeeIdField
            End Get
            Set
                Me.accountEmployeeIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAnyAttributeAttribute()>  _
        Public Property AnyAttr() As System.Xml.XmlAttribute()
            Get
                Return Me.anyAttrField
            End Get
            Set
                Me.anyAttrField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class Employee
        
        Private employeeIdField As Integer
        
        Private employeeNameField As String
        
        Private firstNameField As String
        
        Private middleNameField As String
        
        Private lastNameField As String
        
        Private emailAddressField As String
        
        Private address1Field As String
        
        Private address2Field As String
        
        Private cityField As String
        
        Private countryField As String
        
        Private postalCodeField As String
        
        Private stateField As String
        
        Private faxField As String
        
        Private hiredDateField As Date
        
        Private mobileField As String
        
        Private phoneField As String
        
        Private isVendorField As Boolean
        
        '''<remarks/>
        Public Property EmployeeId() As Integer
            Get
                Return Me.employeeIdField
            End Get
            Set
                Me.employeeIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeName() As String
            Get
                Return Me.employeeNameField
            End Get
            Set
                Me.employeeNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FirstName() As String
            Get
                Return Me.firstNameField
            End Get
            Set
                Me.firstNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MiddleName() As String
            Get
                Return Me.middleNameField
            End Get
            Set
                Me.middleNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LastName() As String
            Get
                Return Me.lastNameField
            End Get
            Set
                Me.lastNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmailAddress() As String
            Get
                Return Me.emailAddressField
            End Get
            Set
                Me.emailAddressField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Address1() As String
            Get
                Return Me.address1Field
            End Get
            Set
                Me.address1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Address2() As String
            Get
                Return Me.address2Field
            End Get
            Set
                Me.address2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property City() As String
            Get
                Return Me.cityField
            End Get
            Set
                Me.cityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Country() As String
            Get
                Return Me.countryField
            End Get
            Set
                Me.countryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PostalCode() As String
            Get
                Return Me.postalCodeField
            End Get
            Set
                Me.postalCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property State() As String
            Get
                Return Me.stateField
            End Get
            Set
                Me.stateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Fax() As String
            Get
                Return Me.faxField
            End Get
            Set
                Me.faxField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HiredDate() As Date
            Get
                Return Me.hiredDateField
            End Get
            Set
                Me.hiredDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Mobile() As String
            Get
                Return Me.mobileField
            End Get
            Set
                Me.mobileField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Phone() As String
            Get
                Return Me.phoneField
            End Get
            Set
                Me.phoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsVendor() As Boolean
            Get
                Return Me.isVendorField
            End Get
            Set
                Me.isVendorField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub AddEmployeeCompletedEventHandler(ByVal sender As Object, ByVal e As AddEmployeeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddEmployeeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetEmployeesCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InsertEmployeeCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub UpdateEmployeeCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetEmployeeIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetUserRoleIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserRoleIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserRoleIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetEmployeeTypeIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeTypeIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeTypeIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Guid
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Guid)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetEmployeeStatusIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeStatusIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeStatusIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetEmployeeBillingTypeIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeBillingTypeIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeBillingTypeIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetEmployeeWorkingDayTypeIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeWorkingDayTypeIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeWorkingDayTypeIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Guid
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Guid)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub GetEmployeesDataCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeesDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeesDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub IsEmployeeExistsByEmailAddressCompletedEventHandler(ByVal sender As Object, ByVal e As IsEmployeeExistsByEmailAddressCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class IsEmployeeExistsByEmailAddressCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
End Namespace
