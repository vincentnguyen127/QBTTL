'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace Services.TimeLive.TimeEntries
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="TimeEntriesSoap", [Namespace]:="http://tempuri.org/"),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(Object()))>  _
    Partial Public Class TimeEntries
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private securedWebServiceHeaderValueField As SecuredWebServiceHeader
        
        Private TimeEntryObjectOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TimesheetPeriodForMobileObjectOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TimesheetWorkingDaysObjectOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TimeEntryForMobileObjectOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TimesheetApprovalObjectOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTimesheetPeriodOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAllTimeEntriesByDateRangeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTimesheetWorkingDaysWithHoursOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTimeEntryDetailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTimeEntriesByEmployeeIdAndDateRangeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTimesheetApprovalTypeIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertTimeEntryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddTimeEntryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateTimeEntryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SubmitTimesheetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTimesheetApprovalsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateTimesheetApprovalsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.TimeLive.Quickbooks.Integrator.My.MySettings.Default.TimeLive_Integration_Quickbooks_Services_TimeLive_TimeEntries_TimeEntries
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Property SecuredWebServiceHeaderValue() As SecuredWebServiceHeader
            Get
                Return Me.securedWebServiceHeaderValueField
            End Get
            Set
                Me.securedWebServiceHeaderValueField = value
            End Set
        End Property
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event TimeEntryObjectCompleted As TimeEntryObjectCompletedEventHandler
        
        '''<remarks/>
        Public Event TimesheetPeriodForMobileObjectCompleted As TimesheetPeriodForMobileObjectCompletedEventHandler
        
        '''<remarks/>
        Public Event TimesheetWorkingDaysObjectCompleted As TimesheetWorkingDaysObjectCompletedEventHandler
        
        '''<remarks/>
        Public Event TimeEntryForMobileObjectCompleted As TimeEntryForMobileObjectCompletedEventHandler
        
        '''<remarks/>
        Public Event TimesheetApprovalObjectCompleted As TimesheetApprovalObjectCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTimesheetPeriodCompleted As GetTimesheetPeriodCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAllTimeEntriesByDateRangeCompleted As GetAllTimeEntriesByDateRangeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTimesheetWorkingDaysWithHoursCompleted As GetTimesheetWorkingDaysWithHoursCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTimeEntryDetailCompleted As GetTimeEntryDetailCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTimeEntriesByEmployeeIdAndDateRangeCompleted As GetTimeEntriesByEmployeeIdAndDateRangeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTimesheetApprovalTypeIdCompleted As GetTimesheetApprovalTypeIdCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertTimeEntryCompleted As InsertTimeEntryCompletedEventHandler
        
        '''<remarks/>
        Public Event AddTimeEntryCompleted As AddTimeEntryCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateTimeEntryCompleted As UpdateTimeEntryCompletedEventHandler
        
        '''<remarks/>
        Public Event SubmitTimesheetCompleted As SubmitTimesheetCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTimesheetApprovalsCompleted As GetTimesheetApprovalsCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateTimesheetApprovalsCompleted As UpdateTimesheetApprovalsCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecuredWebServiceHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TimeEntryObject", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TimeEntryObject(ByVal objTimeEntry As TimeEntry) As String
            Dim results() As Object = Me.Invoke("TimeEntryObject", New Object() {objTimeEntry})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TimeEntryObjectAsync(ByVal objTimeEntry As TimeEntry)
            Me.TimeEntryObjectAsync(objTimeEntry, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TimeEntryObjectAsync(ByVal objTimeEntry As TimeEntry, ByVal userState As Object)
            If (Me.TimeEntryObjectOperationCompleted Is Nothing) Then
                Me.TimeEntryObjectOperationCompleted = AddressOf Me.OnTimeEntryObjectOperationCompleted
            End If
            Me.InvokeAsync("TimeEntryObject", New Object() {objTimeEntry}, Me.TimeEntryObjectOperationCompleted, userState)
        End Sub
        
        Private Sub OnTimeEntryObjectOperationCompleted(ByVal arg As Object)
            If (Not (Me.TimeEntryObjectCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TimeEntryObjectCompleted(Me, New TimeEntryObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecuredWebServiceHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TimesheetPeriodForMobileObject", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TimesheetPeriodForMobileObject(ByVal objTimeEntry As TimeSheetPeriodForMobile) As String
            Dim results() As Object = Me.Invoke("TimesheetPeriodForMobileObject", New Object() {objTimeEntry})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TimesheetPeriodForMobileObjectAsync(ByVal objTimeEntry As TimeSheetPeriodForMobile)
            Me.TimesheetPeriodForMobileObjectAsync(objTimeEntry, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TimesheetPeriodForMobileObjectAsync(ByVal objTimeEntry As TimeSheetPeriodForMobile, ByVal userState As Object)
            If (Me.TimesheetPeriodForMobileObjectOperationCompleted Is Nothing) Then
                Me.TimesheetPeriodForMobileObjectOperationCompleted = AddressOf Me.OnTimesheetPeriodForMobileObjectOperationCompleted
            End If
            Me.InvokeAsync("TimesheetPeriodForMobileObject", New Object() {objTimeEntry}, Me.TimesheetPeriodForMobileObjectOperationCompleted, userState)
        End Sub
        
        Private Sub OnTimesheetPeriodForMobileObjectOperationCompleted(ByVal arg As Object)
            If (Not (Me.TimesheetPeriodForMobileObjectCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TimesheetPeriodForMobileObjectCompleted(Me, New TimesheetPeriodForMobileObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecuredWebServiceHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TimesheetWorkingDaysObject", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TimesheetWorkingDaysObject(ByVal objTimeEntry As TimesheetWorkingDays) As String
            Dim results() As Object = Me.Invoke("TimesheetWorkingDaysObject", New Object() {objTimeEntry})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TimesheetWorkingDaysObjectAsync(ByVal objTimeEntry As TimesheetWorkingDays)
            Me.TimesheetWorkingDaysObjectAsync(objTimeEntry, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TimesheetWorkingDaysObjectAsync(ByVal objTimeEntry As TimesheetWorkingDays, ByVal userState As Object)
            If (Me.TimesheetWorkingDaysObjectOperationCompleted Is Nothing) Then
                Me.TimesheetWorkingDaysObjectOperationCompleted = AddressOf Me.OnTimesheetWorkingDaysObjectOperationCompleted
            End If
            Me.InvokeAsync("TimesheetWorkingDaysObject", New Object() {objTimeEntry}, Me.TimesheetWorkingDaysObjectOperationCompleted, userState)
        End Sub
        
        Private Sub OnTimesheetWorkingDaysObjectOperationCompleted(ByVal arg As Object)
            If (Not (Me.TimesheetWorkingDaysObjectCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TimesheetWorkingDaysObjectCompleted(Me, New TimesheetWorkingDaysObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecuredWebServiceHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TimeEntryForMobileObject", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TimeEntryForMobileObject(ByVal objTimeEntry As TimeEntryForMobile) As String
            Dim results() As Object = Me.Invoke("TimeEntryForMobileObject", New Object() {objTimeEntry})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TimeEntryForMobileObjectAsync(ByVal objTimeEntry As TimeEntryForMobile)
            Me.TimeEntryForMobileObjectAsync(objTimeEntry, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TimeEntryForMobileObjectAsync(ByVal objTimeEntry As TimeEntryForMobile, ByVal userState As Object)
            If (Me.TimeEntryForMobileObjectOperationCompleted Is Nothing) Then
                Me.TimeEntryForMobileObjectOperationCompleted = AddressOf Me.OnTimeEntryForMobileObjectOperationCompleted
            End If
            Me.InvokeAsync("TimeEntryForMobileObject", New Object() {objTimeEntry}, Me.TimeEntryForMobileObjectOperationCompleted, userState)
        End Sub
        
        Private Sub OnTimeEntryForMobileObjectOperationCompleted(ByVal arg As Object)
            If (Not (Me.TimeEntryForMobileObjectCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TimeEntryForMobileObjectCompleted(Me, New TimeEntryForMobileObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecuredWebServiceHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TimesheetApprovalObject", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TimesheetApprovalObject(ByVal objTimesheetApproval As TimesheetApprovalObject) As String
            Dim results() As Object = Me.Invoke("TimesheetApprovalObject", New Object() {objTimesheetApproval})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TimesheetApprovalObjectAsync(ByVal objTimesheetApproval As TimesheetApprovalObject)
            Me.TimesheetApprovalObjectAsync(objTimesheetApproval, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TimesheetApprovalObjectAsync(ByVal objTimesheetApproval As TimesheetApprovalObject, ByVal userState As Object)
            If (Me.TimesheetApprovalObjectOperationCompleted Is Nothing) Then
                Me.TimesheetApprovalObjectOperationCompleted = AddressOf Me.OnTimesheetApprovalObjectOperationCompleted
            End If
            Me.InvokeAsync("TimesheetApprovalObject", New Object() {objTimesheetApproval}, Me.TimesheetApprovalObjectOperationCompleted, userState)
        End Sub
        
        Private Sub OnTimesheetApprovalObjectOperationCompleted(ByVal arg As Object)
            If (Not (Me.TimesheetApprovalObjectCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TimesheetApprovalObjectCompleted(Me, New TimesheetApprovalObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecuredWebServiceHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTimesheetPeriod", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTimesheetPeriod(ByVal YearWS As Integer, ByVal MonthWS As Integer, ByVal DayWS As Integer) As Object()
            Dim results() As Object = Me.Invoke("GetTimesheetPeriod", New Object() {YearWS, MonthWS, DayWS})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTimesheetPeriodAsync(ByVal YearWS As Integer, ByVal MonthWS As Integer, ByVal DayWS As Integer)
            Me.GetTimesheetPeriodAsync(YearWS, MonthWS, DayWS, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTimesheetPeriodAsync(ByVal YearWS As Integer, ByVal MonthWS As Integer, ByVal DayWS As Integer, ByVal userState As Object)
            If (Me.GetTimesheetPeriodOperationCompleted Is Nothing) Then
                Me.GetTimesheetPeriodOperationCompleted = AddressOf Me.OnGetTimesheetPeriodOperationCompleted
            End If
            Me.InvokeAsync("GetTimesheetPeriod", New Object() {YearWS, MonthWS, DayWS}, Me.GetTimesheetPeriodOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTimesheetPeriodOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTimesheetPeriodCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTimesheetPeriodCompleted(Me, New GetTimesheetPeriodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecuredWebServiceHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllTimeEntriesByDateRange", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAllTimeEntriesByDateRange(ByVal StartDate As Date, ByVal EndDate As Date) As Object()
            Dim results() As Object = Me.Invoke("GetAllTimeEntriesByDateRange", New Object() {StartDate, EndDate})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAllTimeEntriesByDateRangeAsync(ByVal StartDate As Date, ByVal EndDate As Date)
            Me.GetAllTimeEntriesByDateRangeAsync(StartDate, EndDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAllTimeEntriesByDateRangeAsync(ByVal StartDate As Date, ByVal EndDate As Date, ByVal userState As Object)
            If (Me.GetAllTimeEntriesByDateRangeOperationCompleted Is Nothing) Then
                Me.GetAllTimeEntriesByDateRangeOperationCompleted = AddressOf Me.OnGetAllTimeEntriesByDateRangeOperationCompleted
            End If
            Me.InvokeAsync("GetAllTimeEntriesByDateRange", New Object() {StartDate, EndDate}, Me.GetAllTimeEntriesByDateRangeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAllTimeEntriesByDateRangeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAllTimeEntriesByDateRangeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAllTimeEntriesByDateRangeCompleted(Me, New GetAllTimeEntriesByDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecuredWebServiceHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTimesheetWorkingDaysWithHours", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTimesheetWorkingDaysWithHours(ByVal YearWS As Integer, ByVal MonthWS As Integer, ByVal DayWS As Integer) As Object()
            Dim results() As Object = Me.Invoke("GetTimesheetWorkingDaysWithHours", New Object() {YearWS, MonthWS, DayWS})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTimesheetWorkingDaysWithHoursAsync(ByVal YearWS As Integer, ByVal MonthWS As Integer, ByVal DayWS As Integer)
            Me.GetTimesheetWorkingDaysWithHoursAsync(YearWS, MonthWS, DayWS, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTimesheetWorkingDaysWithHoursAsync(ByVal YearWS As Integer, ByVal MonthWS As Integer, ByVal DayWS As Integer, ByVal userState As Object)
            If (Me.GetTimesheetWorkingDaysWithHoursOperationCompleted Is Nothing) Then
                Me.GetTimesheetWorkingDaysWithHoursOperationCompleted = AddressOf Me.OnGetTimesheetWorkingDaysWithHoursOperationCompleted
            End If
            Me.InvokeAsync("GetTimesheetWorkingDaysWithHours", New Object() {YearWS, MonthWS, DayWS}, Me.GetTimesheetWorkingDaysWithHoursOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTimesheetWorkingDaysWithHoursOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTimesheetWorkingDaysWithHoursCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTimesheetWorkingDaysWithHoursCompleted(Me, New GetTimesheetWorkingDaysWithHoursCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecuredWebServiceHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTimeEntryDetail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTimeEntryDetail(ByVal YearWS As Integer, ByVal MonthWS As Integer, ByVal DayWS As Integer) As Object()
            Dim results() As Object = Me.Invoke("GetTimeEntryDetail", New Object() {YearWS, MonthWS, DayWS})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTimeEntryDetailAsync(ByVal YearWS As Integer, ByVal MonthWS As Integer, ByVal DayWS As Integer)
            Me.GetTimeEntryDetailAsync(YearWS, MonthWS, DayWS, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTimeEntryDetailAsync(ByVal YearWS As Integer, ByVal MonthWS As Integer, ByVal DayWS As Integer, ByVal userState As Object)
            If (Me.GetTimeEntryDetailOperationCompleted Is Nothing) Then
                Me.GetTimeEntryDetailOperationCompleted = AddressOf Me.OnGetTimeEntryDetailOperationCompleted
            End If
            Me.InvokeAsync("GetTimeEntryDetail", New Object() {YearWS, MonthWS, DayWS}, Me.GetTimeEntryDetailOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTimeEntryDetailOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTimeEntryDetailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTimeEntryDetailCompleted(Me, New GetTimeEntryDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecuredWebServiceHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTimeEntriesByEmployeeIdAndDateRange", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTimeEntriesByEmployeeIdAndDateRange(ByVal AccountEmployeeId As Integer, ByVal StartDate As Date, ByVal EndDate As Date) As Object()
            Dim results() As Object = Me.Invoke("GetTimeEntriesByEmployeeIdAndDateRange", New Object() {AccountEmployeeId, StartDate, EndDate})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTimeEntriesByEmployeeIdAndDateRangeAsync(ByVal AccountEmployeeId As Integer, ByVal StartDate As Date, ByVal EndDate As Date)
            Me.GetTimeEntriesByEmployeeIdAndDateRangeAsync(AccountEmployeeId, StartDate, EndDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTimeEntriesByEmployeeIdAndDateRangeAsync(ByVal AccountEmployeeId As Integer, ByVal StartDate As Date, ByVal EndDate As Date, ByVal userState As Object)
            If (Me.GetTimeEntriesByEmployeeIdAndDateRangeOperationCompleted Is Nothing) Then
                Me.GetTimeEntriesByEmployeeIdAndDateRangeOperationCompleted = AddressOf Me.OnGetTimeEntriesByEmployeeIdAndDateRangeOperationCompleted
            End If
            Me.InvokeAsync("GetTimeEntriesByEmployeeIdAndDateRange", New Object() {AccountEmployeeId, StartDate, EndDate}, Me.GetTimeEntriesByEmployeeIdAndDateRangeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTimeEntriesByEmployeeIdAndDateRangeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTimeEntriesByEmployeeIdAndDateRangeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTimeEntriesByEmployeeIdAndDateRangeCompleted(Me, New GetTimeEntriesByEmployeeIdAndDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecuredWebServiceHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTimesheetApprovalTypeId", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTimesheetApprovalTypeId() As Integer
            Dim results() As Object = Me.Invoke("GetTimesheetApprovalTypeId", New Object(-1) {})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTimesheetApprovalTypeIdAsync()
            Me.GetTimesheetApprovalTypeIdAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTimesheetApprovalTypeIdAsync(ByVal userState As Object)
            If (Me.GetTimesheetApprovalTypeIdOperationCompleted Is Nothing) Then
                Me.GetTimesheetApprovalTypeIdOperationCompleted = AddressOf Me.OnGetTimesheetApprovalTypeIdOperationCompleted
            End If
            Me.InvokeAsync("GetTimesheetApprovalTypeId", New Object(-1) {}, Me.GetTimesheetApprovalTypeIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTimesheetApprovalTypeIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTimesheetApprovalTypeIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTimesheetApprovalTypeIdCompleted(Me, New GetTimesheetApprovalTypeIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecuredWebServiceHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertTimeEntry", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub InsertTimeEntry(<System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)> ByVal AccountEmployeeId As System.Nullable(Of Integer), ByVal YearWS As Integer, ByVal MonthWS As Integer, ByVal DayWS As Integer, ByVal AccountProjectId As Integer, ByVal AccountProjectTaskId As Integer, ByVal TotalTime As Double, ByVal Description As String, ByVal Submitted As Boolean)
            Me.Invoke("InsertTimeEntry", New Object() {AccountEmployeeId, YearWS, MonthWS, DayWS, AccountProjectId, AccountProjectTaskId, TotalTime, Description, Submitted})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertTimeEntryAsync(ByVal AccountEmployeeId As System.Nullable(Of Integer), ByVal YearWS As Integer, ByVal MonthWS As Integer, ByVal DayWS As Integer, ByVal AccountProjectId As Integer, ByVal AccountProjectTaskId As Integer, ByVal TotalTime As Double, ByVal Description As String, ByVal Submitted As Boolean)
            Me.InsertTimeEntryAsync(AccountEmployeeId, YearWS, MonthWS, DayWS, AccountProjectId, AccountProjectTaskId, TotalTime, Description, Submitted, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertTimeEntryAsync(ByVal AccountEmployeeId As System.Nullable(Of Integer), ByVal YearWS As Integer, ByVal MonthWS As Integer, ByVal DayWS As Integer, ByVal AccountProjectId As Integer, ByVal AccountProjectTaskId As Integer, ByVal TotalTime As Double, ByVal Description As String, ByVal Submitted As Boolean, ByVal userState As Object)
            If (Me.InsertTimeEntryOperationCompleted Is Nothing) Then
                Me.InsertTimeEntryOperationCompleted = AddressOf Me.OnInsertTimeEntryOperationCompleted
            End If
            Me.InvokeAsync("InsertTimeEntry", New Object() {AccountEmployeeId, YearWS, MonthWS, DayWS, AccountProjectId, AccountProjectTaskId, TotalTime, Description, Submitted}, Me.InsertTimeEntryOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertTimeEntryOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertTimeEntryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertTimeEntryCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecuredWebServiceHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddTimeEntry", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddTimeEntry(ByVal YearWS As Integer, ByVal MonthWS As Integer, ByVal DayWS As Integer, ByVal AccountProjectId As Integer, ByVal AccountProjectTaskId As Integer, ByVal StartTime As String, ByVal EndTime As String, ByVal TotalTime As String, ByVal Description As String, ByVal AccountWorkTypeId As Integer, ByVal AccountCostCenterId As Integer) As String
            Dim results() As Object = Me.Invoke("AddTimeEntry", New Object() {YearWS, MonthWS, DayWS, AccountProjectId, AccountProjectTaskId, StartTime, EndTime, TotalTime, Description, AccountWorkTypeId, AccountCostCenterId})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddTimeEntryAsync(ByVal YearWS As Integer, ByVal MonthWS As Integer, ByVal DayWS As Integer, ByVal AccountProjectId As Integer, ByVal AccountProjectTaskId As Integer, ByVal StartTime As String, ByVal EndTime As String, ByVal TotalTime As String, ByVal Description As String, ByVal AccountWorkTypeId As Integer, ByVal AccountCostCenterId As Integer)
            Me.AddTimeEntryAsync(YearWS, MonthWS, DayWS, AccountProjectId, AccountProjectTaskId, StartTime, EndTime, TotalTime, Description, AccountWorkTypeId, AccountCostCenterId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddTimeEntryAsync(ByVal YearWS As Integer, ByVal MonthWS As Integer, ByVal DayWS As Integer, ByVal AccountProjectId As Integer, ByVal AccountProjectTaskId As Integer, ByVal StartTime As String, ByVal EndTime As String, ByVal TotalTime As String, ByVal Description As String, ByVal AccountWorkTypeId As Integer, ByVal AccountCostCenterId As Integer, ByVal userState As Object)
            If (Me.AddTimeEntryOperationCompleted Is Nothing) Then
                Me.AddTimeEntryOperationCompleted = AddressOf Me.OnAddTimeEntryOperationCompleted
            End If
            Me.InvokeAsync("AddTimeEntry", New Object() {YearWS, MonthWS, DayWS, AccountProjectId, AccountProjectTaskId, StartTime, EndTime, TotalTime, Description, AccountWorkTypeId, AccountCostCenterId}, Me.AddTimeEntryOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddTimeEntryOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddTimeEntryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddTimeEntryCompleted(Me, New AddTimeEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecuredWebServiceHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateTimeEntry", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateTimeEntry(ByVal AccountEmployeeTimeEntryId As Integer, ByVal YearWS As Integer, ByVal MonthWS As Integer, ByVal DayWS As Integer, ByVal AccountProjectId As Integer, ByVal AccountProjectTaskId As Integer, ByVal StartTime As String, ByVal EndTime As String, ByVal TotalTime As String, ByVal Description As String, ByVal AccountWorkTypeId As Integer, ByVal AccountCostCenterId As Integer) As Object
            Dim results() As Object = Me.Invoke("UpdateTimeEntry", New Object() {AccountEmployeeTimeEntryId, YearWS, MonthWS, DayWS, AccountProjectId, AccountProjectTaskId, StartTime, EndTime, TotalTime, Description, AccountWorkTypeId, AccountCostCenterId})
            Return CType(results(0),Object)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateTimeEntryAsync(ByVal AccountEmployeeTimeEntryId As Integer, ByVal YearWS As Integer, ByVal MonthWS As Integer, ByVal DayWS As Integer, ByVal AccountProjectId As Integer, ByVal AccountProjectTaskId As Integer, ByVal StartTime As String, ByVal EndTime As String, ByVal TotalTime As String, ByVal Description As String, ByVal AccountWorkTypeId As Integer, ByVal AccountCostCenterId As Integer)
            Me.UpdateTimeEntryAsync(AccountEmployeeTimeEntryId, YearWS, MonthWS, DayWS, AccountProjectId, AccountProjectTaskId, StartTime, EndTime, TotalTime, Description, AccountWorkTypeId, AccountCostCenterId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateTimeEntryAsync(ByVal AccountEmployeeTimeEntryId As Integer, ByVal YearWS As Integer, ByVal MonthWS As Integer, ByVal DayWS As Integer, ByVal AccountProjectId As Integer, ByVal AccountProjectTaskId As Integer, ByVal StartTime As String, ByVal EndTime As String, ByVal TotalTime As String, ByVal Description As String, ByVal AccountWorkTypeId As Integer, ByVal AccountCostCenterId As Integer, ByVal userState As Object)
            If (Me.UpdateTimeEntryOperationCompleted Is Nothing) Then
                Me.UpdateTimeEntryOperationCompleted = AddressOf Me.OnUpdateTimeEntryOperationCompleted
            End If
            Me.InvokeAsync("UpdateTimeEntry", New Object() {AccountEmployeeTimeEntryId, YearWS, MonthWS, DayWS, AccountProjectId, AccountProjectTaskId, StartTime, EndTime, TotalTime, Description, AccountWorkTypeId, AccountCostCenterId}, Me.UpdateTimeEntryOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateTimeEntryOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateTimeEntryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateTimeEntryCompleted(Me, New UpdateTimeEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecuredWebServiceHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SubmitTimesheet", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SubmitTimesheet(ByVal AccountEmployeeTimeEntryPeriodId As String) As String
            Dim results() As Object = Me.Invoke("SubmitTimesheet", New Object() {AccountEmployeeTimeEntryPeriodId})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SubmitTimesheetAsync(ByVal AccountEmployeeTimeEntryPeriodId As String)
            Me.SubmitTimesheetAsync(AccountEmployeeTimeEntryPeriodId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SubmitTimesheetAsync(ByVal AccountEmployeeTimeEntryPeriodId As String, ByVal userState As Object)
            If (Me.SubmitTimesheetOperationCompleted Is Nothing) Then
                Me.SubmitTimesheetOperationCompleted = AddressOf Me.OnSubmitTimesheetOperationCompleted
            End If
            Me.InvokeAsync("SubmitTimesheet", New Object() {AccountEmployeeTimeEntryPeriodId}, Me.SubmitTimesheetOperationCompleted, userState)
        End Sub
        
        Private Sub OnSubmitTimesheetOperationCompleted(ByVal arg As Object)
            If (Not (Me.SubmitTimesheetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SubmitTimesheetCompleted(Me, New SubmitTimesheetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecuredWebServiceHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTimesheetApprovals", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTimesheetApprovals() As Object()
            Dim results() As Object = Me.Invoke("GetTimesheetApprovals", New Object(-1) {})
            Return CType(results(0),Object())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTimesheetApprovalsAsync()
            Me.GetTimesheetApprovalsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTimesheetApprovalsAsync(ByVal userState As Object)
            If (Me.GetTimesheetApprovalsOperationCompleted Is Nothing) Then
                Me.GetTimesheetApprovalsOperationCompleted = AddressOf Me.OnGetTimesheetApprovalsOperationCompleted
            End If
            Me.InvokeAsync("GetTimesheetApprovals", New Object(-1) {}, Me.GetTimesheetApprovalsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTimesheetApprovalsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTimesheetApprovalsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTimesheetApprovalsCompleted(Me, New GetTimesheetApprovalsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("SecuredWebServiceHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateTimesheetApprovals", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateTimesheetApprovals(ByVal ApprovalList() As Object) As String
            Dim results() As Object = Me.Invoke("UpdateTimesheetApprovals", New Object() {ApprovalList})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateTimesheetApprovalsAsync(ByVal ApprovalList() As Object)
            Me.UpdateTimesheetApprovalsAsync(ApprovalList, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateTimesheetApprovalsAsync(ByVal ApprovalList() As Object, ByVal userState As Object)
            If (Me.UpdateTimesheetApprovalsOperationCompleted Is Nothing) Then
                Me.UpdateTimesheetApprovalsOperationCompleted = AddressOf Me.OnUpdateTimesheetApprovalsOperationCompleted
            End If
            Me.InvokeAsync("UpdateTimesheetApprovals", New Object() {ApprovalList}, Me.UpdateTimesheetApprovalsOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateTimesheetApprovalsOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateTimesheetApprovalsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateTimesheetApprovalsCompleted(Me, New UpdateTimesheetApprovalsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/"),  _
     System.Xml.Serialization.XmlRootAttribute([Namespace]:="http://tempuri.org/", IsNullable:=false)>  _
    Partial Public Class SecuredWebServiceHeader
        Inherits System.Web.Services.Protocols.SoapHeader
        
        Private usernameField As String
        
        Private passwordField As String
        
        Private authenticatedTokenField As String
        
        Private accountIdField As Integer
        
        Private accountEmployeeIdField As Integer
        
        Private anyAttrField() As System.Xml.XmlAttribute
        
        '''<remarks/>
        Public Property Username() As String
            Get
                Return Me.usernameField
            End Get
            Set
                Me.usernameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Password() As String
            Get
                Return Me.passwordField
            End Get
            Set
                Me.passwordField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AuthenticatedToken() As String
            Get
                Return Me.authenticatedTokenField
            End Get
            Set
                Me.authenticatedTokenField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AccountId() As Integer
            Get
                Return Me.accountIdField
            End Get
            Set
                Me.accountIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AccountEmployeeId() As Integer
            Get
                Return Me.accountEmployeeIdField
            End Get
            Set
                Me.accountEmployeeIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAnyAttributeAttribute()>  _
        Public Property AnyAttr() As System.Xml.XmlAttribute()
            Get
                Return Me.anyAttrField
            End Get
            Set
                Me.anyAttrField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class TimesheetApprovalObject
        
        Private employeeNameField As String
        
        Private startDateField As Date
        
        Private endDateField As Date
        
        Private timesheetPeriodIdField As String
        
        Private totalHoursField As String
        
        Private systemApproverTypeIdField As Integer
        
        '''<remarks/>
        Public Property EmployeeName() As String
            Get
                Return Me.employeeNameField
            End Get
            Set
                Me.employeeNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StartDate() As Date
            Get
                Return Me.startDateField
            End Get
            Set
                Me.startDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EndDate() As Date
            Get
                Return Me.endDateField
            End Get
            Set
                Me.endDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TimesheetPeriodId() As String
            Get
                Return Me.timesheetPeriodIdField
            End Get
            Set
                Me.timesheetPeriodIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TotalHours() As String
            Get
                Return Me.totalHoursField
            End Get
            Set
                Me.totalHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SystemApproverTypeId() As Integer
            Get
                Return Me.systemApproverTypeIdField
            End Get
            Set
                Me.systemApproverTypeIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class TimeEntryForMobile
        
        Private accountEmployeeTimeEntryIDField As Integer
        
        Private accountProjectIDField As Integer
        
        Private accountProjectTaskIDField As Integer
        
        Private projectNameField As String
        
        Private taskNameField As String
        
        Private descriptionField As String
        
        Private startTimeField As String
        
        Private endTimeField As String
        
        Private totalHoursField As String
        
        Private showClientInTimesheetField As Boolean
        
        Private showWorkTypeInTimeSheetField As Boolean
        
        Private showCostCenterInTimeSheetField As Boolean
        
        Private showClockStartEndField As Boolean
        
        Private accountClientIdField As Integer
        
        Private clientNameField As String
        
        Private workTypeNameField As String
        
        Private accountWorkTypeIDField As Integer
        
        '''<remarks/>
        Public Property AccountEmployeeTimeEntryID() As Integer
            Get
                Return Me.accountEmployeeTimeEntryIDField
            End Get
            Set
                Me.accountEmployeeTimeEntryIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AccountProjectID() As Integer
            Get
                Return Me.accountProjectIDField
            End Get
            Set
                Me.accountProjectIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AccountProjectTaskID() As Integer
            Get
                Return Me.accountProjectTaskIDField
            End Get
            Set
                Me.accountProjectTaskIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProjectName() As String
            Get
                Return Me.projectNameField
            End Get
            Set
                Me.projectNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TaskName() As String
            Get
                Return Me.taskNameField
            End Get
            Set
                Me.taskNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StartTime() As String
            Get
                Return Me.startTimeField
            End Get
            Set
                Me.startTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EndTime() As String
            Get
                Return Me.endTimeField
            End Get
            Set
                Me.endTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TotalHours() As String
            Get
                Return Me.totalHoursField
            End Get
            Set
                Me.totalHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ShowClientInTimesheet() As Boolean
            Get
                Return Me.showClientInTimesheetField
            End Get
            Set
                Me.showClientInTimesheetField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ShowWorkTypeInTimeSheet() As Boolean
            Get
                Return Me.showWorkTypeInTimeSheetField
            End Get
            Set
                Me.showWorkTypeInTimeSheetField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ShowCostCenterInTimeSheet() As Boolean
            Get
                Return Me.showCostCenterInTimeSheetField
            End Get
            Set
                Me.showCostCenterInTimeSheetField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ShowClockStartEnd() As Boolean
            Get
                Return Me.showClockStartEndField
            End Get
            Set
                Me.showClockStartEndField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AccountClientId() As Integer
            Get
                Return Me.accountClientIdField
            End Get
            Set
                Me.accountClientIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ClientName() As String
            Get
                Return Me.clientNameField
            End Get
            Set
                Me.clientNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property WorkTypeName() As String
            Get
                Return Me.workTypeNameField
            End Get
            Set
                Me.workTypeNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AccountWorkTypeID() As Integer
            Get
                Return Me.accountWorkTypeIDField
            End Get
            Set
                Me.accountWorkTypeIDField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class TimesheetWorkingDays
        
        Private timeEntryDateField As Date
        
        Private totalHoursField As String
        
        Private showClientInTimesheetField As Boolean
        
        Private showWorkTypeInTimeSheetField As Boolean
        
        Private showClockStartEndField As Boolean
        
        Private showCostCenterInTimeSheetField As Boolean
        
        '''<remarks/>
        Public Property TimeEntryDate() As Date
            Get
                Return Me.timeEntryDateField
            End Get
            Set
                Me.timeEntryDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TotalHours() As String
            Get
                Return Me.totalHoursField
            End Get
            Set
                Me.totalHoursField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ShowClientInTimesheet() As Boolean
            Get
                Return Me.showClientInTimesheetField
            End Get
            Set
                Me.showClientInTimesheetField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ShowWorkTypeInTimeSheet() As Boolean
            Get
                Return Me.showWorkTypeInTimeSheetField
            End Get
            Set
                Me.showWorkTypeInTimeSheetField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ShowClockStartEnd() As Boolean
            Get
                Return Me.showClockStartEndField
            End Get
            Set
                Me.showClockStartEndField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ShowCostCenterInTimeSheet() As Boolean
            Get
                Return Me.showCostCenterInTimeSheetField
            End Get
            Set
                Me.showCostCenterInTimeSheetField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class TimeSheetPeriodForMobile
        
        Private startDateField As Date
        
        Private endDateField As Date
        
        Private timesheetPeriodTypeField As String
        
        Private timesheetPeriodIdField As String
        
        Private timesheetStatusField As String
        
        Private disableTimeEntryField As Boolean
        
        '''<remarks/>
        Public Property StartDate() As Date
            Get
                Return Me.startDateField
            End Get
            Set
                Me.startDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EndDate() As Date
            Get
                Return Me.endDateField
            End Get
            Set
                Me.endDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TimesheetPeriodType() As String
            Get
                Return Me.timesheetPeriodTypeField
            End Get
            Set
                Me.timesheetPeriodTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TimesheetPeriodId() As String
            Get
                Return Me.timesheetPeriodIdField
            End Get
            Set
                Me.timesheetPeriodIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TimesheetStatus() As String
            Get
                Return Me.timesheetStatusField
            End Get
            Set
                Me.timesheetStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DisableTimeEntry() As Boolean
            Get
                Return Me.disableTimeEntryField
            End Get
            Set
                Me.disableTimeEntryField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class TimeEntry
        
        Private employeeNameField As String
        
        Private clientNameField As String
        
        Private projectNameField As String
        
        Private taskNameField As String
        
        Private totalTimeField As Date
        
        Private isBillableField As Boolean
        
        Private timeEntryDateField As Date
        
        Private milestoneField As String
        
        Private employeeDepartmentField As String
        
        Private employeeTypeField As String
        
        Private workTypeField As String
        
        Private costCenterField As String
        
        Private taskWithParentField As String
        
        Private taskDescriptionField As String
        
        Private timeEntryDescriptionField As String
        
        '''<remarks/>
        Public Property EmployeeName() As String
            Get
                Return Me.employeeNameField
            End Get
            Set
                Me.employeeNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ClientName() As String
            Get
                Return Me.clientNameField
            End Get
            Set
                Me.clientNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProjectName() As String
            Get
                Return Me.projectNameField
            End Get
            Set
                Me.projectNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TaskName() As String
            Get
                Return Me.taskNameField
            End Get
            Set
                Me.taskNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TotalTime() As Date
            Get
                Return Me.totalTimeField
            End Get
            Set
                Me.totalTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsBillable() As Boolean
            Get
                Return Me.isBillableField
            End Get
            Set
                Me.isBillableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TimeEntryDate() As Date
            Get
                Return Me.timeEntryDateField
            End Get
            Set
                Me.timeEntryDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Milestone() As String
            Get
                Return Me.milestoneField
            End Get
            Set
                Me.milestoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeDepartment() As String
            Get
                Return Me.employeeDepartmentField
            End Get
            Set
                Me.employeeDepartmentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmployeeType() As String
            Get
                Return Me.employeeTypeField
            End Get
            Set
                Me.employeeTypeField = value
            End Set
        End Property

        '''<remarks/>
        Public Property WorkType() As String
            Get
                Return Me.workTypeField
            End Get
            Set
                Me.workTypeField = Value
            End Set
        End Property

        '''<remarks/>
        Public Property CostCenter() As String
            Get
                Return Me.costCenterField
            End Get
            Set
                Me.costCenterField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TaskWithParent() As String
            Get
                Return Me.taskWithParentField
            End Get
            Set
                Me.taskWithParentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TaskDescription() As String
            Get
                Return Me.taskDescriptionField
            End Get
            Set
                Me.taskDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TimeEntryDescription() As String
            Get
                Return Me.timeEntryDescriptionField
            End Get
            Set
                Me.timeEntryDescriptionField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub TimeEntryObjectCompletedEventHandler(ByVal sender As Object, ByVal e As TimeEntryObjectCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TimeEntryObjectCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub TimesheetPeriodForMobileObjectCompletedEventHandler(ByVal sender As Object, ByVal e As TimesheetPeriodForMobileObjectCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TimesheetPeriodForMobileObjectCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub TimesheetWorkingDaysObjectCompletedEventHandler(ByVal sender As Object, ByVal e As TimesheetWorkingDaysObjectCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TimesheetWorkingDaysObjectCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub TimeEntryForMobileObjectCompletedEventHandler(ByVal sender As Object, ByVal e As TimeEntryForMobileObjectCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TimeEntryForMobileObjectCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub TimesheetApprovalObjectCompletedEventHandler(ByVal sender As Object, ByVal e As TimesheetApprovalObjectCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TimesheetApprovalObjectCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub GetTimesheetPeriodCompletedEventHandler(ByVal sender As Object, ByVal e As GetTimesheetPeriodCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTimesheetPeriodCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub GetAllTimeEntriesByDateRangeCompletedEventHandler(ByVal sender As Object, ByVal e As GetAllTimeEntriesByDateRangeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAllTimeEntriesByDateRangeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub GetTimesheetWorkingDaysWithHoursCompletedEventHandler(ByVal sender As Object, ByVal e As GetTimesheetWorkingDaysWithHoursCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTimesheetWorkingDaysWithHoursCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub GetTimeEntryDetailCompletedEventHandler(ByVal sender As Object, ByVal e As GetTimeEntryDetailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTimeEntryDetailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub GetTimeEntriesByEmployeeIdAndDateRangeCompletedEventHandler(ByVal sender As Object, ByVal e As GetTimeEntriesByEmployeeIdAndDateRangeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTimeEntriesByEmployeeIdAndDateRangeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub GetTimesheetApprovalTypeIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetTimesheetApprovalTypeIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTimesheetApprovalTypeIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub InsertTimeEntryCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub AddTimeEntryCompletedEventHandler(ByVal sender As Object, ByVal e As AddTimeEntryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddTimeEntryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub UpdateTimeEntryCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateTimeEntryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateTimeEntryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub SubmitTimesheetCompletedEventHandler(ByVal sender As Object, ByVal e As SubmitTimesheetCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SubmitTimesheetCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub GetTimesheetApprovalsCompletedEventHandler(ByVal sender As Object, ByVal e As GetTimesheetApprovalsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTimesheetApprovalsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")>  _
    Public Delegate Sub UpdateTimesheetApprovalsCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateTimesheetApprovalsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateTimesheetApprovalsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
